{"ast":null,"code":"import _slicedToArray from \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\pages\\\\NoticeListPage.js\";\n\nimport React, { useState } from \"react\";\nimport { Container, styleTableContainer, styleButton } from '../style.js';\nimport { Table, TableHead, TableFooter, TableContainer, TableBody, Paper, TableRow, TableCell, TablePagination, Button } from '@mui/material';\nimport { Link, useNavigate } from \"react-router-dom\";\n\nvar NoticeListPage = function NoticeListPage(props) {\n  var noticeDataList = [{\n    id: 1,\n    title: '제목1',\n    content: '내용1',\n    username: '이름1',\n    createdAt: '2022.07.27'\n  }, {\n    id: 2,\n    title: '제목2',\n    content: '내용2',\n    username: '이름2',\n    createdAt: '2022.07.27'\n  }, {\n    id: 3,\n    title: '제목3',\n    content: '내용3',\n    username: '이름3',\n    createdAt: '2022.07.27'\n  }];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  var navigate = useNavigate();\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n    handleChangeRowsPerPage(); // 일단 여기에 추가해둠\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }; // const navigate = useNavigate();\n  // const goNoticeDetail = (id) => {\n  //   navigate(\"/\"+id)\n  // };\n  // const { onChangePage, onChangeRowsPerPage } = props;\n  // constonChangeRowsPerPage.bind(props);\n\n\n  var goCreateNoticePage = function goCreateNoticePage() {\n    navigate(\"/board/create\");\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"\\uACF5\\uC9C0\\uC0AC\\uD56D\"), /*#__PURE__*/React.createElement(TableContainer, {\n    style: styleTableContainer,\n    component: Paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"\\uAE00 \\uBC88\\uD638\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uBAA9\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"\\uC791\\uC131\\uC77C\\uC790\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, noticeDataList.slice(page * rowsPerPage, (page + 1) * rowsPerPage).map(function (_ref, i) {\n    var id = _ref.id,\n        title = _ref.title,\n        createdAt = _ref.createdAt;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, page * rowsPerPage + i + 1), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/board/\".concat(id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 47\n      }\n    }, title)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, createdAt));\n  })), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    page: page,\n    count: Math.ceil(noticeDataList.length / rowsPerPage),\n    rowsPerPage: rowsPerPage,\n    onPageChange: handleChangePage // onChangeRowsPerPage={handleChangeRowsPerPage}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Button, {\n    style: styleButton,\n    onClick: goCreateNoticePage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"\\uC791\\uC131\\uD558\\uAE30\"));\n};\n\nexport default NoticeListPage;","map":{"version":3,"names":["React","useState","Container","styleTableContainer","styleButton","Table","TableHead","TableFooter","TableContainer","TableBody","Paper","TableRow","TableCell","TablePagination","Button","Link","useNavigate","NoticeListPage","props","noticeDataList","id","title","content","username","createdAt","page","setPage","rowsPerPage","setRowsPerPage","navigate","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","goCreateNoticePage","slice","map","i","Math","ceil","length"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/pages/NoticeListPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, styleTableContainer, styleButton } from '../style.js';\r\nimport { Table, TableHead, TableFooter, TableContainer, TableBody, Paper, TableRow, TableCell, TablePagination, Button } from '@mui/material';\r\nimport { Link, useNavigate } from  \"react-router-dom\";\r\n\r\nconst NoticeListPage = (props) => {\r\n\r\n  const noticeDataList = [\r\n    {\r\n      id: 1,\r\n      title: '제목1',\r\n      content: '내용1',\r\n      username: '이름1',\r\n      createdAt: '2022.07.27',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: '제목2',\r\n      content: '내용2',\r\n      username: '이름2',\r\n      createdAt: '2022.07.27',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: '제목3',\r\n      content: '내용3',\r\n      username: '이름3',\r\n      createdAt: '2022.07.27',\r\n    },\r\n  ];\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    handleChangeRowsPerPage(); // 일단 여기에 추가해둠\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  \r\n  // const navigate = useNavigate();\r\n\r\n  // const goNoticeDetail = (id) => {\r\n  //   navigate(\"/\"+id)\r\n  // };\r\n  // const { onChangePage, onChangeRowsPerPage } = props;\r\n  // constonChangeRowsPerPage.bind(props);\r\n  \r\n  const goCreateNoticePage = () => {\r\n    navigate(\"/board/create\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>공지사항</h2>\r\n      <TableContainer style={styleTableContainer} component={Paper}>\r\n        <Table size=\"medium\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>글 번호</TableCell>\r\n              <TableCell align=\"center\">제목</TableCell>\r\n              <TableCell align=\"right\">작성일자</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n            <TableBody>\r\n              {noticeDataList\r\n                .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\r\n                .map(({ id, title, createdAt }, i) => (\r\n                  <TableRow key={id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {page * rowsPerPage + i + 1}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\"><Link to={`/board/${id}`}>{title}</Link></TableCell>\r\n                    <TableCell align=\"right\">{createdAt}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                page={page}\r\n                count={Math.ceil(noticeDataList.length/rowsPerPage)}\r\n                rowsPerPage={rowsPerPage}\r\n                onPageChange={handleChangePage}\r\n                // onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n      <Button style={styleButton} onClick={goCreateNoticePage}>작성하기</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NoticeListPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}