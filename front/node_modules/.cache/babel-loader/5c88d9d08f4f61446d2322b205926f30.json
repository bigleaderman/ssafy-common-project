{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebRtcStats = void 0;\n\nvar OpenViduLogger_1 = require(\"../Logger/OpenViduLogger\");\n\nvar Platform_1 = require(\"../Utils/Platform\");\n/**\n * @hidden\n */\n\n\nvar logger = OpenViduLogger_1.OpenViduLogger.getInstance();\n/**\n * @hidden\n */\n\nvar platform;\n;\n\nvar WebRtcStats =\n/** @class */\nfunction () {\n  function WebRtcStats(stream) {\n    this.stream = stream;\n    this.STATS_ITEM_NAME = 'webrtc-stats-config';\n    this.webRtcStatsEnabled = false;\n    this.statsInterval = 1;\n    platform = Platform_1.PlatformUtils.getInstance();\n  }\n\n  WebRtcStats.prototype.isEnabled = function () {\n    return this.webRtcStatsEnabled;\n  };\n\n  WebRtcStats.prototype.initWebRtcStats = function () {\n    var _this = this;\n\n    var webrtcObj = localStorage.getItem(this.STATS_ITEM_NAME);\n\n    if (!!webrtcObj) {\n      this.webRtcStatsEnabled = true;\n      var webrtcStatsConfig = JSON.parse(webrtcObj); // webrtc object found in local storage\n\n      logger.warn('WebRtc stats enabled for stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId);\n      logger.warn('localStorage item: ' + JSON.stringify(webrtcStatsConfig));\n      this.POST_URL = webrtcStatsConfig.httpEndpoint;\n      this.statsInterval = webrtcStatsConfig.interval; // Interval in seconds\n\n      this.webRtcStatsIntervalId = setInterval(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , this.sendStatsToHttpEndpoint()];\n\n              case 1:\n                _a.sent();\n\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }, this.statsInterval * 1000);\n    } else {\n      logger.debug('WebRtc stats not enabled');\n    }\n  }; // {\n  // \"localCandidate\": {\n  //     \"id\": \"RTCIceCandidate_/r4P1y2Q\",\n  //     \"timestamp\": 1616080155617,\n  //     \"type\": \"local-candidate\",\n  //     \"transportId\": \"RTCTransport_0_1\",\n  //     \"isRemote\": false,\n  //     \"networkType\": \"wifi\",\n  //     \"ip\": \"123.45.67.89\",\n  //     \"port\": 63340,\n  //     \"protocol\": \"udp\",\n  //     \"candidateType\": \"srflx\",\n  //     \"priority\": 1686052607,\n  //     \"deleted\": false,\n  //     \"raw\": [\n  //     \"candidate:3345412921 1 udp 1686052607 123.45.67.89 63340 typ srflx raddr 192.168.1.31 rport 63340 generation 0 ufrag 0ZtT network-id 1 network-cost 10\",\n  //     \"candidate:58094482 1 udp 41885695 98.76.54.32 44431 typ relay raddr 123.45.67.89 rport 63340 generation 0 ufrag 0ZtT network-id 1 network-cost 10\"\n  //     ]\n  // },\n  // \"remoteCandidate\": {\n  //     \"id\": \"RTCIceCandidate_1YO18gph\",\n  //     \"timestamp\": 1616080155617,\n  //     \"type\": \"remote-candidate\",\n  //     \"transportId\": \"RTCTransport_0_1\",\n  //     \"isRemote\": true,\n  //     \"ip\": \"12.34.56.78\",\n  //     \"port\": 64989,\n  //     \"protocol\": \"udp\",\n  //     \"candidateType\": \"srflx\",\n  //     \"priority\": 1679819263,\n  //     \"deleted\": false,\n  //     \"raw\": [\n  //     \"candidate:16 1 UDP 1679819263 12.34.56.78 64989 typ srflx raddr 172.19.0.1 rport 64989\",\n  //     \"candidate:16 1 UDP 1679819263 12.34.56.78 64989 typ srflx raddr 172.19.0.1 rport 64989\"\n  //     ]\n  // }\n  // }\n  // Have been tested in:\n  //   - Linux Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 74.0.3911.218\n  //       - Firefox 86\n  //       - Microsoft Edge 91.0.825.0\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - Windows Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 74.0.3911.232\n  //       - Firefox 86.0.1\n  //       - Microsoft Edge 89.0.774.54\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - MacOS Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Firefox 87.0\n  //       - Opera 75.0.3969.93\n  //       - Microsoft Edge 89.0.774.57\n  //       - Safari 14.0 (14610.1.28.1.9)\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - Android:\n  //       - Chrome Mobile 89.0.4389.90\n  //       - Opera 62.3.3146.57763\n  //       - Firefox Mobile 86.6.1\n  //       - Microsoft Edge Mobile 46.02.4.5147\n  //       - Ionic 5\n  //       - React Native 0.64\n  //   - iOS:\n  //       - Safari Mobile\n  //       - ¿Ionic?\n  //       - ¿React Native?\n\n\n  WebRtcStats.prototype.getSelectedIceCandidateInfo = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var statsReport, transportStat, candidatePairs, localCandidates, remoteCandidates, selectedCandidatePair, selectedCandidatePairId, length_1, iterator, i, candidatePair, localCandidateId, remoteCandidateId, finalLocalCandidate, candList, cand, _i, cand_1, c, finalRemoteCandidate, candList, cand, _a, cand_2, c;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.stream.getRTCPeerConnection().getStats()];\n\n            case 1:\n              statsReport = _b.sent();\n              candidatePairs = new Map();\n              localCandidates = new Map();\n              remoteCandidates = new Map();\n              statsReport.forEach(function (stat) {\n                if (stat.type === 'transport' && (platform.isChromium() || platform.isSafariBrowser() || platform.isReactNative())) {\n                  transportStat = stat;\n                }\n\n                switch (stat.type) {\n                  case 'candidate-pair':\n                    candidatePairs.set(stat.id, stat);\n                    break;\n\n                  case 'local-candidate':\n                    localCandidates.set(stat.id, stat);\n                    break;\n\n                  case 'remote-candidate':\n                    remoteCandidates.set(stat.id, stat);\n                    break;\n                }\n              });\n\n              if (transportStat != null) {\n                selectedCandidatePairId = transportStat.selectedCandidatePairId;\n                selectedCandidatePair = candidatePairs.get(selectedCandidatePairId);\n              } else {\n                length_1 = candidatePairs.size;\n                iterator = candidatePairs.values();\n\n                for (i = 0; i < length_1; i++) {\n                  candidatePair = iterator.next().value;\n\n                  if (candidatePair['selected']) {\n                    selectedCandidatePair = candidatePair;\n                    break;\n                  }\n                }\n              }\n\n              localCandidateId = selectedCandidatePair.localCandidateId;\n              remoteCandidateId = selectedCandidatePair.remoteCandidateId;\n              finalLocalCandidate = localCandidates.get(localCandidateId);\n\n              if (!!finalLocalCandidate) {\n                candList = this.stream.getLocalIceCandidateList();\n                cand = candList.filter(function (c) {\n                  return !!c.candidate && (c.candidate.indexOf(finalLocalCandidate.ip) >= 0 || c.candidate.indexOf(finalLocalCandidate.address) >= 0) && c.candidate.indexOf(finalLocalCandidate.port) >= 0;\n                });\n                finalLocalCandidate.raw = [];\n\n                for (_i = 0, cand_1 = cand; _i < cand_1.length; _i++) {\n                  c = cand_1[_i];\n                  finalLocalCandidate.raw.push(c.candidate);\n                }\n              } else {\n                finalLocalCandidate = 'ERROR: No active local ICE candidate. Probably ICE-TCP is being used';\n              }\n\n              finalRemoteCandidate = remoteCandidates.get(remoteCandidateId);\n\n              if (!!finalRemoteCandidate) {\n                candList = this.stream.getRemoteIceCandidateList();\n                cand = candList.filter(function (c) {\n                  return !!c.candidate && (c.candidate.indexOf(finalRemoteCandidate.ip) >= 0 || c.candidate.indexOf(finalRemoteCandidate.address) >= 0) && c.candidate.indexOf(finalRemoteCandidate.port) >= 0;\n                });\n                finalRemoteCandidate.raw = [];\n\n                for (_a = 0, cand_2 = cand; _a < cand_2.length; _a++) {\n                  c = cand_2[_a];\n                  finalRemoteCandidate.raw.push(c.candidate);\n                }\n              } else {\n                finalRemoteCandidate = 'ERROR: No active remote ICE candidate. Probably ICE-TCP is being used';\n              }\n\n              return [2\n              /*return*/\n              , resolve({\n                localCandidate: finalLocalCandidate,\n                remoteCandidate: finalRemoteCandidate\n              })];\n          }\n        });\n      });\n    });\n  };\n\n  WebRtcStats.prototype.stopWebRtcStats = function () {\n    if (this.webRtcStatsEnabled) {\n      clearInterval(this.webRtcStatsIntervalId);\n      logger.warn('WebRtc stats stopped for disposed stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId);\n    }\n  };\n\n  WebRtcStats.prototype.sendStats = function (url, response) {\n    return __awaiter(this, void 0, void 0, function () {\n      var configuration, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            configuration = {\n              headers: {\n                'Content-type': 'application/json'\n              },\n              body: JSON.stringify(response),\n              method: 'POST'\n            };\n            return [4\n            /*yield*/\n            , fetch(url, configuration)];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_1 = _a.sent();\n            logger.error(\"sendStats error: \".concat(JSON.stringify(error_1)));\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  WebRtcStats.prototype.sendStatsToHttpEndpoint = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var webrtcStats, response, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.getCommonStats()];\n\n          case 1:\n            webrtcStats = _a.sent();\n            response = this.generateJSONStatsResponse(webrtcStats);\n            return [4\n            /*yield*/\n            , this.sendStats(this.POST_URL, response)];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_2 = _a.sent();\n            logger.log(error_2);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // Have been tested in:\n  //   - Linux Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 74.0.3911.218\n  //       - Firefox 86\n  //       - Microsoft Edge 91.0.825.0\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - Windows Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 74.0.3911.232\n  //       - Firefox 86.0.1\n  //       - Microsoft Edge 89.0.774.54\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - MacOS Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 75.0.3969.93\n  //       - Firefox 87.0\n  //       - Microsoft Edge 89.0.774.57\n  //       - Safari 14.0 (14610.1.28.1.9)\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - Android:\n  //       - Chrome Mobile 89.0.4389.90\n  //       - Opera 62.3.3146.57763\n  //       - Firefox Mobile 86.6.1\n  //       - Microsoft Edge Mobile 46.02.4.5147\n  //       - Ionic 5\n  //       - React Native 0.64\n  //   - iOS:\n  //       - Safari Mobile\n  //       - ¿Ionic?\n  //       - ¿React Native?\n\n\n  WebRtcStats.prototype.getCommonStats = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var statsReport, response_1, videoTrackStats_1, candidatePairStats_1, error_3;\n\n            var _this = this;\n\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  _a.trys.push([0, 2,, 3]);\n\n                  return [4\n                  /*yield*/\n                  , this.stream.getRTCPeerConnection().getStats()];\n\n                case 1:\n                  statsReport = _a.sent();\n                  response_1 = this.getWebRtcStatsResponseOutline();\n                  videoTrackStats_1 = ['framesReceived', 'framesDropped', 'framesSent', 'frameHeight', 'frameWidth'];\n                  candidatePairStats_1 = ['availableOutgoingBitrate', 'currentRoundTripTime'];\n                  statsReport.forEach(function (stat) {\n                    var mediaType = stat.mediaType != null ? stat.mediaType : stat.kind;\n\n                    var addStat = function (direction, key) {\n                      if (stat[key] != null && response_1[direction] != null) {\n                        if (!mediaType && videoTrackStats_1.indexOf(key) > -1) {\n                          mediaType = 'video';\n                        }\n\n                        if (direction != null && mediaType != null && key != null && response_1[direction][mediaType] != null) {\n                          response_1[direction][mediaType][key] = Number(stat[key]);\n                        } else if (direction != null && key != null && candidatePairStats_1.includes(key)) {\n                          // candidate-pair-stats\n                          response_1[direction][key] = Number(stat[key]);\n                        }\n                      }\n                    };\n\n                    switch (stat.type) {\n                      case \"outbound-rtp\":\n                        addStat('outbound', 'bytesSent');\n                        addStat('outbound', 'packetsSent');\n                        addStat('outbound', 'framesEncoded');\n                        addStat('outbound', 'nackCount');\n                        addStat('outbound', 'firCount');\n                        addStat('outbound', 'pliCount');\n                        addStat('outbound', 'qpSum');\n                        break;\n\n                      case \"inbound-rtp\":\n                        addStat('inbound', 'bytesReceived');\n                        addStat('inbound', 'packetsReceived');\n                        addStat('inbound', 'packetsLost');\n                        addStat('inbound', 'jitter');\n                        addStat('inbound', 'framesDecoded');\n                        addStat('inbound', 'nackCount');\n                        addStat('inbound', 'firCount');\n                        addStat('inbound', 'pliCount');\n                        break;\n\n                      case 'track':\n                        addStat('inbound', 'jitterBufferDelay');\n                        addStat('inbound', 'framesReceived');\n                        addStat('outbound', 'framesDropped');\n                        addStat('outbound', 'framesSent');\n                        addStat(_this.stream.isLocal() ? 'outbound' : 'inbound', 'frameHeight');\n                        addStat(_this.stream.isLocal() ? 'outbound' : 'inbound', 'frameWidth');\n                        break;\n\n                      case 'candidate-pair':\n                        addStat('candidatepair', 'currentRoundTripTime');\n                        addStat('candidatepair', 'availableOutgoingBitrate');\n                        break;\n                    }\n                  }); // Delete candidatepair from response if null\n\n                  if (!(response_1 === null || response_1 === void 0 ? void 0 : response_1.candidatepair) || Object.keys(response_1.candidatepair).length === 0) {\n                    delete response_1.candidatepair;\n                  }\n\n                  return [2\n                  /*return*/\n                  , resolve(response_1)];\n\n                case 2:\n                  error_3 = _a.sent();\n                  logger.error('Error getting common stats: ', error_3);\n                  return [2\n                  /*return*/\n                  , reject(error_3)];\n\n                case 3:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        })];\n      });\n    });\n  };\n\n  WebRtcStats.prototype.generateJSONStatsResponse = function (stats) {\n    return {\n      '@timestamp': new Date().toISOString(),\n      participant_id: this.stream.connection.data,\n      session_id: this.stream.session.sessionId,\n      platform: platform.getName(),\n      platform_description: platform.getDescription(),\n      stream: 'webRTC',\n      webrtc_stats: stats\n    };\n  };\n\n  WebRtcStats.prototype.getWebRtcStatsResponseOutline = function () {\n    if (this.stream.isLocal()) {\n      return {\n        outbound: {\n          audio: {},\n          video: {}\n        },\n        candidatepair: {}\n      };\n    } else {\n      return {\n        inbound: {\n          audio: {},\n          video: {}\n        }\n      };\n    }\n  };\n\n  return WebRtcStats;\n}();\n\nexports.WebRtcStats = WebRtcStats;","map":{"version":3,"mappings":"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","names":["logger","OpenViduLogger_1","getInstance","platform","stream","Platform_1","WebRtcStats","webRtcStatsEnabled","webrtcObj","localStorage","getItem","STATS_ITEM_NAME","webrtcStatsConfig","JSON","parse","warn","streamId","connection","connectionId","stringify","POST_URL","httpEndpoint","statsInterval","interval","webRtcStatsIntervalId","setInterval","sendStatsToHttpEndpoint","_a","debug","Promise","resolve","reject","getRTCPeerConnection","getStats","statsReport","_b","candidatePairs","Map","localCandidates","remoteCandidates","forEach","stat","type","isChromium","isSafariBrowser","isReactNative","transportStat","set","id","selectedCandidatePairId","selectedCandidatePair","get","length_1","size","iterator","values","i","candidatePair","next","value","localCandidateId","remoteCandidateId","finalLocalCandidate","candList","getLocalIceCandidateList","cand","filter","c","candidate","indexOf","ip","address","port","raw","cand_1","_i","push","finalRemoteCandidate","getRemoteIceCandidateList","cand_2","localCandidate","remoteCandidate","clearInterval","url","response","configuration","headers","body","method","fetch","error","error_1","getCommonStats","webrtcStats","generateJSONStatsResponse","sendStats","log","error_2","response_1","getWebRtcStatsResponseOutline","videoTrackStats_1","candidatePairStats_1","mediaType","kind","addStat","direction","key","Number","includes","_this","isLocal","candidatepair","Object","keys","length","error_3","stats","Date","toISOString","participant_id","data","session_id","session","sessionId","getName","platform_description","getDescription","webrtc_stats","outbound","audio","video","inbound","exports"],"sources":["C:\\SSAFY\\2nd semester\\S07P12D106\\front\\node_modules\\openvidu-browser\\src\\OpenViduInternal\\WebRtcStats\\WebRtcStats.ts"],"sourcesContent":["/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n// tslint:disable:no-string-literal\n\nimport { Stream } from '../../OpenVidu/Stream';\nimport { OpenViduLogger } from '../Logger/OpenViduLogger';\nimport { PlatformUtils } from '../Utils/Platform';\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n/**\n * @hidden\n */\nlet platform: PlatformUtils;\n\ninterface WebrtcStatsConfig {\n    interval: number,\n    httpEndpoint: string\n}\n\ninterface JSONStatsResponse {\n    '@timestamp': string,\n    participant_id: string,\n    session_id: string,\n    platform: string,\n    platform_description: string,\n    stream: string,\n    webrtc_stats: IWebrtcStats\n}\n\n/**\n * Common WebRtcSTats for latest Chromium and Firefox versions\n */\ninterface IWebrtcStats {\n    inbound?: {\n        audio: {\n            bytesReceived: number,\n            packetsReceived: number,\n            packetsLost: number,\n            jitter: number\n        } | {},\n        video: {\n            bytesReceived: number,\n            packetsReceived: number,\n            packetsLost: number,\n            jitter?: number, // Firefox\n            jitterBufferDelay?: number, // Chrome\n            framesDecoded: number,\n            firCount: number,\n            nackCount: number,\n            pliCount: number,\n            frameHeight?: number, // Chrome\n            frameWidth?: number, // Chrome\n            framesDropped?: number, // Chrome\n            framesReceived?: number // Chrome\n        } | {}\n    },\n    outbound?: {\n        audio: {\n            bytesSent: number,\n            packetsSent: number,\n        } | {},\n        video: {\n            bytesSent: number,\n            packetsSent: number,\n            firCount: number,\n            framesEncoded: number,\n            nackCount: number,\n            pliCount: number,\n            qpSum: number,\n            frameHeight?: number, // Chrome\n            frameWidth?: number, // Chrome\n            framesSent?: number // Chrome\n        } | {}\n    },\n    candidatepair?: {\n        currentRoundTripTime?: number // Chrome\n        availableOutgoingBitrate?: number //Chrome\n        // availableIncomingBitrate?: number // No support for any browsers (https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/availableIncomingBitrate)\n    }\n};\n\nexport class WebRtcStats {\n\n    private readonly STATS_ITEM_NAME = 'webrtc-stats-config';\n\n    private webRtcStatsEnabled = false;\n    private webRtcStatsIntervalId: NodeJS.Timer;\n    private statsInterval = 1;\n    private POST_URL: string;\n\n    constructor(private stream: Stream) {\n        platform = PlatformUtils.getInstance();\n    }\n\n    public isEnabled(): boolean {\n        return this.webRtcStatsEnabled;\n    }\n\n    public initWebRtcStats(): void {\n\n        const webrtcObj = localStorage.getItem(this.STATS_ITEM_NAME);\n\n        if (!!webrtcObj) {\n            this.webRtcStatsEnabled = true;\n            const webrtcStatsConfig: WebrtcStatsConfig = JSON.parse(webrtcObj);\n            // webrtc object found in local storage\n            logger.warn('WebRtc stats enabled for stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId);\n            logger.warn('localStorage item: ' + JSON.stringify(webrtcStatsConfig));\n\n            this.POST_URL = webrtcStatsConfig.httpEndpoint;\n            this.statsInterval = webrtcStatsConfig.interval;  // Interval in seconds\n\n            this.webRtcStatsIntervalId = setInterval(async () => {\n                await this.sendStatsToHttpEndpoint();\n            }, this.statsInterval * 1000);\n\n        } else {\n            logger.debug('WebRtc stats not enabled');\n        }\n    }\n\n    // {\n    // \"localCandidate\": {\n    //     \"id\": \"RTCIceCandidate_/r4P1y2Q\",\n    //     \"timestamp\": 1616080155617,\n    //     \"type\": \"local-candidate\",\n    //     \"transportId\": \"RTCTransport_0_1\",\n    //     \"isRemote\": false,\n    //     \"networkType\": \"wifi\",\n    //     \"ip\": \"123.45.67.89\",\n    //     \"port\": 63340,\n    //     \"protocol\": \"udp\",\n    //     \"candidateType\": \"srflx\",\n    //     \"priority\": 1686052607,\n    //     \"deleted\": false,\n    //     \"raw\": [\n    //     \"candidate:3345412921 1 udp 1686052607 123.45.67.89 63340 typ srflx raddr 192.168.1.31 rport 63340 generation 0 ufrag 0ZtT network-id 1 network-cost 10\",\n    //     \"candidate:58094482 1 udp 41885695 98.76.54.32 44431 typ relay raddr 123.45.67.89 rport 63340 generation 0 ufrag 0ZtT network-id 1 network-cost 10\"\n    //     ]\n    // },\n    // \"remoteCandidate\": {\n    //     \"id\": \"RTCIceCandidate_1YO18gph\",\n    //     \"timestamp\": 1616080155617,\n    //     \"type\": \"remote-candidate\",\n    //     \"transportId\": \"RTCTransport_0_1\",\n    //     \"isRemote\": true,\n    //     \"ip\": \"12.34.56.78\",\n    //     \"port\": 64989,\n    //     \"protocol\": \"udp\",\n    //     \"candidateType\": \"srflx\",\n    //     \"priority\": 1679819263,\n    //     \"deleted\": false,\n    //     \"raw\": [\n    //     \"candidate:16 1 UDP 1679819263 12.34.56.78 64989 typ srflx raddr 172.19.0.1 rport 64989\",\n    //     \"candidate:16 1 UDP 1679819263 12.34.56.78 64989 typ srflx raddr 172.19.0.1 rport 64989\"\n    //     ]\n    // }\n    // }\n    // Have been tested in:\n    //   - Linux Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 74.0.3911.218\n    //       - Firefox 86\n    //       - Microsoft Edge 91.0.825.0\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - Windows Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 74.0.3911.232\n    //       - Firefox 86.0.1\n    //       - Microsoft Edge 89.0.774.54\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - MacOS Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Firefox 87.0\n    //       - Opera 75.0.3969.93\n    //       - Microsoft Edge 89.0.774.57\n    //       - Safari 14.0 (14610.1.28.1.9)\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - Android:\n    //       - Chrome Mobile 89.0.4389.90\n    //       - Opera 62.3.3146.57763\n    //       - Firefox Mobile 86.6.1\n    //       - Microsoft Edge Mobile 46.02.4.5147\n    //       - Ionic 5\n    //       - React Native 0.64\n    //   - iOS:\n    //       - Safari Mobile\n    //       - ¿Ionic?\n    //       - ¿React Native?\n    public getSelectedIceCandidateInfo(): Promise<any> {\n        return new Promise(async (resolve, reject) => {\n\n            const statsReport: any = await this.stream.getRTCPeerConnection().getStats();\n            let transportStat;\n            const candidatePairs: Map<string, any> = new Map();\n            const localCandidates: Map<string, any> = new Map();\n            const remoteCandidates: Map<string, any> = new Map();\n            statsReport.forEach((stat: any) => {\n                if (stat.type === 'transport' && (platform.isChromium() || platform.isSafariBrowser() || platform.isReactNative())) {\n                    transportStat = stat;\n                }\n                switch (stat.type) {\n                    case 'candidate-pair':\n                        candidatePairs.set(stat.id, stat);\n                        break;\n                    case 'local-candidate':\n                        localCandidates.set(stat.id, stat);\n                        break;\n                    case 'remote-candidate':\n                        remoteCandidates.set(stat.id, stat);\n                        break;\n                }\n            });\n            let selectedCandidatePair;\n            if (transportStat != null) {\n                const selectedCandidatePairId = transportStat.selectedCandidatePairId\n                selectedCandidatePair = candidatePairs.get(selectedCandidatePairId);\n            } else {\n                // This is basically Firefox\n                const length = candidatePairs.size;\n                const iterator = candidatePairs.values();\n                for (let i = 0; i < length; i++) {\n                    const candidatePair = iterator.next().value;\n                    if (candidatePair['selected']) {\n                        selectedCandidatePair = candidatePair;\n                        break;\n                    }\n                }\n            }\n            const localCandidateId = selectedCandidatePair.localCandidateId;\n            const remoteCandidateId = selectedCandidatePair.remoteCandidateId;\n            let finalLocalCandidate = localCandidates.get(localCandidateId);\n            if (!!finalLocalCandidate) {\n                const candList = this.stream.getLocalIceCandidateList();\n                const cand = candList.filter((c: RTCIceCandidate) => {\n                    return (!!c.candidate &&\n                        (c.candidate.indexOf(finalLocalCandidate.ip) >= 0 || c.candidate.indexOf(finalLocalCandidate.address) >= 0) &&\n                        c.candidate.indexOf(finalLocalCandidate.port) >= 0);\n                });\n                finalLocalCandidate.raw = [];\n                for (let c of cand) {\n                    finalLocalCandidate.raw.push(c.candidate);\n                }\n            } else {\n                finalLocalCandidate = 'ERROR: No active local ICE candidate. Probably ICE-TCP is being used';\n            }\n\n            let finalRemoteCandidate = remoteCandidates.get(remoteCandidateId);\n            if (!!finalRemoteCandidate) {\n                const candList = this.stream.getRemoteIceCandidateList();\n                const cand = candList.filter((c: RTCIceCandidate) => {\n                    return (!!c.candidate &&\n                        (c.candidate.indexOf(finalRemoteCandidate.ip) >= 0 || c.candidate.indexOf(finalRemoteCandidate.address) >= 0) &&\n                        c.candidate.indexOf(finalRemoteCandidate.port) >= 0);\n                });\n                finalRemoteCandidate.raw = [];\n                for (let c of cand) {\n                    finalRemoteCandidate.raw.push(c.candidate);\n                }\n            } else {\n                finalRemoteCandidate = 'ERROR: No active remote ICE candidate. Probably ICE-TCP is being used';\n            }\n\n            return resolve({\n                localCandidate: finalLocalCandidate,\n                remoteCandidate: finalRemoteCandidate\n            });\n        });\n    }\n\n    public stopWebRtcStats() {\n        if (this.webRtcStatsEnabled) {\n            clearInterval(this.webRtcStatsIntervalId);\n            logger.warn('WebRtc stats stopped for disposed stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId);\n        }\n    }\n\n    private async sendStats(url: string, response: JSONStatsResponse): Promise<void> {\n        try {\n            const configuration: RequestInit = {\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(response),\n                method: 'POST',\n            };\n            await fetch(url, configuration);\n\n        } catch (error) {\n            logger.error(`sendStats error: ${JSON.stringify(error)}`);\n        }\n    }\n\n    private async sendStatsToHttpEndpoint(): Promise<void> {\n        try {\n            const webrtcStats: IWebrtcStats = await this.getCommonStats();\n            const response = this.generateJSONStatsResponse(webrtcStats);\n            await this.sendStats(this.POST_URL, response);\n        } catch (error) {\n            logger.log(error);\n        }\n    }\n\n    // Have been tested in:\n    //   - Linux Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 74.0.3911.218\n    //       - Firefox 86\n    //       - Microsoft Edge 91.0.825.0\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - Windows Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 74.0.3911.232\n    //       - Firefox 86.0.1\n    //       - Microsoft Edge 89.0.774.54\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - MacOS Desktop:\n    //       - Chrome 89.0.4389.90\n    //       - Opera 75.0.3969.93\n    //       - Firefox 87.0\n    //       - Microsoft Edge 89.0.774.57\n    //       - Safari 14.0 (14610.1.28.1.9)\n    //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n    //   - Android:\n    //       - Chrome Mobile 89.0.4389.90\n    //       - Opera 62.3.3146.57763\n    //       - Firefox Mobile 86.6.1\n    //       - Microsoft Edge Mobile 46.02.4.5147\n    //       - Ionic 5\n    //       - React Native 0.64\n    //   - iOS:\n    //       - Safari Mobile\n    //       - ¿Ionic?\n    //       - ¿React Native?\n    public async getCommonStats(): Promise<IWebrtcStats> {\n\n        return new Promise(async (resolve, reject) => {\n\n            try {\n                const statsReport: any = await this.stream.getRTCPeerConnection().getStats();\n                const response: IWebrtcStats = this.getWebRtcStatsResponseOutline();\n                const videoTrackStats = ['framesReceived', 'framesDropped', 'framesSent', 'frameHeight', 'frameWidth'];\n                const candidatePairStats = ['availableOutgoingBitrate', 'currentRoundTripTime'];\n\n                statsReport.forEach((stat: any) => {\n\n                    let mediaType = stat.mediaType != null ? stat.mediaType : stat.kind;\n                    const addStat = (direction: string, key: string): void => {\n                        if (stat[key] != null && response[direction] != null) {\n                            if (!mediaType && (videoTrackStats.indexOf(key) > -1)) {\n                                mediaType = 'video';\n                            }\n                            if (direction != null && mediaType != null && key != null && response[direction][mediaType] != null) {\n                                response[direction][mediaType][key] = Number(stat[key]);\n                            } else if(direction != null && key != null && candidatePairStats.includes(key)) {\n                                // candidate-pair-stats\n                                response[direction][key] = Number(stat[key]);\n                            }\n                        }\n                    }\n\n                    switch (stat.type) {\n                        case \"outbound-rtp\":\n                            addStat('outbound', 'bytesSent');\n                            addStat('outbound', 'packetsSent');\n                            addStat('outbound', 'framesEncoded');\n                            addStat('outbound', 'nackCount');\n                            addStat('outbound', 'firCount');\n                            addStat('outbound', 'pliCount');\n                            addStat('outbound', 'qpSum');\n                            break;\n                        case \"inbound-rtp\":\n                            addStat('inbound', 'bytesReceived');\n                            addStat('inbound', 'packetsReceived');\n                            addStat('inbound', 'packetsLost');\n                            addStat('inbound', 'jitter');\n                            addStat('inbound', 'framesDecoded');\n                            addStat('inbound', 'nackCount');\n                            addStat('inbound', 'firCount');\n                            addStat('inbound', 'pliCount');\n                            break;\n                        case 'track':\n                            addStat('inbound', 'jitterBufferDelay');\n                            addStat('inbound', 'framesReceived');\n                            addStat('outbound', 'framesDropped');\n                            addStat('outbound', 'framesSent');\n                            addStat(this.stream.isLocal() ? 'outbound' : 'inbound', 'frameHeight');\n                            addStat(this.stream.isLocal() ? 'outbound' : 'inbound', 'frameWidth');\n                            break;\n                        case 'candidate-pair':\n                            addStat('candidatepair', 'currentRoundTripTime');\n                            addStat('candidatepair', 'availableOutgoingBitrate');\n                            break;\n                    }\n                });\n\n                // Delete candidatepair from response if null\n                if(!response?.candidatepair || Object.keys(<Object>response.candidatepair).length === 0){\n                    delete response.candidatepair;\n                }\n\n                return resolve(response);\n            } catch (error) {\n                logger.error('Error getting common stats: ', error);\n                return reject(error);\n            }\n\n        });\n    }\n\n    private generateJSONStatsResponse(stats: IWebrtcStats): JSONStatsResponse {\n        return {\n            '@timestamp': new Date().toISOString(),\n            participant_id: this.stream.connection.data,\n            session_id: this.stream.session.sessionId,\n            platform: platform.getName(),\n            platform_description: platform.getDescription(),\n            stream: 'webRTC',\n            webrtc_stats: stats\n        };\n    }\n\n    private getWebRtcStatsResponseOutline(): IWebrtcStats {\n        if (this.stream.isLocal()) {\n            return {\n                outbound: {\n                    audio: {},\n                    video: {}\n                },\n                candidatepair: {}\n            };\n        } else {\n            return {\n                inbound: {\n                    audio: {},\n                    video: {}\n                }\n            };\n        }\n    }\n\n}"]},"metadata":{},"sourceType":"script"}