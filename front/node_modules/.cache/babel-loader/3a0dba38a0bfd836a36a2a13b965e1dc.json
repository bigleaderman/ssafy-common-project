{"ast":null,"code":"var _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\pages\\\\RoomListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Grid } from \"@mui/material\";\nimport Nav from \"../components/RoomListPageCom/Nav\";\nimport SideBar from \"../components/RoomListPageCom/SideBar\";\nimport RoomList from \"../components/RoomListPageCom/RoomList\";\nimport MyProfile from \"../components/RoomListPageCom/MyProfile\";\nimport Chat from \"../components/RoomListPageCom/Chat\"; // 소켓\n\nimport SockJS from \"sockjs-client\";\nimport { over } from \"stompjs\"; // 리덕스\n\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\n\nfunction RoomListPage() {\n  _s();\n\n  const me = useSelector(state => state.user);\n  let headers = {\n    token: `${me.accessToken}`\n  }; // 소켓 : roomListPage 들어오면 연결 + roomListPage 나가면 해지\n\n  useEffect(() => {\n    connect();\n    return () => {\n      stompClient.disconnect();\n    };\n  }, []);\n\n  const connect = () => {\n    let Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\n    stompClient = over(Sock);\n    stompClient.debug = null;\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    stompClient.subscribe(\"/sub/lobby\", receivedLobby); // 1. 받는 데이터 : 로비에서 채팅 + 로그인유저 목록\n\n    const data = {\n      header: {\n        type: \"join\"\n      },\n      data: {\n        token: me.accessToken,\n        nickname: me.nickname\n      }\n    };\n    stompClient.send(\"/pub/lobby\", {}, JSON.stringify(data)); // 나의 입장을 알림\n\n    stompClient.subscribe(`/sub/friend/${me.nickname}`, receivedFriend); // 2. 받는 데이터 : 친구 목록 + 나에게 친구신청한 목록\n  };\n\n  const onError = err => {\n    console.log(err);\n  }; // 1.\n  // 채팅\n\n\n  const [Chats, setChats] = useState([]); // 로그인 유저 목록\n\n  const [loginUser, setLoginUser] = useState([]); // '/sub/lobby'로부터 받은 데이터\n\n  const receivedLobby = payload => {\n    var payloadData = JSON.parse(payload.body); // JSON 문자열을 JavaScript 객체로 변환\n    // 채팅\n\n    if (payloadData.header.type === \"chat\") {\n      Chats.push(payloadData);\n      setChats([...Chats]);\n    } // 로그인 유저 목록\n    else if (payloadData.header.type === \"join\") {\n      setLoginUser(payloadData.data.users);\n    }\n  }; // '/pub/lobby'로 채팅 보내기\n\n\n  const sendChat = data => {\n    if (stompClient.ws.readyState === 1) {\n      // 연결이 되었을 때 보내기\n      return stompClient.send(\"/pub/lobby\", headers, JSON.stringify(data));\n    }\n  }; // 2.\n  // 친구 목록 redux\n\n\n  const friendList = useSelector(state => state.friendList);\n  const [friends, setFriends] = useState(friendList); // 나에게 친구 신청한 목록 redux\n\n  const requestedF = useSelector(state => state.requestedF);\n  const [requestedList, setRequestedList] = useState(requestedF); // '/sub/friend/내닉네임'로부터 받은 데이터\n\n  const receivedFriend = payload => {\n    var payloadData = JSON.parse(payload.body); // 친구 목록\n\n    if (payloadData.header.type === \"list\") {\n      setFriends(payloadData.friendResponseDataDto.users);\n    } // 나에게 친구 신청한 목록\n    else if (payloadData.header.type === \"offer-list\") {\n      setRequestedList(payloadData.friendResponseDataDto.users);\n    }\n  }; // '/pub/friend/상대닉네임'로 친구신청/수락/거절/삭제 보내기\n\n\n  const sendF = (nickname, data) => {\n    if (stompClient.ws.readyState === 1) {\n      return stompClient.send(`/pub/friend/${nickname}`, headers, JSON.stringify(data));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      height: \"100vh\",\n      display: \"flex\",\n      alignItems: \"center\",\n      minWidth: \"1200px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(SideBar, {\n          loginUser: loginUser,\n          friends: friends,\n          sendF: sendF,\n          requestedList: requestedList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: /*#__PURE__*/_jsxDEV(RoomList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(MyProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: /*#__PURE__*/_jsxDEV(Chat, {\n          Chats: Chats,\n          sendChat: sendChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RoomListPage, \"Bgq3cdMuuxv1Iiggo3U/06/9Yjw=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = RoomListPage;\nexport default RoomListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomListPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","Nav","SideBar","RoomList","MyProfile","Chat","SockJS","over","useSelector","stompClient","RoomListPage","me","state","user","headers","token","accessToken","connect","disconnect","Sock","debug","onConnected","onError","subscribe","receivedLobby","data","header","type","nickname","send","JSON","stringify","receivedFriend","err","console","log","Chats","setChats","loginUser","setLoginUser","payload","payloadData","parse","body","push","users","sendChat","ws","readyState","friendList","friends","setFriends","requestedF","requestedList","setRequestedList","friendResponseDataDto","sendF","height","display","alignItems","minWidth"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/pages/RoomListPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Container, Grid } from \"@mui/material\";\r\n\r\nimport Nav from \"../components/RoomListPageCom/Nav\";\r\nimport SideBar from \"../components/RoomListPageCom/SideBar\";\r\nimport RoomList from \"../components/RoomListPageCom/RoomList\";\r\nimport MyProfile from \"../components/RoomListPageCom/MyProfile\";\r\nimport Chat from \"../components/RoomListPageCom/Chat\";\r\n\r\n// 소켓\r\nimport SockJS from \"sockjs-client\";\r\nimport { over } from \"stompjs\";\r\n\r\n// 리덕스\r\nimport { useSelector } from \"react-redux\";\r\n\r\nvar stompClient = null;\r\nfunction RoomListPage() {\r\n  const me = useSelector((state) => state.user);\r\n  let headers = {\r\n    token: `${me.accessToken}`,\r\n  };\r\n\r\n  // 소켓 : roomListPage 들어오면 연결 + roomListPage 나가면 해지\r\n  useEffect(() => {\r\n    connect();\r\n    return () => {\r\n      stompClient.disconnect();\r\n    };\r\n  }, []);\r\n  const connect = () => {\r\n    let Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\r\n    stompClient = over(Sock);\r\n    stompClient.debug = null;\r\n    stompClient.connect({}, onConnected, onError);\r\n  };\r\n  const onConnected = () => {\r\n    stompClient.subscribe(\"/sub/lobby\", receivedLobby); // 1. 받는 데이터 : 로비에서 채팅 + 로그인유저 목록\r\n    const data = {\r\n      header: {\r\n        type: \"join\",\r\n      },\r\n      data: {\r\n        token: me.accessToken,\r\n        nickname: me.nickname,\r\n      },\r\n    };\r\n    stompClient.send(\"/pub/lobby\", {}, JSON.stringify(data)); // 나의 입장을 알림\r\n    stompClient.subscribe(`/sub/friend/${me.nickname}`, receivedFriend); // 2. 받는 데이터 : 친구 목록 + 나에게 친구신청한 목록\r\n  };\r\n  const onError = (err) => {\r\n    console.log(err);\r\n  };\r\n\r\n  // 1.\r\n  // 채팅\r\n  const [Chats, setChats] = useState([]);\r\n  // 로그인 유저 목록\r\n  const [loginUser, setLoginUser] = useState([]);\r\n  // '/sub/lobby'로부터 받은 데이터\r\n  const receivedLobby = (payload) => {\r\n    var payloadData = JSON.parse(payload.body); // JSON 문자열을 JavaScript 객체로 변환\r\n    // 채팅\r\n    if (payloadData.header.type === \"chat\") {\r\n      Chats.push(payloadData);\r\n      setChats([...Chats]);\r\n    } // 로그인 유저 목록\r\n    else if (payloadData.header.type === \"join\") {\r\n      setLoginUser(payloadData.data.users);\r\n    }\r\n  };\r\n  // '/pub/lobby'로 채팅 보내기\r\n  const sendChat = (data) => {\r\n    if (stompClient.ws.readyState === 1) {\r\n      // 연결이 되었을 때 보내기\r\n      return stompClient.send(\"/pub/lobby\", headers, JSON.stringify(data));\r\n    }\r\n  };\r\n\r\n  // 2.\r\n  // 친구 목록 redux\r\n  const friendList = useSelector((state) => state.friendList);\r\n  const [friends, setFriends] = useState(friendList);\r\n  // 나에게 친구 신청한 목록 redux\r\n  const requestedF = useSelector((state) => state.requestedF);\r\n  const [requestedList, setRequestedList] = useState(requestedF);\r\n  // '/sub/friend/내닉네임'로부터 받은 데이터\r\n  const receivedFriend = (payload) => {\r\n    var payloadData = JSON.parse(payload.body);\r\n    // 친구 목록\r\n    if (payloadData.header.type === \"list\") {\r\n      setFriends(payloadData.friendResponseDataDto.users);\r\n    } // 나에게 친구 신청한 목록\r\n    else if (payloadData.header.type === \"offer-list\") {\r\n      setRequestedList(payloadData.friendResponseDataDto.users);\r\n    }\r\n  };\r\n  // '/pub/friend/상대닉네임'로 친구신청/수락/거절/삭제 보내기\r\n  const sendF = (nickname, data) => {\r\n    if (stompClient.ws.readyState === 1) {\r\n      return stompClient.send(`/pub/friend/${nickname}`, headers, JSON.stringify(data));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ height: \"100vh\", display: \"flex\", alignItems: \"center\", minWidth: \"1200px\" }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Nav />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <SideBar\r\n            loginUser={loginUser}\r\n            friends={friends}\r\n            sendF={sendF}\r\n            requestedList={requestedList}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <RoomList />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <MyProfile />\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <Chat Chats={Chats} sendChat={sendChat} />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RoomListPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}