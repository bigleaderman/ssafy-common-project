{"ast":null,"code":"//combineReducers = reducer가 여러 개일 때 하나로 묶어줌\nimport { configureStore, combineReducers } from \"@reduxjs/toolkit\"; // redux로 관리할 데이터\n//맵에서 자기 캐릭터 좌표 관리\n\nimport MapPosYSlice from \"../slice/MapPosYSlice\";\nimport MapPosXSlice from \"../slice/MapPosXSlice\"; //게임 방 정보 관리\n\nimport CntCivilSlice from \"../slice/CntCivilSlice\";\nimport CntConSlice from \"../slice/CntConSlice\";\nimport CntCopSlice from \"../slice/CntCopSlice\";\nimport CntDocSlice from \"../slice/CntDocSlice\";\nimport CntMafSlice from \"../slice/CntMafSlice\";\nimport CntLimitSlice from \"../slice/CntLimitSlice\";\nimport RoomTitleSlice from \"../slice/RoomTitleSlice\";\nimport RoomListSlice from \"../slice/RoomListSlice\";\nimport UserSlice from \"../slice/UserSlice\";\nimport FriendListSlice from \"../slice/FriendListSlice\"; //redux-persist 관련 함수\n\nimport { persistReducer, persistStore } from \"redux-persist\"; //thunk = 실행을 지연시켜줌\n\nimport thunk from \"redux-thunk\"; //storageSession = 세션스토리지에 저장\n\nimport storage from \"redux-persist/lib/storage/session\"; //persist 설정\n\nvar persistConfig = {\n  key: \"root\",\n  storage: storage,\n  debug: true\n}; //rootReducer = 조합된 최종 리듀서\n\nvar rootReducer = combineReducers({\n  posY: MapPosYSlice,\n  posX: MapPosXSlice,\n  cntCivil: CntCivilSlice,\n  cntCon: CntConSlice,\n  cntCop: CntCopSlice,\n  cntDoc: CntDocSlice,\n  cntMaf: CntMafSlice,\n  cntLimit: CntLimitSlice,\n  roomTitle: RoomTitleSlice,\n  roomList: RoomListSlice,\n  user: UserSlice,\n  friendList: FriendListSlice\n}); //persistReducer(설정, 최종 리듀서)\n\nvar persistedReducer = persistReducer(persistConfig, rootReducer); //store에 유지되는 리듀서 함수를 넣어줌\n//middleware의 역할 : 리듀서에 도달하기 전에 직렬화할 수 없는 값을 가로채서 중지함\n//thunk 미들웨어를 사용하지 않고 Redux Persist를 사용하면 브라우저 콘솔에서 직렬화\n//할 수 없는 값이 상태에서 감지되었음을 읽는 오류가 발생\n\nexport var store = configureStore({\n  reducer: persistedReducer,\n  middleware: [thunk]\n}); //index.js에 사용함\n\nexport var persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","MapPosYSlice","MapPosXSlice","CntCivilSlice","CntConSlice","CntCopSlice","CntDocSlice","CntMafSlice","CntLimitSlice","RoomTitleSlice","RoomListSlice","UserSlice","FriendListSlice","persistReducer","persistStore","thunk","storage","persistConfig","key","debug","rootReducer","posY","posX","cntCivil","cntCon","cntCop","cntDoc","cntMaf","cntLimit","roomTitle","roomList","user","friendList","persistedReducer","store","reducer","middleware","persistor"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/redux/store/store.js"],"sourcesContent":["//combineReducers = reducer가 여러 개일 때 하나로 묶어줌\r\nimport { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\n\r\n// redux로 관리할 데이터\r\n//맵에서 자기 캐릭터 좌표 관리\r\nimport MapPosYSlice from \"../slice/MapPosYSlice\";\r\nimport MapPosXSlice from \"../slice/MapPosXSlice\";\r\n\r\n//게임 방 정보 관리\r\nimport CntCivilSlice from \"../slice/CntCivilSlice\";\r\nimport CntConSlice from \"../slice/CntConSlice\";\r\nimport CntCopSlice from \"../slice/CntCopSlice\";\r\nimport CntDocSlice from \"../slice/CntDocSlice\";\r\nimport CntMafSlice from \"../slice/CntMafSlice\";\r\nimport CntLimitSlice from \"../slice/CntLimitSlice\";\r\nimport RoomTitleSlice from \"../slice/RoomTitleSlice\";\r\nimport RoomListSlice from \"../slice/RoomListSlice\";\r\nimport UserSlice from \"../slice/UserSlice\";\r\nimport FriendListSlice from \"../slice/FriendListSlice\";\r\n\r\n//redux-persist 관련 함수\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\n\r\n//thunk = 실행을 지연시켜줌\r\nimport thunk from \"redux-thunk\";\r\n\r\n//storageSession = 세션스토리지에 저장\r\nimport storage from \"redux-persist/lib/storage/session\";\r\n\r\n//persist 설정\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  debug: true,\r\n};\r\n\r\n//rootReducer = 조합된 최종 리듀서\r\nconst rootReducer = combineReducers({\r\n  posY: MapPosYSlice,\r\n  posX: MapPosXSlice,\r\n  cntCivil: CntCivilSlice,\r\n  cntCon: CntConSlice,\r\n  cntCop: CntCopSlice,\r\n  cntDoc: CntDocSlice,\r\n  cntMaf: CntMafSlice,\r\n  cntLimit: CntLimitSlice,\r\n  roomTitle: RoomTitleSlice,\r\n  roomList: RoomListSlice,\r\n  user: UserSlice,\r\n  friendList : FriendListSlice,\r\n});\r\n\r\n//persistReducer(설정, 최종 리듀서)\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n//store에 유지되는 리듀서 함수를 넣어줌\r\n//middleware의 역할 : 리듀서에 도달하기 전에 직렬화할 수 없는 값을 가로채서 중지함\r\n//thunk 미들웨어를 사용하지 않고 Redux Persist를 사용하면 브라우저 콘솔에서 직렬화\r\n//할 수 없는 값이 상태에서 감지되었음을 읽는 오류가 발생\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: [thunk],\r\n});\r\n\r\n//index.js에 사용함\r\nexport const persistor = persistStore(store);\r\n"],"mappings":"AAAA;AACA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD,C,CAEA;AACA;;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,eAAP,MAA4B,0BAA5B,C,CAEA;;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,mCAApB,C,CAEA;;AACA,IAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBF,OAAO,EAAPA,OAFoB;EAGpBG,KAAK,EAAE;AAHa,CAAtB,C,CAMA;;AACA,IAAMC,WAAW,GAAGpB,eAAe,CAAC;EAClCqB,IAAI,EAAEpB,YAD4B;EAElCqB,IAAI,EAAEpB,YAF4B;EAGlCqB,QAAQ,EAAEpB,aAHwB;EAIlCqB,MAAM,EAAEpB,WAJ0B;EAKlCqB,MAAM,EAAEpB,WAL0B;EAMlCqB,MAAM,EAAEpB,WAN0B;EAOlCqB,MAAM,EAAEpB,WAP0B;EAQlCqB,QAAQ,EAAEpB,aARwB;EASlCqB,SAAS,EAAEpB,cATuB;EAUlCqB,QAAQ,EAAEpB,aAVwB;EAWlCqB,IAAI,EAAEpB,SAX4B;EAYlCqB,UAAU,EAAGpB;AAZqB,CAAD,CAAnC,C,CAeA;;AACA,IAAMqB,gBAAgB,GAAGpB,cAAc,CAACI,aAAD,EAAgBG,WAAhB,CAAvC,C,CAEA;AACA;AACA;AACA;;AACA,OAAO,IAAMc,KAAK,GAAGnC,cAAc,CAAC;EAClCoC,OAAO,EAAEF,gBADyB;EAElCG,UAAU,EAAE,CAACrB,KAAD;AAFsB,CAAD,CAA5B,C,CAKP;;AACA,OAAO,IAAMsB,SAAS,GAAGvB,YAAY,CAACoB,KAAD,CAA9B"},"metadata":{},"sourceType":"module"}