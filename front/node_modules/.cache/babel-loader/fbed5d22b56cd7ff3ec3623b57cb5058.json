{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectionPropertyChangedEvent = void 0;\n\nvar Event_1 = require(\"./Event\");\n/**\n * **This feature is part of OpenVidu Pro tier** <a href=\"https://docs.openvidu.io/en/stable/openvidu-pro/\" style=\"display: inline-block; background-color: rgb(0, 136, 170); color: white; font-weight: bold; padding: 0px 5px; margin-right: 5px; border-radius: 3px; font-size: 13px; line-height:21px; font-family: Montserrat, sans-serif\">PRO</a>\n *\n * Triggered by [[connectionPropertyChanged]]\n */\n\n\nvar ConnectionPropertyChangedEvent =\n/** @class */\nfunction (_super) {\n  __extends(ConnectionPropertyChangedEvent, _super);\n  /**\n   * @hidden\n   */\n\n\n  function ConnectionPropertyChangedEvent(target, connection, changedProperty, newValue, oldValue) {\n    var _this = _super.call(this, false, target, 'connectionPropertyChanged') || this;\n\n    _this.connection = connection;\n    _this.changedProperty = changedProperty;\n    _this.newValue = newValue;\n    _this.oldValue = oldValue;\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n  // tslint:disable-next-line:no-empty\n\n\n  ConnectionPropertyChangedEvent.prototype.callDefaultBehavior = function () {};\n\n  return ConnectionPropertyChangedEvent;\n}(Event_1.Event);\n\nexports.ConnectionPropertyChangedEvent = ConnectionPropertyChangedEvent;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA;AAEA;;;;;;;AAKA;AAAA;AAAA;EAAoDA;EAsBhD;;;;;EAGA,wCAAYC,MAAZ,EAA6BC,UAA7B,EAAqDC,eAArD,EAA8EC,QAA9E,EAAgGC,QAAhG,EAAgH;IAAhH,YACIC,kBAAM,KAAN,EAAaL,MAAb,EAAqB,2BAArB,KAAiD,IADrD;;IAEIM,KAAI,CAACL,UAAL,GAAkBA,UAAlB;IACAK,KAAI,CAACJ,eAAL,GAAuBA,eAAvB;IACAI,KAAI,CAACH,QAAL,GAAgBA,QAAhB;IACAG,KAAI,CAACF,QAAL,GAAgBA,QAAhB;;EACH;EAED;;;EAGA;;;EACAG,4EAAyB,CAAzB;;EAEJ;AAAC,CAvCD,CAAoDC,aAApD;;AAAaC","names":["__extends","target","connection","changedProperty","newValue","oldValue","_super","_this","ConnectionPropertyChangedEvent","Event_1","exports"],"sources":["C:\\SSAFY\\2nd semester\\S07P12D106\\front\\node_modules\\openvidu-browser\\src\\OpenViduInternal\\Events\\ConnectionPropertyChangedEvent.ts"],"sourcesContent":["/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Connection } from '../../OpenVidu/Connection';\nimport { Session } from '../../OpenVidu/Session';\nimport { Event } from './Event';\n\n/**\n * **This feature is part of OpenVidu Pro tier** <a href=\"https://docs.openvidu.io/en/stable/openvidu-pro/\" style=\"display: inline-block; background-color: rgb(0, 136, 170); color: white; font-weight: bold; padding: 0px 5px; margin-right: 5px; border-radius: 3px; font-size: 13px; line-height:21px; font-family: Montserrat, sans-serif\">PRO</a>\n *\n * Triggered by [[connectionPropertyChanged]]\n */\nexport class ConnectionPropertyChangedEvent extends Event {\n\n    /**\n     * The Connection whose property has changed\n     */\n    connection: Connection;\n\n    /**\n     * The property of the stream that changed. This value is either `\"role\"` or `\"record\"`\n     */\n    changedProperty: string;\n\n    /**\n     * New value of the property (after change, current value)\n     */\n    newValue: Object;\n\n    /**\n     * Previous value of the property (before change)\n     */\n    oldValue: Object;\n\n    /**\n     * @hidden\n     */\n    constructor(target: Session, connection: Connection, changedProperty: string, newValue: Object, oldValue: Object) {\n        super(false, target, 'connectionPropertyChanged');\n        this.connection = connection;\n        this.changedProperty = changedProperty;\n        this.newValue = newValue;\n        this.oldValue = oldValue;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n\n}\n"]},"metadata":{},"sourceType":"script"}