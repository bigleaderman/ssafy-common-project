{"ast":null,"code":"var _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\components\\\\GameRoomPageCom\\\\AllCam.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { OpenVidu } from \"openvidu-browser\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../redux/slice/UserSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllCam() {\n  _s();\n\n  let OV, session, mySession;\n  let ovToken;\n  let roomNum = 60;\n  const currentUser = useSelector(selectUser);\n  console.log(\"currentUser: \", currentUser);\n  let currentVideoDevice, mainStreamManager, publisher, subscribers;\n\n  const joinSession = async () => {\n    OV = new OpenVidu();\n    session = OV.initSession();\n    mySession = session;\n    mySession.on(\"streamCreated\", event => {\n      // Subscribe to the Stream to receive it. Second parameter is undefined\n      // so OpenVidu doesn't create an HTML video by its own\n      var subscriber = mySession.subscribe(event.stream, undefined);\n      var subscribers = this.state.subscribers;\n      subscribers.push(subscriber); // Update the state with the new subscribers\n\n      this.setState({\n        subscribers: subscribers\n      });\n    });\n    mySession.on(\"streamDestroyed\", event => {\n      // Remove the stream from 'subscribers' array\n      this.deleteSubscriber(event.stream.streamManager);\n    }); // On every asynchronous exception...\n\n    mySession.on(\"exception\", exception => {\n      console.warn(exception);\n    });\n    await axios({\n      url: `https://i7d106.p.ssafy.io:8080/api/room/${roomNum}/video-token`,\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        accessToken: `Bearer ${currentUser.accessToken}`\n      }\n    }).then(_ref => {\n      let {\n        data\n      } = _ref;\n      ovToken = data;\n    }).catch(err => {\n      console.log(err);\n    });\n    await mySession.connect(ovToken, {\n      clientData: currentUser.nickname\n    }.then(async () => {\n      var devices = await OV.getDevices();\n      var videoDevices = devices.filter(device => device.kind === \"videoinput\"); // --- 5) Get your own camera stream ---\n      // Init a publisher passing undefined as targetElement (we don't want OpenVidu to insert a video\n      // element: we will manage it on our own) and with the desired properties\n\n      publisher = OV.initPublisher(undefined, {\n        audioSource: undefined,\n        // The source of audio. If undefined default microphone\n        videoSource: videoDevices[0].deviceId,\n        // The source of video. If undefined default webcam\n        publishAudio: true,\n        // Whether you want to start publishing with your audio unmuted or not\n        publishVideo: true,\n        // Whether you want to start publishing with your video enabled or not\n        resolution: \"640x480\",\n        // The resolution of your video\n        frameRate: 30,\n        // The frame rate of your video\n        insertMode: \"APPEND\",\n        // How the video is inserted in the target element 'video-container'\n        mirror: false // Whether to mirror your local video or not\n\n      }); // --- 6) Publish your stream ---\n\n      mySession.publish(publisher); // // Set the main video in the page to display our webcam and store our Publisher\n      // this.setState({\n      //   currentVideoDevice: videoDevices[0],\n      //   mainStreamManager: publisher,\n      //   publisher: publisher,\n      // });\n    }).catch(error => {\n      console.log(\"There was an error connecting to the session:\", error.code, error.message);\n    }));\n  };\n\n  const leaveSession = () => {\n    if (mySession) mySession.disconnect();\n    OV = null;\n    session = undefined;\n    subscribers = [];\n    mainStreamManager = undefined;\n    publisher = undefined;\n  };\n\n  const switchCamera = async () => {\n    try {\n      const devices = await OV.getDevices();\n      var videoDevices = devices.filter(device => device.kind === \"videoinput\");\n\n      if (videoDevices && videoDevices.length > 1) {\n        var newVideoDevice = videoDevices.filter(device => device.deviceId !== currentVideoDevice.deviceId);\n\n        if (newVideoDevice.length > 0) {\n          // Creating a new publisher with specific videoSource\n          // In mobile devices the default and first camera is the front one\n          var newPublisher = OV.initPublisher(undefined, {\n            videoSource: newVideoDevice[0].deviceId,\n            publishAudio: true,\n            publishVideo: true,\n            mirror: true\n          }); //newPublisher.once(\"accessAllowed\", () => {\n\n          await session.unpublish(mainStreamManager);\n          await session.publish(newPublisher);\n          currentVideoDevice = newVideoDevice;\n          mainStreamManager = newPublisher;\n          publisher = newPublisher;\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this) // <Grid container spacing={2}>\n  //   <Grid item xs={4}>\n  //     <Grid>\n  //     </Grid>\n  //     <Grid>cam4</Grid>\n  //     <Grid>cam6</Grid>\n  //   </Grid>\n  //   <Grid item xs={4}>\n  //     <Grid>cam2</Grid>\n  //     <Grid>empty</Grid>\n  //     <Grid>cam7</Grid>\n  //   </Grid>\n  //   <Grid item xs={4}>\n  //     <Grid>cam3</Grid>\n  //     <Grid>cam5</Grid>\n  //     <Grid>cam8</Grid>\n  //   </Grid>\n  // </Grid>\n  ;\n}\n\n_s(AllCam, \"lZdPyK/MobwtETtTACdKAch84Kw=\", false, function () {\n  return [useSelector];\n});\n\n_c = AllCam;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCam\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Grid","OpenVidu","axios","useSelector","useDispatch","selectUser","AllCam","OV","session","mySession","ovToken","roomNum","currentUser","console","log","currentVideoDevice","mainStreamManager","publisher","subscribers","joinSession","initSession","on","event","subscriber","subscribe","stream","undefined","state","push","setState","deleteSubscriber","streamManager","exception","warn","url","method","headers","accessToken","then","data","catch","err","connect","clientData","nickname","devices","getDevices","videoDevices","filter","device","kind","initPublisher","audioSource","videoSource","deviceId","publishAudio","publishVideo","resolution","frameRate","insertMode","mirror","publish","error","code","message","leaveSession","disconnect","switchCamera","length","newVideoDevice","newPublisher","unpublish","e"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/GameRoomPageCom/AllCam.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { OpenVidu } from \"openvidu-browser\";\r\nimport axios from \"axios\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectUser } from \"../../redux/slice/UserSlice\";\r\n\r\nexport default function AllCam() {\r\n  let OV, session, mySession;\r\n  let ovToken;\r\n  let roomNum = 60;\r\n  const currentUser = useSelector(selectUser);\r\n  console.log(\"currentUser: \", currentUser);\r\n  let currentVideoDevice, mainStreamManager, publisher, subscribers;\r\n\r\n  const joinSession = async () => {\r\n    OV = new OpenVidu();\r\n    session = OV.initSession();\r\n    mySession = session;\r\n\r\n    mySession.on(\"streamCreated\", (event) => {\r\n      // Subscribe to the Stream to receive it. Second parameter is undefined\r\n      // so OpenVidu doesn't create an HTML video by its own\r\n      var subscriber = mySession.subscribe(event.stream, undefined);\r\n      var subscribers = this.state.subscribers;\r\n      subscribers.push(subscriber);\r\n\r\n      // Update the state with the new subscribers\r\n      this.setState({\r\n        subscribers: subscribers,\r\n      });\r\n    });\r\n\r\n    mySession.on(\"streamDestroyed\", (event) => {\r\n      // Remove the stream from 'subscribers' array\r\n      this.deleteSubscriber(event.stream.streamManager);\r\n    });\r\n\r\n    // On every asynchronous exception...\r\n    mySession.on(\"exception\", (exception) => {\r\n      console.warn(exception);\r\n    });\r\n\r\n    await axios({\r\n      url: `https://i7d106.p.ssafy.io:8080/api/room/${roomNum}/video-token`,\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        accessToken: `Bearer ${currentUser.accessToken}`,\r\n      },\r\n    })\r\n      .then(({ data }) => {\r\n        ovToken = data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    await mySession.connect(\r\n      ovToken,\r\n      { clientData: currentUser.nickname }\r\n        .then(async () => {\r\n          var devices = await OV.getDevices();\r\n          var videoDevices = devices.filter((device) => device.kind === \"videoinput\");\r\n\r\n          // --- 5) Get your own camera stream ---\r\n\r\n          // Init a publisher passing undefined as targetElement (we don't want OpenVidu to insert a video\r\n          // element: we will manage it on our own) and with the desired properties\r\n          publisher = OV.initPublisher(undefined, {\r\n            audioSource: undefined, // The source of audio. If undefined default microphone\r\n            videoSource: videoDevices[0].deviceId, // The source of video. If undefined default webcam\r\n            publishAudio: true, // Whether you want to start publishing with your audio unmuted or not\r\n            publishVideo: true, // Whether you want to start publishing with your video enabled or not\r\n            resolution: \"640x480\", // The resolution of your video\r\n            frameRate: 30, // The frame rate of your video\r\n            insertMode: \"APPEND\", // How the video is inserted in the target element 'video-container'\r\n            mirror: false, // Whether to mirror your local video or not\r\n          });\r\n\r\n          // --- 6) Publish your stream ---\r\n          mySession.publish(publisher);\r\n\r\n          // // Set the main video in the page to display our webcam and store our Publisher\r\n          // this.setState({\r\n          //   currentVideoDevice: videoDevices[0],\r\n          //   mainStreamManager: publisher,\r\n          //   publisher: publisher,\r\n          // });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"There was an error connecting to the session:\", error.code, error.message);\r\n        })\r\n    );\r\n  };\r\n\r\n  const leaveSession = () => {\r\n    if (mySession) mySession.disconnect();\r\n\r\n    OV = null;\r\n    session = undefined;\r\n    subscribers = [];\r\n    mainStreamManager = undefined;\r\n    publisher = undefined;\r\n  };\r\n  const switchCamera = async () => {\r\n    try {\r\n      const devices = await OV.getDevices();\r\n      var videoDevices = devices.filter((device) => device.kind === \"videoinput\");\r\n\r\n      if (videoDevices && videoDevices.length > 1) {\r\n        var newVideoDevice = videoDevices.filter(\r\n          (device) => device.deviceId !== currentVideoDevice.deviceId\r\n        );\r\n\r\n        if (newVideoDevice.length > 0) {\r\n          // Creating a new publisher with specific videoSource\r\n          // In mobile devices the default and first camera is the front one\r\n          var newPublisher = OV.initPublisher(undefined, {\r\n            videoSource: newVideoDevice[0].deviceId,\r\n            publishAudio: true,\r\n            publishVideo: true,\r\n            mirror: true,\r\n          });\r\n\r\n          //newPublisher.once(\"accessAllowed\", () => {\r\n          await session.unpublish(mainStreamManager);\r\n\r\n          await session.publish(newPublisher);\r\n          currentVideoDevice = newVideoDevice;\r\n          mainStreamManager = newPublisher;\r\n          publisher = newPublisher;\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div></div>\r\n    // <Grid container spacing={2}>\r\n    //   <Grid item xs={4}>\r\n    //     <Grid>\r\n\r\n    //     </Grid>\r\n    //     <Grid>cam4</Grid>\r\n    //     <Grid>cam6</Grid>\r\n    //   </Grid>\r\n    //   <Grid item xs={4}>\r\n    //     <Grid>cam2</Grid>\r\n    //     <Grid>empty</Grid>\r\n    //     <Grid>cam7</Grid>\r\n    //   </Grid>\r\n    //   <Grid item xs={4}>\r\n    //     <Grid>cam3</Grid>\r\n    //     <Grid>cam5</Grid>\r\n    //     <Grid>cam8</Grid>\r\n    //   </Grid>\r\n    // </Grid>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}