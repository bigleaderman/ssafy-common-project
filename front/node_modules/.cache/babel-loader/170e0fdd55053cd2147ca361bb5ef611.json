{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar UserModel = /*#__PURE__*/function () {\n  // 'remote' | 'local'\n  function UserModel() {\n    _classCallCheck(this, UserModel);\n\n    _defineProperty(this, \"connectionId\", void 0);\n\n    _defineProperty(this, \"audioActive\", void 0);\n\n    _defineProperty(this, \"videoActive\", void 0);\n\n    _defineProperty(this, \"screenShareActive\", void 0);\n\n    _defineProperty(this, \"nickname\", void 0);\n\n    _defineProperty(this, \"streamManager\", void 0);\n\n    _defineProperty(this, \"type\", void 0);\n\n    this.connectionId = '';\n    this.audioActive = true;\n    this.videoActive = true;\n    this.screenShareActive = false;\n    this.nickname = '';\n    this.streamManager = null;\n    this.type = 'local';\n  }\n\n  _createClass(UserModel, [{\n    key: \"isAudioActive\",\n    value: function isAudioActive() {\n      return this.audioActive;\n    }\n  }, {\n    key: \"isVideoActive\",\n    value: function isVideoActive() {\n      return this.videoActive;\n    }\n  }, {\n    key: \"isScreenShareActive\",\n    value: function isScreenShareActive() {\n      return this.screenShareActive;\n    }\n  }, {\n    key: \"getConnectionId\",\n    value: function getConnectionId() {\n      return this.connectionId;\n    }\n  }, {\n    key: \"getNickname\",\n    value: function getNickname() {\n      return this.nickname;\n    }\n  }, {\n    key: \"getStreamManager\",\n    value: function getStreamManager() {\n      return this.streamManager;\n    }\n  }, {\n    key: \"isLocal\",\n    value: function isLocal() {\n      return this.type === 'local';\n    }\n  }, {\n    key: \"isRemote\",\n    value: function isRemote() {\n      return !this.isLocal();\n    }\n  }, {\n    key: \"setAudioActive\",\n    value: function setAudioActive(isAudioActive) {\n      this.audioActive = isAudioActive;\n    }\n  }, {\n    key: \"setVideoActive\",\n    value: function setVideoActive(isVideoActive) {\n      this.videoActive = isVideoActive;\n    }\n  }, {\n    key: \"setScreenShareActive\",\n    value: function setScreenShareActive(isScreenShareActive) {\n      this.screenShareActive = isScreenShareActive;\n    }\n  }, {\n    key: \"setStreamManager\",\n    value: function setStreamManager(streamManager) {\n      this.streamManager = streamManager;\n    }\n  }, {\n    key: \"setConnectionId\",\n    value: function setConnectionId(conecctionId) {\n      this.connectionId = conecctionId;\n    }\n  }, {\n    key: \"setNickname\",\n    value: function setNickname(nickname) {\n      this.nickname = nickname;\n    }\n  }, {\n    key: \"setType\",\n    value: function setType(type) {\n      if (type === 'local' | type === 'remote') {\n        this.type = type;\n      }\n    }\n  }]);\n\n  return UserModel;\n}();\n\nvar _default = UserModel;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}