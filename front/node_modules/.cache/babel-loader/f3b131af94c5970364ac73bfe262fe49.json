{"ast":null,"code":"var _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\pages\\\\RoomListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Nav from \"../components/RoomListPageCom/Nav\";\nimport SideBar from \"../components/RoomListPageCom/SideBar\";\nimport RoomList from \"../components/RoomListPageCom/RoomList\";\nimport MyProfile from \"../components/RoomListPageCom/MyProfile\";\nimport Chat from \"../components/RoomListPageCom/Chat\";\nimport { Container, Stack } from \"@mui/material\";\nimport SockJS from \"sockjs-client\";\nimport { over } from \"stompjs\";\nimport { useSelector } from \"react-redux\";\nimport { roomList } from \"../redux/slice/RoomListSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\n\nfunction RoomListPage() {\n  _s();\n\n  const me = useSelector(state => state.user); // 채팅 관련 데이터\n\n  const [Chats, setChats] = useState([]); // 채팅 목록\n  // 로그인 유저 목록\n\n  const [loginUser, setLoginUser] = useState([]); // roomListPage 들어오면 연결\n\n  useEffect(() => {\n    connect();\n  }, []);\n\n  const connect = () => {\n    let Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  }; // 구독 연결\n\n\n  const onConnected = () => {\n    stompClient.subscribe(\"/sub/lobby\", Received);\n    const data = {\n      header: {\n        type: \"join\"\n      },\n      data: {\n        token: me.accessToken,\n        nickname: me.nickname\n      }\n    };\n    stompClient.send(\"/pub/lobby\", {}, JSON.stringify(data));\n  };\n\n  const onError = err => {\n    console.log(err);\n  }; // 서버로부터 받기\n\n\n  const Received = payload => {\n    var payloadData = JSON.parse(payload.body); // JSON 문자열을 JavaScript 객체로 변환\n\n    if (payloadData.header.type === \"chat\") {\n      Chats.push(payloadData);\n      setChats([...Chats]);\n    } else {\n      if (payloadData.header.type === \"join\") {\n        setLoginUser(payloadData.data.users);\n      }\n    }\n  }; // 서버로 전송하기 (내가 쓴 채팅 전송)\n\n\n  const Send = data => {\n    if (stompClient.ws.readyState === 1) {\n      console.log(\"보낸다\");\n      return stompClient.send(\"/pub/lobby\", {}, JSON.stringify(data));\n    }\n  };\n\n  const SendF = (f, type) => {\n    if (stompClient.ws.readyState === 1) {\n      var sendData = {\n        header: {\n          type\n        },\n        data: {\n          friendSeq: null,\n          from: me.nickname,\n          to: f.nickname\n        }\n      };\n      return stompClient.send(`/pub/friend/${f.nickname}`, {}, JSON.stringify(sendData));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        mt: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(SideBar, {\n              loginUser: loginUser,\n              SendF: SendF\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MyProfile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(RoomList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Chat, {\n              Chats: Chats,\n              Send: Send\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RoomListPage, \"EhALd75ZvhmuoBrL03BDRk2TAhM=\", false, function () {\n  return [useSelector];\n});\n\n_c = RoomListPage;\nexport default RoomListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomListPage\");","map":{"version":3,"names":["React","useState","useEffect","Nav","SideBar","RoomList","MyProfile","Chat","Container","Stack","SockJS","over","useSelector","roomList","stompClient","RoomListPage","me","state","user","Chats","setChats","loginUser","setLoginUser","connect","Sock","onConnected","onError","subscribe","Received","data","header","type","token","accessToken","nickname","send","JSON","stringify","err","console","log","payload","payloadData","parse","body","push","users","Send","ws","readyState","SendF","f","sendData","friendSeq","from","to","mt"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/pages/RoomListPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Nav from \"../components/RoomListPageCom/Nav\";\r\nimport SideBar from \"../components/RoomListPageCom/SideBar\";\r\nimport RoomList from \"../components/RoomListPageCom/RoomList\";\r\nimport MyProfile from \"../components/RoomListPageCom/MyProfile\";\r\nimport Chat from \"../components/RoomListPageCom/Chat\";\r\nimport { Container, Stack } from \"@mui/material\";\r\n\r\n\r\nimport SockJS from \"sockjs-client\";\r\nimport { over } from \"stompjs\";\r\n\r\nimport { useSelector} from \"react-redux\";\r\nimport { roomList } from \"../redux/slice/RoomListSlice\";\r\n\r\n\r\nvar stompClient = null;\r\nfunction RoomListPage() {\r\n    const me = useSelector((state) => state.user);\r\n    // 채팅 관련 데이터\r\n    const [Chats, setChats] = useState([]); // 채팅 목록\r\n    // 로그인 유저 목록\r\n    const [loginUser, setLoginUser] = useState([]);\r\n\r\n    // roomListPage 들어오면 연결\r\n    useEffect(() => {\r\n        connect();\r\n    }, []);\r\n    const connect = () => {\r\n        let Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\r\n        stompClient = over(Sock);\r\n        stompClient.connect({}, onConnected, onError);\r\n    };\r\n    // 구독 연결\r\n    const onConnected = () => {\r\n        stompClient.subscribe(\"/sub/lobby\", Received);\r\n        const data = {\r\n            header:{\r\n                type:\"join\",\r\n            },\r\n            data:{\r\n                token: me.accessToken,\r\n                nickname:me.nickname,\r\n            }\r\n        }\r\n        stompClient.send(\"/pub/lobby\", {}, JSON.stringify(data));\r\n    };\r\n\r\n    const onError = (err) => {\r\n        console.log(err);\r\n    };\r\n    // 서버로부터 받기\r\n    const Received = (payload) => {\r\n        var payloadData = JSON.parse(payload.body); // JSON 문자열을 JavaScript 객체로 변환\r\n        if (payloadData.header.type === \"chat\") {\r\n            Chats.push(payloadData);\r\n            setChats([...Chats]);\r\n        } else {\r\n            if (payloadData.header.type === \"join\") {\r\n                setLoginUser(payloadData.data.users);\r\n            }\r\n        }\r\n    };\r\n\r\n    // 서버로 전송하기 (내가 쓴 채팅 전송)\r\n    const Send = (data) => {\r\n        if (stompClient.ws.readyState === 1) {\r\n            console.log(\"보낸다\");\r\n            return stompClient.send(\"/pub/lobby\", {}, JSON.stringify(data));\r\n        }\r\n    };\r\n    const SendF = (f, type) => {\r\n        if (stompClient.ws.readyState === 1) {\r\n            var sendData = {\r\n                header: {\r\n                    type,\r\n                },\r\n                data: {\r\n                    friendSeq: null,\r\n                    from: me.nickname,\r\n                    to: f.nickname,\r\n                },\r\n            };\r\n            return stompClient.send(\r\n                `/pub/friend/${f.nickname}`,\r\n                {},\r\n                JSON.stringify(sendData)\r\n            );\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\" sx={{ mt: 1 }}>\r\n                <Stack\r\n                    direction=\"column\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                >\r\n                    <Nav />\r\n                    <Stack\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        spacing={1}\r\n                    >\r\n                        <Stack\r\n                            direction=\"column\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={1}\r\n                        >\r\n                            <SideBar loginUser={loginUser} SendF={SendF} />\r\n                            <MyProfile />\r\n                        </Stack>\r\n                        <Stack\r\n                            direction=\"column\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={1}\r\n                        >\r\n                            <RoomList />\r\n                            <Chat Chats={Chats} Send={Send} />\r\n                        </Stack>\r\n                    </Stack>\r\n                </Stack>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\nexport default RoomListPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}