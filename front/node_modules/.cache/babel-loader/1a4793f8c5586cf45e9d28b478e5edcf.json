{"ast":null,"code":"import _slicedToArray from \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\components\\\\Friends.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Table, TableContainer, TableBody, Paper, TableRow, TableCell, Button, Container } from \"@mui/material\";\nimport SockJS from \"sockjs-client\";\nimport { over } from \"stompjs\"; // 나에게 친구 건 사람 목록(프로필 / 친구 수락 버튼, 친구 거절 버튼)\n// + 친구 목록(프로필 / 친구 삭제 버튼)\n\nvar stompClient = null;\n\nfunction Friends() {\n  var _this = this;\n\n  var me = useSelector(function (state) {\n    return state.user;\n  }); // 친구 관련\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      friend = _useState2[0],\n      setFriend = _useState2[1]; // 친구 목록\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      wantFriend = _useState4[0],\n      setWantFriend = _useState4[1]; // 나에게 친구 신청한 목록\n\n\n  useEffect(function () {\n    // 친구 목록\n    axios.get(\"/api/user/friend/friend-list\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \".concat(me.accessToken)\n      }\n    }).then(function (response) {\n      console.log(\"axios 내 친구 목록 :\", response.data);\n      setFriend(response.data);\n    }); // 친구 신청 목록\n\n    axios.get(\"/api/user/friend/request-list\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \".concat(me.accessToken)\n      }\n    }).then(function (response) {\n      console.log(\"axios 나에게 친구신청 한 유저 목록 : \", response.data);\n      setWantFriend(response.data);\n    });\n    connect();\n  }, []); // 소켓 연결\n\n  var connect = function connect() {\n    var Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  }; // 구독 연결\n\n\n  var onConnected = function onConnected() {\n    console.log(\"소켓 친구 구독 연결\");\n    stompClient.subscribe(\"/sub/friend/\".concat(me.nickname), Received);\n  };\n\n  var onError = function onError(err) {\n    console.log(\"에러가 남\", err);\n  }; // 서버로부터 받기 (친구 목록, 나에게 친구 신청한 목록)\n\n\n  var Received = function Received(payload) {\n    var payloadData = JSON.parse(payload.body);\n\n    if (payloadData.header.type === \"list\") {\n      // 내목록\n      console.log(\"소켓 서버가 주는 친구 목록\", payloadData);\n      setFriend(payloadData.data.users);\n    } else {\n      if (payloadData.header.type === \"offer-list\") {\n        console.log(\"소켓 서버가 주는 나에게 친구 신청 한 목록\", payloadData);\n        setWantFriend(payloadData.data.users);\n      }\n    }\n  }; // 서버로 전송하기 (친구 수락, 친구 거절, 친구 삭제)\n\n\n  var SendF = function SendF(data, type) {\n    console.log(\"친구\", data);\n    console.log(stompClient);\n\n    if (stompClient.ws.readyState === 1) {\n      // 연결이 되었을 때 전송해야함\n      console.log(\"친구 수락/거절/삭제 보내요\");\n      var sendData = {\n        header: {\n          type: type\n        },\n        data: {\n          friendSeq: data.friendSeq,\n          from: me.nickname,\n          to: data.nickname\n        }\n      };\n      return stompClient.send(\"/pub/friend/\".concat(data.nickname), {}, JSON.stringify(sendData));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    style: {\n      padding: \"20px\",\n      height: \"100px\"\n    },\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"\\uB098\\uC5D0\\uAC8C \\uC2E0\\uCCAD\\uD55C \\uCE5C\\uAD6C \\uBAA9\\uB85D\", wantFriend && wantFriend.map(function (wantF, index) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, wantF.nickname, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: SendF(wantF, \"offer-accept\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    }, \"O\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: SendF(wantF, \"offer-deny\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    }, \"X\")));\n  }), \"\\uCE5C\\uAD6C \\uBAA9\\uB85D\", friend && friend.map(function (f, index) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }, f.nickname, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: SendF(f, \"delete\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 41\n      }\n    }, \"DEL\")));\n  })))));\n}\n\nexport default Friends;","map":{"version":3,"names":["React","useEffect","useState","axios","useSelector","Table","TableContainer","TableBody","Paper","TableRow","TableCell","Button","Container","SockJS","over","stompClient","Friends","me","state","user","friend","setFriend","wantFriend","setWantFriend","get","headers","Authorization","accessToken","then","response","console","log","data","connect","Sock","onConnected","onError","subscribe","nickname","Received","err","payload","payloadData","JSON","parse","body","header","type","users","SendF","ws","readyState","sendData","friendSeq","from","to","send","stringify","padding","height","map","wantF","index","f"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/Friends.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n    Table,\r\n    TableContainer,\r\n    TableBody,\r\n    Paper,\r\n    TableRow,\r\n    TableCell,\r\n    Button,\r\n    Container,\r\n} from \"@mui/material\";\r\n\r\nimport SockJS from \"sockjs-client\";\r\nimport { over } from \"stompjs\";\r\n// 나에게 친구 건 사람 목록(프로필 / 친구 수락 버튼, 친구 거절 버튼)\r\n// + 친구 목록(프로필 / 친구 삭제 버튼)\r\n\r\nvar stompClient = null;\r\nfunction Friends() {\r\n    const me = useSelector((state) => state.user);\r\n    // 친구 관련\r\n    const [friend, setFriend] = useState([]); // 친구 목록\r\n    const [wantFriend, setWantFriend] = useState([]); // 나에게 친구 신청한 목록\r\n    useEffect(() => {\r\n        // 친구 목록\r\n        axios\r\n            .get(\"/api/user/friend/friend-list\", {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${me.accessToken}`,\r\n                },\r\n            })\r\n            .then((response) => {\r\n                console.log(\"axios 내 친구 목록 :\", response.data);\r\n                setFriend(response.data);\r\n            });\r\n        // 친구 신청 목록\r\n        axios\r\n            .get(\"/api/user/friend/request-list\", {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${me.accessToken}`,\r\n                },\r\n            })\r\n            .then((response) => {\r\n                console.log(\r\n                    \"axios 나에게 친구신청 한 유저 목록 : \",\r\n                    response.data\r\n                );\r\n                setWantFriend(response.data);\r\n            });\r\n        connect();\r\n    }, []);\r\n    // 소켓 연결\r\n    const connect = () => {\r\n        let Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\r\n        stompClient = over(Sock);\r\n        stompClient.connect({}, onConnected, onError);\r\n    };\r\n    // 구독 연결\r\n    const onConnected = () => {\r\n        console.log(\"소켓 친구 구독 연결\");\r\n        stompClient.subscribe(`/sub/friend/${me.nickname}`, Received);\r\n    };\r\n    const onError = (err) => {\r\n        console.log(\"에러가 남\", err);\r\n    };\r\n\r\n    // 서버로부터 받기 (친구 목록, 나에게 친구 신청한 목록)\r\n    const Received = (payload) => {\r\n        var payloadData = JSON.parse(payload.body);\r\n        if (payloadData.header.type === \"list\") {\r\n            // 내목록\r\n            console.log(\"소켓 서버가 주는 친구 목록\", payloadData);\r\n            setFriend(payloadData.data.users);\r\n        } else {\r\n            if (payloadData.header.type === \"offer-list\") {\r\n                console.log(\r\n                    \"소켓 서버가 주는 나에게 친구 신청 한 목록\",\r\n                    payloadData\r\n                );\r\n                setWantFriend(payloadData.data.users);\r\n            }\r\n        }\r\n    };\r\n\r\n    // 서버로 전송하기 (친구 수락, 친구 거절, 친구 삭제)\r\n    const SendF = (data, type) => {\r\n        console.log(\"친구\", data);\r\n        console.log(stompClient);\r\n        if (stompClient.ws.readyState === 1) {\r\n            // 연결이 되었을 때 전송해야함\r\n            console.log(\"친구 수락/거절/삭제 보내요\");\r\n            var sendData = {\r\n                header: {\r\n                    type,\r\n                },\r\n                data: {\r\n                    friendSeq: data.friendSeq,\r\n                    from: me.nickname,\r\n                    to: data.nickname,\r\n                },\r\n            };\r\n            return stompClient.send(\r\n                `/pub/friend/${data.nickname}`,\r\n                {},\r\n                JSON.stringify(sendData)\r\n            );\r\n        }\r\n    };\r\n    return (\r\n        <span>\r\n            <TableContainer\r\n                style={{ padding: \"20px\", height: \"100px\" }}\r\n                component={Paper}\r\n            >\r\n                <Table size=\"medium\">\r\n                    <TableBody>\r\n                        나에게 신청한 친구 목록\r\n                        {wantFriend &&\r\n                            wantFriend.map((wantF, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell>\r\n                                        {wantF.nickname}{\" \"}\r\n                                        <button\r\n                                            onClick={SendF(\r\n                                                wantF,\r\n                                                \"offer-accept\"\r\n                                            )}\r\n                                        >\r\n                                            O\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={SendF(wantF, \"offer-deny\")}\r\n                                        >\r\n                                            X\r\n                                        </button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        친구 목록\r\n                        {friend &&\r\n                            friend.map((f, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell>\r\n                                        {f.nickname}{\" \"}\r\n                                        <button onClick={SendF(f, \"delete\")}>\r\n                                            DEL\r\n                                        </button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </span>\r\n    );\r\n}\r\nexport default Friends;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}