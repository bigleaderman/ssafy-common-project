{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventDispatcher = void 0;\n\nvar EventEmitter = require(\"wolfy87-eventemitter\");\n\nvar OpenViduLogger_1 = require(\"../OpenViduInternal/Logger/OpenViduLogger\");\n/**\n * @hidden\n */\n\n\nvar logger = OpenViduLogger_1.OpenViduLogger.getInstance();\n\nvar EventDispatcher =\n/** @class */\nfunction () {\n  function EventDispatcher() {\n    /**\n     * @hidden\n     */\n    this.userHandlerArrowHandler = new WeakMap();\n    /**\n     * @hidden\n     */\n\n    this.ee = new EventEmitter();\n  }\n  /**\n   * @hidden\n   */\n\n\n  EventDispatcher.prototype.onAux = function (type, message, handler) {\n    var arrowHandler = function (event) {\n      if (event) {\n        logger.info(message, event);\n      } else {\n        logger.info(message);\n      }\n\n      handler(event);\n    };\n\n    this.userHandlerArrowHandler.set(handler, arrowHandler);\n    this.ee.on(type, arrowHandler);\n    return this;\n  };\n  /**\n   * @hidden\n   */\n\n\n  EventDispatcher.prototype.onceAux = function (type, message, handler) {\n    var _this = this;\n\n    var arrowHandler = function (event) {\n      if (event) {\n        logger.info(message, event);\n      } else {\n        logger.info(message);\n      }\n\n      handler(event); // Remove handler from map after first and only execution\n\n      _this.userHandlerArrowHandler.delete(handler);\n    };\n\n    this.userHandlerArrowHandler.set(handler, arrowHandler);\n    this.ee.once(type, arrowHandler);\n    return this;\n  };\n  /**\n   * @hidden\n   */\n\n\n  EventDispatcher.prototype.offAux = function (type, handler) {\n    if (!handler) {\n      this.ee.removeAllListeners(type);\n    } else {\n      // Must remove internal arrow function handler paired with user handler\n      var arrowHandler = this.userHandlerArrowHandler.get(handler);\n\n      if (!!arrowHandler) {\n        this.ee.off(type, arrowHandler);\n      }\n\n      this.userHandlerArrowHandler.delete(handler);\n    }\n\n    return this;\n  };\n\n  return EventDispatcher;\n}();\n\nexports.EventDispatcher = EventDispatcher;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;AAoBA;;AACA;AAEA;;;;;AAGA,IAAMA,MAAM,GAAmBC,gCAAeC,WAAf,EAA/B;;AAEA;AAAA;AAAA;EAAA;IAEI;;;IAGA,+BAAmF,IAAIC,OAAJ,EAAnF;IACA;;;;IAGA,UAAK,IAAIC,YAAJ,EAAL;EA4EH;EArDG;;;;;EAGAC,4CAAMC,IAAN,EAAoBC,OAApB,EAAqCC,OAArC,EAAoE;IAChE,IAAMC,YAAY,GAAG,iBAAK;MACtB,IAAIC,KAAJ,EAAW;QACPV,MAAM,CAACW,IAAP,CAAYJ,OAAZ,EAAqBG,KAArB;MACH,CAFD,MAEO;QACHV,MAAM,CAACW,IAAP,CAAYJ,OAAZ;MACH;;MACDC,OAAO,CAACE,KAAD,CAAP;IACH,CAPD;;IAQA,KAAKE,uBAAL,CAA6BC,GAA7B,CAAiCL,OAAjC,EAA0CC,YAA1C;IACA,KAAKK,EAAL,CAAQC,EAAR,CAAWT,IAAX,EAAiBG,YAAjB;IACA,OAAO,IAAP;EACH,CAZD;EAcA;;;;;EAGAJ,8CAAQC,IAAR,EAAsBC,OAAtB,EAAuCC,OAAvC,EAAsE;IAAtE;;IACI,IAAMC,YAAY,GAAG,iBAAK;MACtB,IAAIC,KAAJ,EAAW;QACPV,MAAM,CAACW,IAAP,CAAYJ,OAAZ,EAAqBG,KAArB;MACH,CAFD,MAEO;QACHV,MAAM,CAACW,IAAP,CAAYJ,OAAZ;MACH;;MACDC,OAAO,CAACE,KAAD,CAAP,CANsB,CAOtB;;MACAM,KAAI,CAACJ,uBAAL,CAA6BK,MAA7B,CAAoCT,OAApC;IACH,CATD;;IAUA,KAAKI,uBAAL,CAA6BC,GAA7B,CAAiCL,OAAjC,EAA0CC,YAA1C;IACA,KAAKK,EAAL,CAAQI,IAAR,CAAaZ,IAAb,EAAmBG,YAAnB;IACA,OAAO,IAAP;EACH,CAdD;EAgBA;;;;;EAGAJ,6CAAOC,IAAP,EAAqBE,OAArB,EAAqD;IACjD,IAAI,CAACA,OAAL,EAAc;MACV,KAAKM,EAAL,CAAQK,kBAAR,CAA2Bb,IAA3B;IACH,CAFD,MAEO;MACH;MACA,IAAMG,YAAY,GAAG,KAAKG,uBAAL,CAA6BQ,GAA7B,CAAiCZ,OAAjC,CAArB;;MACA,IAAI,CAAC,CAACC,YAAN,EAAoB;QAChB,KAAKK,EAAL,CAAQO,GAAR,CAAYf,IAAZ,EAAkBG,YAAlB;MACH;;MACD,KAAKG,uBAAL,CAA6BK,MAA7B,CAAoCT,OAApC;IACH;;IACD,OAAO,IAAP;EACH,CAZD;;EAcJ;AAAC,CArFD;;AAAsBc","names":["logger","OpenViduLogger_1","getInstance","WeakMap","EventEmitter","EventDispatcher","type","message","handler","arrowHandler","event","info","userHandlerArrowHandler","set","ee","on","_this","delete","once","removeAllListeners","get","off","exports"],"sources":["C:\\SSAFY\\2nd semester\\S07P12D106\\front\\node_modules\\openvidu-browser\\src\\OpenVidu\\EventDispatcher.ts"],"sourcesContent":["/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event as Event } from '../OpenViduInternal/Events/Event';\nimport { EventMap } from '../OpenViduInternal/Events/EventMap/EventMap';\n\nimport EventEmitter = require('wolfy87-eventemitter');\nimport { OpenViduLogger } from '../OpenViduInternal/Logger/OpenViduLogger';\n\n/**\n * @hidden\n */\nconst logger: OpenViduLogger = OpenViduLogger.getInstance();\n\nexport abstract class EventDispatcher {\n\n    /**\n     * @hidden\n     */\n    userHandlerArrowHandler: WeakMap<(event: Event) => void, (event: Event) => void> = new WeakMap();\n    /**\n     * @hidden\n     */\n    ee = new EventEmitter();\n\n    /**\n     * Adds function `handler` to handle event `type`\n     *\n     * @returns The EventDispatcher object\n     */\n    abstract on<K extends keyof (EventMap)>(type: K, handler: (event: (EventMap)[K]) => void): this;\n\n    /**\n     * Adds function `handler` to handle event `type` just once. The handler will be automatically removed after first execution\n     *\n     * @returns The object that dispatched the event\n     */\n    abstract once<K extends keyof (EventMap)>(type: K, handler: (event: (EventMap)[K]) => void): this;\n\n    /**\n     * Removes a `handler` from event `type`. If no handler is provided, all handlers will be removed from the event\n     *\n     * @returns The object that dispatched the event\n     */\n    abstract off<K extends keyof (EventMap)>(type: K, handler?: (event: (EventMap)[K]) => void): this;\n\n    /**\n     * @hidden\n     */\n    onAux(type: string, message: string, handler: (event: Event) => void): EventDispatcher {\n        const arrowHandler = event => {\n            if (event) {\n                logger.info(message, event);\n            } else {\n                logger.info(message);\n            }\n            handler(event);\n        };\n        this.userHandlerArrowHandler.set(handler, arrowHandler);\n        this.ee.on(type, arrowHandler);\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    onceAux(type: string, message: string, handler: (event: Event) => void): EventDispatcher {\n        const arrowHandler = event => {\n            if (event) {\n                logger.info(message, event);\n            } else {\n                logger.info(message);\n            }\n            handler(event);\n            // Remove handler from map after first and only execution\n            this.userHandlerArrowHandler.delete(handler);\n        };\n        this.userHandlerArrowHandler.set(handler, arrowHandler);\n        this.ee.once(type, arrowHandler);\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    offAux(type: string, handler?: (event: Event) => void): EventDispatcher {\n        if (!handler) {\n            this.ee.removeAllListeners(type);\n        } else {\n            // Must remove internal arrow function handler paired with user handler\n            const arrowHandler = this.userHandlerArrowHandler.get(handler);\n            if (!!arrowHandler) {\n                this.ee.off(type, arrowHandler);\n            }\n            this.userHandlerArrowHandler.delete(handler);\n        }\n        return this;\n    }\n\n}"]},"metadata":{},"sourceType":"script"}