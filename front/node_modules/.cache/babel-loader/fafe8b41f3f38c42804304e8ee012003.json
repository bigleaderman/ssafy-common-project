{"ast":null,"code":"import _slicedToArray from \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\components\\\\GatherRoomPageCom\\\\PlayMap.js\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SavePosX, selectPosX } from \"../../redux/slice/GatherMapPosXSlice\";\nimport { SavePosY, selectPosY } from \"../../redux/slice/GatherMapPosYSlice\";\nimport { useBeforeunload } from \"react-beforeunload\";\nexport default function PlayMap(props) {\n  var dispatch = useDispatch(); //맵 크기\n\n  var size = 700; //포커싱 지정을 위한 변수\n\n  var mapFocus = useRef(); // const charX = useRef(useSelector(selectPosX));\n  // const charY = useRef(useSelector(selectPosY));\n\n  var myChar; //부드러운 움직임을 위한 변수 선언\n\n  var keyPress = {},\n      // pX = useSelector(selectPosX),\n  // pY = useSelector(selectPosY),\n  pX = useRef(useSelector(selectPosX)),\n      pY = useRef(useSelector(selectPosY)),\n      speed = 5; //0.1초마다 키 입력 확인\n\n  var inputCheck = setInterval(function () {\n    if (keyPress[87]) pY.current -= speed;\n    if (keyPress[83]) pY.current += speed; // down - s\n\n    if (keyPress[65]) pX.current -= speed; // left - a\n\n    if (keyPress[68]) pX.current += speed;\n    myChar.style.left = pX.current + \"px\";\n    myChar.style.top = pY.current + \"px\";\n    console.log(\"interval\");\n  }, 20); //첫 렌더링될 때만 입력받는 input태그로 focus\n\n  useEffect(function () {\n    mapFocus.current.focus();\n  }, []); //렌더링될 때마다 myChar가 #myCharacter 를 가르킴\n\n  useEffect(function () {\n    myChar = document.getElementById(\"myCharacter\"); //랜더링 종료 시 인터벌 종료\n\n    return function () {\n      clearInterval(inputCheck);\n      console.log(\"pX : \", pX.current);\n      console.log(\"pY : \", pY.current);\n      dispatch(SavePosX(pX.current));\n      dispatch(SavePosY(pY.current));\n    };\n  }); //맵 클릭 시 입력 포커싱 지정\n\n  var changeFocus = function changeFocus() {\n    mapFocus.current.focus();\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    keyPress[e.keyCode.toString()] = true;\n  };\n\n  var handleKeyUp = function handleKeyUp(e) {\n    keyPress[e.keyCode.toString()] = false;\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Value = _useState2[0],\n      setValue = _useState2[1];\n\n  useBeforeunload(function (e) {\n    if (value !== \"\") e.preventDefault();\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: changeFocus,\n    style: {\n      width: size,\n      height: size,\n      background: \"orange\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myCharacter\",\n    style: {\n      width: 50,\n      height: 50,\n      background: \"red\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    value: Value // style={{ display: \"none\" }}\n    ,\n    type: \"text\",\n    ref: mapFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), \"playMap\");\n}","map":{"version":3,"names":["React","useRef","useEffect","useState","useSelector","useDispatch","SavePosX","selectPosX","SavePosY","selectPosY","useBeforeunload","PlayMap","props","dispatch","size","mapFocus","myChar","keyPress","pX","pY","speed","inputCheck","setInterval","current","style","left","top","console","log","focus","document","getElementById","clearInterval","changeFocus","handleKeyDown","e","keyCode","toString","handleKeyUp","Value","setValue","value","preventDefault","width","height","background","position","target"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/GatherRoomPageCom/PlayMap.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SavePosX, selectPosX } from \"../../redux/slice/GatherMapPosXSlice\";\r\nimport { SavePosY, selectPosY } from \"../../redux/slice/GatherMapPosYSlice\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\n\r\nexport default function PlayMap(props) {\r\n    const dispatch = useDispatch();\r\n    //맵 크기\r\n    const size = 700;\r\n    //포커싱 지정을 위한 변수\r\n    const mapFocus = useRef();\r\n    // const charX = useRef(useSelector(selectPosX));\r\n    // const charY = useRef(useSelector(selectPosY));\r\n    let myChar;\r\n\r\n    //부드러운 움직임을 위한 변수 선언\r\n    let keyPress = {},\r\n        // pX = useSelector(selectPosX),\r\n        // pY = useSelector(selectPosY),\r\n        pX = useRef(useSelector(selectPosX)),\r\n        pY = useRef(useSelector(selectPosY)),\r\n        speed = 5;\r\n\r\n    //0.1초마다 키 입력 확인\r\n    const inputCheck = setInterval(() => {\r\n        if (keyPress[87]) pY.current -= speed;\r\n        if (keyPress[83]) pY.current += speed; // down - s\r\n        if (keyPress[65]) pX.current -= speed; // left - a\r\n        if (keyPress[68]) pX.current += speed;\r\n\r\n        myChar.style.left = pX.current + \"px\";\r\n        myChar.style.top = pY.current + \"px\";\r\n        console.log(\"interval\");\r\n    }, 20);\r\n\r\n    //첫 렌더링될 때만 입력받는 input태그로 focus\r\n    useEffect(() => {\r\n        mapFocus.current.focus();\r\n    }, []);\r\n\r\n    //렌더링될 때마다 myChar가 #myCharacter 를 가르킴\r\n    useEffect(() => {\r\n        myChar = document.getElementById(\"myCharacter\");\r\n\r\n        //랜더링 종료 시 인터벌 종료\r\n        return () => {\r\n            clearInterval(inputCheck);\r\n\r\n            console.log(\"pX : \", pX.current);\r\n            console.log(\"pY : \", pY.current);\r\n            dispatch(SavePosX(pX.current));\r\n            dispatch(SavePosY(pY.current));\r\n        };\r\n    });\r\n\r\n    //맵 클릭 시 입력 포커싱 지정\r\n    const changeFocus = () => {\r\n        mapFocus.current.focus();\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        keyPress[e.keyCode.toString()] = true;\r\n    };\r\n    const handleKeyUp = (e) => {\r\n        keyPress[e.keyCode.toString()] = false;\r\n    };\r\n    const [Value, setValue] = useState(\"\");\r\n    useBeforeunload((e) => {\r\n        if (value !== \"\") e.preventDefault();\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onClick={changeFocus}\r\n                style={{\r\n                    width: size,\r\n                    height: size,\r\n                    background: \"orange\",\r\n                }}\r\n            >\r\n                <div\r\n                    id=\"myCharacter\"\r\n                    style={{\r\n                        width: 50,\r\n                        height: 50,\r\n                        background: \"red\",\r\n                        position: \"relative\",\r\n                    }}\r\n                ></div>\r\n            </div>\r\n            <input\r\n                onChange={(e) => setValue(e.target.value)}\r\n                value={Value}\r\n                // style={{ display: \"none\" }}\r\n                type=\"text\"\r\n                ref={mapFocus}\r\n                onKeyDown={handleKeyDown}\r\n                onKeyUp={handleKeyUp}\r\n                readOnly\r\n            />\r\n            playMap\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}