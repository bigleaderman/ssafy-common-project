{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\components\\\\RoomListPageCom\\\\Chat.js\",\n    _templateObject,\n    _templateObject2;\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { Table, TableContainer, TableBody, Paper, TableRow, TableCell, Button, Container } from \"@mui/material\";\n\nfunction Chat(_ref) {\n  var _this = this;\n\n  var Chats = _ref.Chats,\n      Send = _ref.Send;\n  var username = useSelector(function (state) {\n    return state.user.nickname;\n  }); // 보내는 채팅\n\n  var _useState = useState({\n    header: {\n      type: \"chat\"\n    },\n    data: {\n      nickname: username,\n      message: \"\"\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userChat = _useState2[0],\n      setUserChat = _useState2[1]; // 채팅 적기\n\n\n  var handleMessage = function handleMessage(event) {\n    var value = event.target.value;\n    setUserChat(_objectSpread({}, userChat, {\n      data: {\n        nickname: username,\n        message: value\n      }\n    }));\n  }; // 채팅 전송\n\n\n  var sendValue = function sendValue() {\n    if (userChat.data.message) {\n      Send(userChat);\n    }\n\n    setUserChat(_objectSpread({}, userChat, {\n      data: {\n        nickname: username,\n        message: \"\"\n      }\n    }));\n  }; // 엔터 키 입력\n\n\n  var handleOnKeyPress = function handleOnKeyPress(e) {\n    if (e.key === \"Enter\" && userChat.data.message) {\n      sendValue(userChat); // Enter 입력이 되면 클릭 이벤트 실행\n\n      setUserChat(_objectSpread({}, userChat, {\n        data: {\n          nickname: username,\n          message: \"\"\n        }\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    style: {\n      padding: \"20px\",\n      height: \"100px\"\n    },\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, Chats && Chats.map(function (chat, index) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, chat.data.nickname, \" :\", \" \"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 37\n      }\n    }, chat.data.message));\n  })))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    style: {\n      height: 20,\n      width: \"100%\"\n    },\n    value: userChat.data.message,\n    onChange: handleMessage,\n    onKeyPress: handleOnKeyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    sx: {\n      ml: 1,\n      height: 25\n    },\n    onClick: sendValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"send\"));\n}\n\nvar UL = styled.section(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    list-style: none;\\n    display: flex;\\n    flex-direction: column;\\n\"])));\nvar Border = styled.section(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    border: 1px solid rgba(0, 0, 0, 0.2);\\n    border-radius: 5px;\\n    margin: 0.5em;\\n\"])));\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","styled","useSelector","Table","TableContainer","TableBody","Paper","TableRow","TableCell","Button","Container","Chat","Chats","Send","username","state","user","nickname","header","type","data","message","userChat","setUserChat","handleMessage","event","value","target","sendValue","handleOnKeyPress","e","key","padding","height","map","chat","index","width","ml","UL","section","Border"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/RoomListPageCom/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n    Table,\r\n    TableContainer,\r\n    TableBody,\r\n    Paper,\r\n    TableRow,\r\n    TableCell,\r\n    Button,\r\n    Container,\r\n} from \"@mui/material\";\r\n\r\nfunction Chat({ Chats, Send }) {\r\n    const username = useSelector((state) => state.user.nickname);\r\n    // 보내는 채팅\r\n    const [userChat, setUserChat] = useState({\r\n        header: {\r\n            type: \"chat\",\r\n        },\r\n        data: {\r\n            nickname: username,\r\n            message: \"\",\r\n        },\r\n    });\r\n    // 채팅 적기\r\n    const handleMessage = (event) => {\r\n        const { value } = event.target;\r\n        setUserChat({\r\n            ...userChat,\r\n            data: {\r\n                nickname: username,\r\n                message: value,\r\n            },\r\n        });\r\n    };\r\n\r\n    // 채팅 전송\r\n    const sendValue = () => {\r\n        if (userChat.data.message){\r\n            Send(userChat);\r\n        }\r\n\r\n        setUserChat({\r\n            ...userChat,\r\n            data: {\r\n                nickname: username,\r\n                message: \"\",\r\n            },\r\n        });\r\n    };\r\n    // 엔터 키 입력\r\n    const handleOnKeyPress = (e) => {\r\n        if (e.key === \"Enter\" && userChat.data.message) {\r\n            sendValue(userChat); // Enter 입력이 되면 클릭 이벤트 실행\r\n            setUserChat({\r\n                ...userChat,\r\n                data: {\r\n                    nickname: username,\r\n                    message: \"\",\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <TableContainer\r\n                style={{ padding: \"20px\", height: \"100px\" }}\r\n                component={Paper}\r\n            >\r\n                <Table size=\"medium\">\r\n                    <TableBody>\r\n                        {Chats &&\r\n                            Chats.map((chat, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell>\r\n                                        {chat.data.nickname} :{\" \"}\r\n                                    </TableCell>\r\n                                    <TableCell>{chat.data.message}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <input\r\n                type=\"text\"\r\n                style={{ height: 20, width: \"100%\" }}\r\n                value={userChat.data.message}\r\n                onChange={handleMessage}\r\n                onKeyPress={handleOnKeyPress}\r\n            />\r\n            <Button\r\n                variant=\"outlined\"\r\n                sx={{ ml: 1, height: 25 }}\r\n                onClick={sendValue}\r\n            >\r\n                send\r\n            </Button>\r\n        </Container>\r\n    );\r\n}\r\nconst UL = styled.section`\r\n    list-style: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\nconst Border = styled.section`\r\n    border: 1px solid rgba(0, 0, 0, 0.2);\r\n    border-radius: 5px;\r\n    margin: 0.5em;\r\n`;\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}