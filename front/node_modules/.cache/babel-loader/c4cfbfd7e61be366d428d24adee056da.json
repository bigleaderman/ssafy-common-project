{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PlatformUtils = void 0;\n\nvar platform = require(\"platform\");\n\nvar PlatformUtils =\n/** @class */\nfunction () {\n  function PlatformUtils() {}\n\n  PlatformUtils.getInstance = function () {\n    if (!this.instance) {\n      this.instance = new PlatformUtils();\n    }\n\n    return PlatformUtils.instance;\n  };\n\n  PlatformUtils.prototype.isChromeBrowser = function () {\n    return platform.name === \"Chrome\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isSafariBrowser = function () {\n    return platform.name === \"Safari\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isChromeMobileBrowser = function () {\n    return platform.name === \"Chrome Mobile\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isFirefoxBrowser = function () {\n    return platform.name === \"Firefox\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isFirefoxMobileBrowser = function () {\n    return platform.name === \"Firefox Mobile\" || platform.name === \"Firefox for iOS\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isOperaBrowser = function () {\n    return platform.name === \"Opera\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isOperaMobileBrowser = function () {\n    return platform.name === \"Opera Mobile\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isEdgeBrowser = function () {\n    var version = (platform === null || platform === void 0 ? void 0 : platform.version) ? parseFloat(platform.version) : -1;\n    return platform.name === \"Microsoft Edge\" && version >= 80;\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isEdgeMobileBrowser = function () {\n    var _a, _b;\n\n    var version = (platform === null || platform === void 0 ? void 0 : platform.version) ? parseFloat(platform.version) : -1;\n    return platform.name === \"Microsoft Edge\" && (((_a = platform.os) === null || _a === void 0 ? void 0 : _a.family) === 'Android' || ((_b = platform.os) === null || _b === void 0 ? void 0 : _b.family) === 'iOS') && version > 45;\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isAndroidBrowser = function () {\n    return platform.name === \"Android Browser\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isElectron = function () {\n    return platform.name === \"Electron\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isSamsungBrowser = function () {\n    return platform.name === \"Samsung Internet Mobile\" || platform.name === \"Samsung Internet\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isIPhoneOrIPad = function () {\n    var userAgent = !!platform.ua ? platform.ua : navigator.userAgent;\n    var isTouchable = (\"ontouchend\" in document);\n    var isIPad = /\\b(\\w*Macintosh\\w*)\\b/.test(userAgent) && isTouchable;\n    var isIPhone = /\\b(\\w*iPhone\\w*)\\b/.test(userAgent) && /\\b(\\w*Mobile\\w*)\\b/.test(userAgent) && isTouchable;\n    return isIPad || isIPhone;\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isIOSWithSafari = function () {\n    var userAgent = !!platform.ua ? platform.ua : navigator.userAgent;\n    return this.isIPhoneOrIPad() && /\\b(\\w*Apple\\w*)\\b/.test(navigator.vendor) && /\\b(\\w*Safari\\w*)\\b/.test(userAgent) && !/\\b(\\w*CriOS\\w*)\\b/.test(userAgent) && !/\\b(\\w*FxiOS\\w*)\\b/.test(userAgent);\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isIonicIos = function () {\n    return this.isIPhoneOrIPad() && platform.ua.indexOf(\"Safari\") === -1;\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isIonicAndroid = function () {\n    return platform.os.family === \"Android\" && platform.name == \"Android Browser\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isMobileDevice = function () {\n    return platform.os.family === \"iOS\" || platform.os.family === \"Android\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isReactNative = function () {\n    return false;\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.isChromium = function () {\n    return this.isChromeBrowser() || this.isChromeMobileBrowser() || this.isOperaBrowser() || this.isOperaMobileBrowser() || this.isEdgeBrowser() || this.isEdgeMobileBrowser() || this.isSamsungBrowser() || this.isIonicAndroid() || this.isIonicIos() || this.isElectron();\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.canScreenShare = function () {\n    var version = (platform === null || platform === void 0 ? void 0 : platform.version) ? parseFloat(platform.version) : -1; // Reject mobile devices\n\n    if (this.isMobileDevice()) {\n      return false;\n    }\n\n    return this.isChromeBrowser() || this.isFirefoxBrowser() || this.isOperaBrowser() || this.isElectron() || this.isEdgeBrowser() || this.isSafariBrowser() && version >= 13;\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.getName = function () {\n    return platform.name || \"\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.getVersion = function () {\n    return platform.version || \"\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.getFamily = function () {\n    return platform.os.family || \"\";\n  };\n  /**\n   * @hidden\n   */\n\n\n  PlatformUtils.prototype.getDescription = function () {\n    return platform.description || \"\";\n  };\n\n  return PlatformUtils;\n}();\n\nexports.PlatformUtils = PlatformUtils;","map":null,"metadata":{},"sourceType":"script"}