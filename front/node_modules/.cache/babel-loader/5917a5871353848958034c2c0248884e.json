{"ast":null,"code":"var _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\pages\\\\GatherRoomPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; //자체 컴포넌트\n\nimport MainBar from \"../components/GatherRoomPageCom/MainBar\";\nimport NaviBar from \"../components/GatherRoomPageCom/NaviBar\";\nimport PlayMap from \"../components/GatherRoomPageCom/PlayMap\";\nimport SideBar from \"../components/GatherRoomPageCom/SideBar\";\nimport AllCam from \"../components/GameRoomPageCom/AllCam\"; //mui 컴포넌트\n\nimport Grid from \"@mui/material/Grid\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\"; //socktjs\n\nimport SockJS from \"sockjs-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GatherRoom = () => {\n  _s();\n\n  //현재 입장한 방 번호\n  const roooNum = 0;\n  const [IsGameStart, setIsGameStart] = useState(false);\n  const [userJoin, setUserJoin] = useState();\n  let subGatherRoom = \"\"; //구독할 주소\n\n  const sockADR = `/sub/room/${roooNum}`; //웹소켓 선언 및 초기화\n  //SockJs + StompJs\n\n  var StompJs = require(\"@stomp/stompjs\");\n\n  const client2 = new StompJs.Client({\n    //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\n    // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\n    connectHeaders: {},\n    // debug: function (str) {\n    //   console.log(str);\n    // },\n    reconnectDelay: 5000,\n    heartbeatIncoming: 4000,\n    heartbeatOutgoing: 4000\n  });\n\n  client2.webSocketFactory = () => {\n    return new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\n  }; //소켓통신이 종료되었을 때 실행되는 코드\n\n\n  client2.onWebSocketClose = () => {\n    console.log(\"socket close\");\n  }; //에러 발생시 실행되는 코드\n\n\n  client2.onStompError = function (frame) {\n    // Will be invoked in case of error encountered at Broker\n    // Bad login/passcode typically will cause an error\n    // Complaint brokers will set `message` header with a brief message. Body may contain details.\n    // Compliant brokers will terminate the connection after any error\n    console.log(\"Broker reported error: \" + frame.headers[\"message\"]);\n    console.log(\"Additional details: \" + frame.body);\n  }; //**************************************** */\n  //** 소켓으로 정보를 받았을 때 처리 함수 **\n  //**************************************** */\n\n\n  const onMessageReceived = payload => {\n    console.log(\"payload: \", payload);\n    var payloadData = JSON.parse(payload.body);\n    console.log(payloadData); //내가 송신한 정보는 처리 X\n\n    if (payloadData.data.nickname === myNickName) return; //타 유저 정보 처리\n    //방 접속 신호 수신\n\n    if (payloadData.header.type === \"join\") {\n      console.log(payloadData); //이미 방에 접속해있는 유저인 경우 처리해주지 않음\n\n      if (otherUserData[payloadData.data.nickname]) return; //새로 들어왔으면 해당 유저에게 자신의 정보를 반환\n\n      client2.publish({\n        destination: sockADR,\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          header: {\n            type: \"list\"\n          },\n          data: {\n            nickname: myNickName,\n            color: myColor,\n            x: pX.current,\n            y: pY.current\n          }\n        }),\n        skipContentLengthHeader: true\n      }); //새로 접속해온 경우 남아있는 자리를 확인\n\n      for (let i in remainNum) {\n        //빈 자리에 넣기\n        if (!remainNum[i]) {\n          remainNum[i] = true; //색변경 => 보이기\n\n          otherUserData[payloadData.data.nickname] = {\n            color: payloadData.data.color,\n            num: i\n          };\n          document.getElementById(`char${i}`).style.left = startYX.x;\n          document.getElementById(`char${i}`).style.top = startYX.y;\n          document.getElementById(`char${i}`).style.background = payloadData.data.color;\n          document.getElementById(`char${i}`).style.display = \"block\";\n          document.getElementById(`char${i}Name`).innerText = payloadData.data.nickname;\n          break;\n        }\n      }\n    } //join 정보에\n    else if (payloadData.header.type === \"list\") {\n      console.log(\"list: \", payloadData);\n      if (otherUserData[payloadData.data.nickname]) return; //새로 접속해온 경우 남아있는 자리를 확인\n\n      for (let i in remainNum) {\n        //빈 자리에 넣기\n        if (!remainNum[i]) {\n          remainNum[i] = true; //색변경 => 보이기\n\n          otherUserData[payloadData.data.nickname] = {\n            color: payloadData.data.color,\n            num: i\n          };\n          document.getElementById(`char${i}`).style.left = payloadData.data.x + \"px\";\n          document.getElementById(`char${i}`).style.top = payloadData.data.y + \"px\";\n          document.getElementById(`char${i}`).style.background = payloadData.data.color;\n          document.getElementById(`char${i}`).style.display = \"block\";\n          document.getElementById(`char${i}Name`).innerText = payloadData.data.nickname;\n          break;\n        }\n      }\n    } //방을 떠나는 신호 수신\n    else if (payloadData.header.type === \"leave\") {\n      console.log(\"type: \", payloadData.header.type + \", body: \" + payloadData.body);\n      let userNum = otherUserData[payloadData.data.nickname].num;\n      remainNum[userNum] = false;\n      otherUserData[payloadData.data.nickname] = undefined;\n      document.getElementById(`char${userNum}`).style.display = \"none\";\n      document.getElementById(`char${userNum}Name`).innerText = \"\";\n    } //캐릭터 움직일 때\n    else if (payloadData.header.type === \"interact\") {\n      if (otherUserData[payloadData.data.nickname] === undefined) {\n        console.log(\"undefined error, otherUserData: \", otherUserData);\n      } //위치 변경\n\n\n      document.getElementById(`char${otherUserData[payloadData.data.nickname].num}`).style.left = payloadData.data.x + \"px\";\n      document.getElementById(`char${otherUserData[payloadData.data.nickname].num}`).style.top = payloadData.data.y + \"px\";\n      otherUserData[payloadData.data.nickname][\"y\"] = payloadData.data.y;\n      otherUserData[payloadData.data.nickname][\"x\"] = payloadData.data.x; //의자에 앉았을 때 해당 의자 비활성화\n\n      if (payloadData.data.status === \"ready\") {\n        console.log(\"레디 신호 수신, 이름 의자번호: \" + payloadData.data.nickname + \" \" + payloadData.data.chairNum);\n      } //의자 일어섰을 때 해당 의자 활성화\n      else if (payloadData.data.status === \"stand\") {}\n    } else if (payloadData.header.type === \"start\") {\n      console.log(payloadData.data);\n    } //게임 설정 변경 데이터 수신\n    else if (payloadData.header.type === \"setting\") {\n      console.log(\"type: \", payloadData.header.type + \", body: \" + payloadData.body); //방 제목 변경 추후\n\n      dispatch(setLimit(payloadData.data.capacity));\n      dispatch(setMaf(payloadData.data.mafia));\n      dispatch(setDoc(payloadData.data.doctor));\n      dispatch(setCop(payloadData.data.police));\n      dispatch(setMaf(payloadData.data.mafia));\n      dispatch(setTalkTime(payloadData.data.talkTime));\n      dispatch(setVoteTime(payloadData.data.voteTime));\n      dispatch(setNightTime(payloadData.data.nightTime));\n    } //해당 되지 않는 타입 출력\n    else {\n      console.log(\"else: \", payloadData);\n    }\n  };\n\n  client2.onConnect = frame => {\n    console.log(\"run onConnect\"); //구독 및 연결 시 메세지 전송\n\n    console.log(\"onMessageReceived: \", onMessageReceived());\n    subGatherRoom = client2.subscribe(\"/sub/room/0\", onMessageReceived());\n    console.log(userJoin);\n    userJoin();\n    console.log(\"ended onConnect\");\n  }; //한번만 실행\n\n\n  useEffect(() => {\n    console.log(\"run client.activate\");\n    client2.activate();\n    console.log(\"exit client.activate\"); //랜더링 종료될 때 실행\n\n    return () => {\n      console.log(\"run client.deactivate\");\n      client2.deactivate();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: /*#__PURE__*/_jsxDEV(MainBar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: IsGameStart ? /*#__PURE__*/_jsxDEV(AllCam, {\n              sockADR: sockADR,\n              client2: client2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(PlayMap // sockADR={sockADR}\n            // client2={client2}\n            , {\n              setOnMessageReceived: setOnMessageReceived // subGatherRoom={subGatherRoom}\n              // setUserJoin={setUserJoin}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            style: {\n              height: 50\n            },\n            children: /*#__PURE__*/_jsxDEV(NaviBar, {\n              sockADR: sockADR,\n              IsGameStart: IsGameStart,\n              setIsGameStart: setIsGameStart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: /*#__PURE__*/_jsxDEV(SideBar, {\n              client2: client2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GatherRoom, \"ZOAerLy1Fx4o9rFpM4sKm0H6qno=\");\n\n_c = GatherRoom;\nexport default GatherRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"GatherRoom\");","map":{"version":3,"names":["React","useEffect","useState","MainBar","NaviBar","PlayMap","SideBar","AllCam","Grid","Container","Paper","SockJS","GatherRoom","roooNum","IsGameStart","setIsGameStart","userJoin","setUserJoin","subGatherRoom","sockADR","StompJs","require","client2","Client","connectHeaders","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","webSocketFactory","onWebSocketClose","console","log","onStompError","frame","headers","body","onMessageReceived","payload","payloadData","JSON","parse","data","nickname","myNickName","header","type","otherUserData","publish","destination","stringify","color","myColor","x","pX","current","y","pY","skipContentLengthHeader","i","remainNum","num","document","getElementById","style","left","startYX","top","background","display","innerText","userNum","undefined","status","chairNum","dispatch","setLimit","capacity","setMaf","mafia","setDoc","doctor","setCop","police","setTalkTime","talkTime","setVoteTime","voteTime","setNightTime","nightTime","onConnect","subscribe","activate","deactivate","setOnMessageReceived","height"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/pages/GatherRoomPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n//자체 컴포넌트\r\nimport MainBar from \"../components/GatherRoomPageCom/MainBar\";\r\nimport NaviBar from \"../components/GatherRoomPageCom/NaviBar\";\r\nimport PlayMap from \"../components/GatherRoomPageCom/PlayMap\";\r\nimport SideBar from \"../components/GatherRoomPageCom/SideBar\";\r\nimport AllCam from \"../components/GameRoomPageCom/AllCam\";\r\n\r\n//mui 컴포넌트\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\n//socktjs\r\nimport SockJS from \"sockjs-client\";\r\n\r\nconst GatherRoom = () => {\r\n  //현재 입장한 방 번호\r\n  const roooNum = 0;\r\n  const [IsGameStart, setIsGameStart] = useState(false);\r\n  const [userJoin, setUserJoin] = useState();\r\n  let subGatherRoom = \"\";\r\n  //구독할 주소\r\n  const sockADR = `/sub/room/${roooNum}`;\r\n\r\n  //웹소켓 선언 및 초기화\r\n  //SockJs + StompJs\r\n  var StompJs = require(\"@stomp/stompjs\");\r\n\r\n  const client2 = new StompJs.Client({\r\n    //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\r\n    // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\r\n    connectHeaders: {},\r\n    // debug: function (str) {\r\n    //   console.log(str);\r\n    // },\r\n    reconnectDelay: 5000,\r\n    heartbeatIncoming: 4000,\r\n    heartbeatOutgoing: 4000,\r\n  });\r\n\r\n  client2.webSocketFactory = () => {\r\n    return new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\r\n  };\r\n\r\n  //소켓통신이 종료되었을 때 실행되는 코드\r\n  client2.onWebSocketClose = () => {\r\n    console.log(\"socket close\");\r\n  };\r\n\r\n  //에러 발생시 실행되는 코드\r\n  client2.onStompError = function (frame) {\r\n    // Will be invoked in case of error encountered at Broker\r\n    // Bad login/passcode typically will cause an error\r\n    // Complaint brokers will set `message` header with a brief message. Body may contain details.\r\n    // Compliant brokers will terminate the connection after any error\r\n    console.log(\"Broker reported error: \" + frame.headers[\"message\"]);\r\n    console.log(\"Additional details: \" + frame.body);\r\n  };\r\n\r\n  //**************************************** */\r\n  //** 소켓으로 정보를 받았을 때 처리 함수 **\r\n  //**************************************** */\r\n  const onMessageReceived = (payload) => {\r\n    console.log(\"payload: \", payload);\r\n    var payloadData = JSON.parse(payload.body);\r\n    console.log(payloadData);\r\n    //내가 송신한 정보는 처리 X\r\n    if (payloadData.data.nickname === myNickName) return;\r\n\r\n    //타 유저 정보 처리\r\n    //방 접속 신호 수신\r\n    if (payloadData.header.type === \"join\") {\r\n      console.log(payloadData);\r\n      //이미 방에 접속해있는 유저인 경우 처리해주지 않음\r\n      if (otherUserData[payloadData.data.nickname]) return;\r\n\r\n      //새로 들어왔으면 해당 유저에게 자신의 정보를 반환\r\n      client2.publish({\r\n        destination: sockADR,\r\n        headers: { \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          header: {\r\n            type: \"list\",\r\n          },\r\n          data: {\r\n            nickname: myNickName,\r\n            color: myColor,\r\n            x: pX.current,\r\n            y: pY.current,\r\n          },\r\n        }),\r\n        skipContentLengthHeader: true,\r\n      });\r\n\r\n      //새로 접속해온 경우 남아있는 자리를 확인\r\n      for (let i in remainNum) {\r\n        //빈 자리에 넣기\r\n        if (!remainNum[i]) {\r\n          remainNum[i] = true;\r\n          //색변경 => 보이기\r\n          otherUserData[payloadData.data.nickname] = { color: payloadData.data.color, num: i };\r\n          document.getElementById(`char${i}`).style.left = startYX.x;\r\n          document.getElementById(`char${i}`).style.top = startYX.y;\r\n          document.getElementById(`char${i}`).style.background = payloadData.data.color;\r\n          document.getElementById(`char${i}`).style.display = \"block\";\r\n          document.getElementById(`char${i}Name`).innerText = payloadData.data.nickname;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    //join 정보에\r\n    else if (payloadData.header.type === \"list\") {\r\n      console.log(\"list: \", payloadData);\r\n      if (otherUserData[payloadData.data.nickname]) return;\r\n\r\n      //새로 접속해온 경우 남아있는 자리를 확인\r\n      for (let i in remainNum) {\r\n        //빈 자리에 넣기\r\n        if (!remainNum[i]) {\r\n          remainNum[i] = true;\r\n          //색변경 => 보이기\r\n          otherUserData[payloadData.data.nickname] = { color: payloadData.data.color, num: i };\r\n          document.getElementById(`char${i}`).style.left = payloadData.data.x + \"px\";\r\n          document.getElementById(`char${i}`).style.top = payloadData.data.y + \"px\";\r\n          document.getElementById(`char${i}`).style.background = payloadData.data.color;\r\n          document.getElementById(`char${i}`).style.display = \"block\";\r\n          document.getElementById(`char${i}Name`).innerText = payloadData.data.nickname;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    //방을 떠나는 신호 수신\r\n    else if (payloadData.header.type === \"leave\") {\r\n      console.log(\"type: \", payloadData.header.type + \", body: \" + payloadData.body);\r\n      let userNum = otherUserData[payloadData.data.nickname].num;\r\n      remainNum[userNum] = false;\r\n      otherUserData[payloadData.data.nickname] = undefined;\r\n      document.getElementById(`char${userNum}`).style.display = \"none\";\r\n      document.getElementById(`char${userNum}Name`).innerText = \"\";\r\n    }\r\n    //캐릭터 움직일 때\r\n    else if (payloadData.header.type === \"interact\") {\r\n      if (otherUserData[payloadData.data.nickname] === undefined) {\r\n        console.log(\"undefined error, otherUserData: \", otherUserData);\r\n      }\r\n      //위치 변경\r\n      document.getElementById(`char${otherUserData[payloadData.data.nickname].num}`).style.left =\r\n        payloadData.data.x + \"px\";\r\n      document.getElementById(`char${otherUserData[payloadData.data.nickname].num}`).style.top =\r\n        payloadData.data.y + \"px\";\r\n      otherUserData[payloadData.data.nickname][\"y\"] = payloadData.data.y;\r\n      otherUserData[payloadData.data.nickname][\"x\"] = payloadData.data.x;\r\n\r\n      //의자에 앉았을 때 해당 의자 비활성화\r\n      if (payloadData.data.status === \"ready\") {\r\n        console.log(\r\n          \"레디 신호 수신, 이름 의자번호: \" +\r\n            payloadData.data.nickname +\r\n            \" \" +\r\n            payloadData.data.chairNum\r\n        );\r\n      }\r\n      //의자 일어섰을 때 해당 의자 활성화\r\n      else if (payloadData.data.status === \"stand\") {\r\n      }\r\n    } else if (payloadData.header.type === \"start\") {\r\n      console.log(payloadData.data);\r\n    }\r\n    //게임 설정 변경 데이터 수신\r\n    else if (payloadData.header.type === \"setting\") {\r\n      console.log(\"type: \", payloadData.header.type + \", body: \" + payloadData.body);\r\n      //방 제목 변경 추후\r\n      dispatch(setLimit(payloadData.data.capacity));\r\n      dispatch(setMaf(payloadData.data.mafia));\r\n      dispatch(setDoc(payloadData.data.doctor));\r\n      dispatch(setCop(payloadData.data.police));\r\n      dispatch(setMaf(payloadData.data.mafia));\r\n      dispatch(setTalkTime(payloadData.data.talkTime));\r\n      dispatch(setVoteTime(payloadData.data.voteTime));\r\n      dispatch(setNightTime(payloadData.data.nightTime));\r\n    }\r\n    //해당 되지 않는 타입 출력\r\n    else {\r\n      console.log(\"else: \", payloadData);\r\n    }\r\n  };\r\n\r\n  client2.onConnect = (frame) => {\r\n    console.log(\"run onConnect\");\r\n    //구독 및 연결 시 메세지 전송\r\n    console.log(\"onMessageReceived: \", onMessageReceived());\r\n    subGatherRoom = client2.subscribe(\"/sub/room/0\", onMessageReceived());\r\n    console.log(userJoin);\r\n    userJoin();\r\n    console.log(\"ended onConnect\");\r\n  };\r\n\r\n  //한번만 실행\r\n  useEffect(() => {\r\n    console.log(\"run client.activate\");\r\n    client2.activate();\r\n    console.log(\"exit client.activate\");\r\n\r\n    //랜더링 종료될 때 실행\r\n    return () => {\r\n      console.log(\"run client.deactivate\");\r\n      client2.deactivate();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={8}>\r\n          <Grid>\r\n            <Paper elevation={3}>\r\n              <MainBar />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid>\r\n            <Paper elevation={3}>\r\n              {IsGameStart ? (\r\n                <AllCam sockADR={sockADR} client2={client2} />\r\n              ) : (\r\n                <PlayMap\r\n                  // sockADR={sockADR}\r\n                  // client2={client2}\r\n                  setOnMessageReceived={setOnMessageReceived}\r\n                  // subGatherRoom={subGatherRoom}\r\n                  // setUserJoin={setUserJoin}\r\n                />\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Grid>\r\n            <Paper elevation={3} style={{ height: 50 }}>\r\n              <NaviBar\r\n                sockADR={sockADR}\r\n                IsGameStart={IsGameStart}\r\n                setIsGameStart={setIsGameStart}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid>\r\n            <Paper elevation={3}>\r\n              <SideBar client2={client2} />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GatherRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}