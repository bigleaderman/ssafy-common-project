{"ast":null,"code":"var _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\pages\\\\GatherRoomPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\"; //자체 컴포넌트\n\nimport MainBar from \"../components/GatherRoomPageCom/MainBar\";\nimport PlayMap from \"../components/GatherRoomPageCom/PlayMap\";\nimport SideBar from \"../components/GatherRoomPageCom/SideBar\";\nimport AllCam from \"../components/GameRoomPageCom/AllCam\";\nimport NaviBar2 from \"../components/GatherRoomPageCom/NaviBar2\";\nimport { selectUser } from \"../redux/slice/UserSlice\";\nimport { setClient } from \"../redux/slice/WsSlice\"; //mui 컴포넌트\n\nimport Grid from \"@mui/material/Grid\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\"; //socktjs\n\nimport SockJS from \"sockjs-client\";\nimport { setInterval } from \"stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar StompJs = require(\"@stomp/stompjs\");\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4\n};\n\nfunction useInterval(callback, delay) {\n  _s();\n\n  const savedCallback = useRef(); // Remember the latest callback.\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nconst GatherRoom = () => {\n  _s2();\n\n  console.log(\"GatherRoom 리랜더링 확인\");\n  const dispatch = useDispatch();\n  const childComponentRef = useRef();\n  const sideComponentRef = useRef();\n  const token = useSelector(state => state.user.accessToken);\n  const myNickName = useSelector(selectUser).nickname;\n  const roomNum = useSelector(state => state.roomNum);\n  const subAddr = `/sub/room/${roomNum}`;\n  const pubAddr = `/pub/room/${roomNum}`;\n  const pubGameAddr = `${pubAddr}/game`;\n  const [currentGameState, setCurrentGameState] = useState(\"게임 준비 중...\");\n  const [IsGameStart, setIsGameStart] = useState(false);\n  const [myRole, setMyRole] = useState(\"\");\n  const [stateTimer, setStateTimer] = useState(0);\n  const timer = useRef();\n  const client = useMemo(() => new StompJs.Client({\n    //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\n    // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\n    connectHeaders: {},\n    debug: function (str) {\n      console.log(str);\n    },\n    reconnectDelay: 5000,\n    heartbeatIncoming: 4000,\n    heartbeatOutgoing: 4000\n  }), []);\n\n  client.webSocketFactory = () => {\n    return new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\n  }; // const client = new StompJs.Client({\n  //   //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\n  //   // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\n  //   connectHeaders: {},\n  //   debug: function (str) {\n  //     console.log(str);\n  //   },\n  //   reconnectDelay: 5000,\n  //   heartbeatIncoming: 4000,\n  //   heartbeatOutgoing: 4000,\n  // });\n\n\n  const onMessageReceived = payload => {\n    let parsedData = JSON.parse(payload.body);\n    console.log(\"game Process data: \");\n    console.log(parsedData); //게임 시작 신호 수신\n\n    if (parsedData.type === \"session-created\") {\n      setCurrentGameState(\"세션 생성 완료\"); //게더맵 => 캠 화면 변경\n\n      setIsGameStart(true);\n    } //게임 시작 신호 수신\n    else if (parsedData.type === \"game-start\") {\n      setCurrentGameState(\"게임 시작\"); //main bar에 낮 시작 문구 작성\n    } //본인 역할 확인\n    else if (parsedData.type === \"role\") {\n      console.log(\"본인 역할 확인\");\n      console.log(parsedData);\n      setStateTimer(5);\n      setMyRole(parsedData.data.role); //5초 뒤 역할 확인 소켓 전홍\n\n      setTimeout(() => {\n        // clearInterval(intTimer1);\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"role\",\n            data: {\n              role: myRole\n            }\n          }),\n          skipContentLengthHeader: true\n        });\n      }, 5000);\n      setCurrentGameState(\"자신의 역할 확인 중\");\n    } //낮 시간 시작\n    else if (parsedData.type === \"talk-start\") {\n      setCurrentGameState(\"낮이 시작되었습니다.\");\n      setStateTimer(15); // timer.current = parsedData.data.time;\n      // let intTimer = setInterval(() => {\n      //   timer.current = timer.current - 1;\n      // }, 1000);\n\n      setTimeout(() => {\n        // clearInterval(intTimer);\n        //낮 시간 종료 신호 전송\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"talk-end\"\n          }),\n          skipContentLengthHeader: true\n        });\n      }, parsedData.data.time * 1000);\n    } //\n    else if (parsedData.type === \"vote-ready\") {\n      timer.current = parsedData.data.time;\n      let intTimer = setInterval(() => {\n        timer.current = timer.current - 1;\n      }, 1000);\n      setCurrentGameState(\"처형할 인물에 투표하십시오.\"); //투표 종료 신호 전송\n\n      setTimeout(() => {\n        clearInterval(intTimer);\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"vote-result\"\n          }),\n          skipContentLengthHeader: true\n        });\n      }, parsedData.data.time * 1000);\n    } //투표 종료, 투표 결과 공개\n    else if (parsedData.type === \"vote-result\") {\n      setCurrentGameState(\"투표가 종료되었습니다.\");\n      timer.current = 5;\n      console.log(\"vote-result: \" + parsedData.data);\n      setTimeout(() => {\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"vote-check\"\n          }),\n          skipContentLengthHeader: true\n        });\n      }, 5000);\n    } //밤 시작\n    else if (parsedData.type === \"night\") {\n      setCurrentGameState(\"밤이 시작되었습니다.\");\n      timer.current = parsedData.data.time;\n      let intTimer = setInterval(() => {\n        timer.current = timer.current - 1;\n      }, 1000);\n      setTimeout(() => {\n        clearTimeout(intTimer);\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"night-result\"\n          }),\n          skipContentLengthHeader: true\n        });\n      }, parsedData.data.time * 1000);\n      console.log(\"night: \", parsedData.data);\n    } //밤 투표 결과 데이터\n    else if (parsedData.type === \"night-result\") {\n      timer.current = 5;\n      let intTimer = setInterval(() => {\n        timer.current = timer.current - 1;\n      }, 1000);\n      setTimeout(() => {\n        clearTimeout(intTimer);\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"night-result\"\n          }),\n          skipContentLengthHeader: true\n        });\n      }, parsedData.data.time * 1000);\n      let isDead = false;\n\n      if (parsedData.data.dead.length !== 0) {\n        isDead = true;\n        setCurrentGameState(`날이 밝았습니다. ${parsedData.data.dead[0]}이 마피아에 의해 살해당했습니다.`);\n      } else {\n        setCurrentGameState(`날이 밝았습니다. 아무도 죽지 않았습니다.`);\n      }\n\n      console.log(parsedData.data);\n    } else if (parsedData.type === \"gameover\") {\n      setCurrentGameState(`${parsedData.data.winner} 승리!`);\n      console.log(\"gameover: \", parsedData.data); //게임 종료 후 복귀\n    }\n  }; //allcam 컴포에서 상호작용 시 실행될 코드\n\n\n  const inCamHandler = res => {\n    if (res.type === \"session-connect\") {\n      client.publish({\n        destination: pubGameAddr,\n        headers: {\n          token: token,\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type: \"session-connect\"\n        }),\n        skipContentLengthHeader: true\n      });\n    } //다른 사람에게 투표 시\n    else if (res.type === \"vote\") {\n      client.publish({\n        destination: pubGameAddr,\n        headers: {\n          token: token,\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type: \"vote\",\n          data: {\n            target: res.target\n          }\n        }),\n        skipContentLengthHeader: true\n      });\n    } else if (res.type === \"night-act\") {\n      client.publish({\n        destination: pubGameAddr,\n        headers: {\n          token: token,\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type: \"vote\",\n          data: {\n            role: res.role,\n            target: res.target\n          }\n        }),\n        skipContentLengthHeader: true\n      });\n    }\n  };\n\n  client.onConnect = frame => {\n    console.log(\"GRP, frame: \" + frame); // client.subscribe(subAddr, childComponentRef.current.onMessageReceived);\n\n    client.subscribe(subAddr, sideComponentRef.current.onMessageReceived);\n    client.subscribe(`${subAddr}/game`, onMessageReceived);\n    client.subscribe(`${subAddr}/game/${myNickName}`, onMessageReceived);\n  };\n\n  useEffect(() => {\n    //소켓 연결 코드는 한번만 랜더링\n    client.activate(); // dispatch(setClient(client));\n\n    let unloadEventLeave = window.addEventListener(\"unload\", () => {\n      client.publish({\n        destination: pubAddr,\n        headers: {\n          token: token,\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          header: {\n            type: \"leave\"\n          },\n          data: {\n            nickname: myNickName\n          }\n        }),\n        skipContentLengthHeader: true\n      });\n    });\n    return () => {\n      window.removeEventListener(\"unload\", unloadEventLeave);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      height: \"100vh\",\n      display: \"flex\",\n      alignItems: \"center\",\n      minWidth: \"1200px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          sx: {\n            marginTop: \"15px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setStateTimer(StateTimer => 15);\n                console.log(\"setStateTimer(10)\");\n                console.log(stateTimer);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MainBar, {\n              currentGameState: currentGameState,\n              myRole: myRole,\n              timer: timer,\n              stateTimer: stateTimer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          sx: {\n            marginTop: \"25px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: IsGameStart ? /*#__PURE__*/_jsxDEV(AllCam, {\n              inCamHandler: inCamHandler,\n              setCurrentGameState: setCurrentGameState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(PlayMap, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            style: {\n              height: 120\n            },\n            children: /*#__PURE__*/_jsxDEV(NaviBar2, {\n              ref: childComponentRef,\n              IsGameStart: IsGameStart,\n              setIsGameStart: setIsGameStart,\n              client: client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          sx: {\n            marginTop: \"25px\",\n            height: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: /*#__PURE__*/_jsxDEV(SideBar, {\n              ref: sideComponentRef,\n              client: client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(GatherRoom, \"QgB3WsEEUWviR/aTQvTttrzhxwE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = GatherRoom;\nexport default GatherRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"GatherRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","useSelector","useDispatch","MainBar","PlayMap","SideBar","AllCam","NaviBar2","selectUser","setClient","Grid","Container","Paper","Box","Button","Typography","Modal","SockJS","setInterval","StompJs","require","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","useInterval","callback","delay","savedCallback","current","tick","id","clearInterval","GatherRoom","console","log","dispatch","childComponentRef","sideComponentRef","token","state","user","accessToken","myNickName","nickname","roomNum","subAddr","pubAddr","pubGameAddr","currentGameState","setCurrentGameState","IsGameStart","setIsGameStart","myRole","setMyRole","stateTimer","setStateTimer","timer","client","Client","connectHeaders","debug","str","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","webSocketFactory","onMessageReceived","payload","parsedData","JSON","parse","body","type","data","role","setTimeout","publish","destination","headers","stringify","skipContentLengthHeader","time","intTimer","clearTimeout","isDead","dead","length","winner","inCamHandler","res","target","onConnect","frame","subscribe","activate","unloadEventLeave","window","addEventListener","header","removeEventListener","height","display","alignItems","minWidth","marginTop","StateTimer"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/pages/GatherRoomPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n//자체 컴포넌트\r\nimport MainBar from \"../components/GatherRoomPageCom/MainBar\";\r\nimport PlayMap from \"../components/GatherRoomPageCom/PlayMap\";\r\nimport SideBar from \"../components/GatherRoomPageCom/SideBar\";\r\nimport AllCam from \"../components/GameRoomPageCom/AllCam\";\r\nimport NaviBar2 from \"../components/GatherRoomPageCom/NaviBar2\";\r\nimport { selectUser } from \"../redux/slice/UserSlice\";\r\nimport { setClient } from \"../redux/slice/WsSlice\";\r\n\r\n//mui 컴포넌트\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\n//socktjs\r\nimport SockJS from \"sockjs-client\";\r\nimport { setInterval } from \"stompjs\";\r\n\r\nvar StompJs = require(\"@stomp/stompjs\");\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nconst GatherRoom = () => {\r\n  console.log(\"GatherRoom 리랜더링 확인\");\r\n  const dispatch = useDispatch();\r\n  const childComponentRef = useRef();\r\n  const sideComponentRef = useRef();\r\n  const token = useSelector((state) => state.user.accessToken);\r\n  const myNickName = useSelector(selectUser).nickname;\r\n  const roomNum = useSelector((state) => state.roomNum);\r\n  const subAddr = `/sub/room/${roomNum}`;\r\n  const pubAddr = `/pub/room/${roomNum}`;\r\n  const pubGameAddr = `${pubAddr}/game`;\r\n  const [currentGameState, setCurrentGameState] = useState(\"게임 준비 중...\");\r\n  const [IsGameStart, setIsGameStart] = useState(false);\r\n  const [myRole, setMyRole] = useState(\"\");\r\n  const [stateTimer, setStateTimer] = useState(0);\r\n  const timer = useRef();\r\n  const client = useMemo(\r\n    () =>\r\n      new StompJs.Client({\r\n        //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\r\n        // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\r\n        connectHeaders: {},\r\n        debug: function (str) {\r\n          console.log(str);\r\n        },\r\n        reconnectDelay: 5000,\r\n        heartbeatIncoming: 4000,\r\n        heartbeatOutgoing: 4000,\r\n      }),\r\n    []\r\n  );\r\n  client.webSocketFactory = () => {\r\n    return new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\r\n  };\r\n  // const client = new StompJs.Client({\r\n  //   //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\r\n  //   // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\r\n  //   connectHeaders: {},\r\n  //   debug: function (str) {\r\n  //     console.log(str);\r\n  //   },\r\n  //   reconnectDelay: 5000,\r\n  //   heartbeatIncoming: 4000,\r\n  //   heartbeatOutgoing: 4000,\r\n  // });\r\n\r\n  const onMessageReceived = (payload) => {\r\n    let parsedData = JSON.parse(payload.body);\r\n    console.log(\"game Process data: \");\r\n    console.log(parsedData);\r\n    //게임 시작 신호 수신\r\n    if (parsedData.type === \"session-created\") {\r\n      setCurrentGameState(\"세션 생성 완료\");\r\n      //게더맵 => 캠 화면 변경\r\n      setIsGameStart(true);\r\n    }\r\n    //게임 시작 신호 수신\r\n    else if (parsedData.type === \"game-start\") {\r\n      setCurrentGameState(\"게임 시작\");\r\n      //main bar에 낮 시작 문구 작성\r\n    }\r\n    //본인 역할 확인\r\n    else if (parsedData.type === \"role\") {\r\n      console.log(\"본인 역할 확인\");\r\n      console.log(parsedData);\r\n      setStateTimer(5);\r\n      setMyRole(parsedData.data.role);\r\n\r\n      //5초 뒤 역할 확인 소켓 전홍\r\n      setTimeout(() => {\r\n        // clearInterval(intTimer1);\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"role\",\r\n            data: {\r\n              role: myRole,\r\n            },\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, 5000);\r\n      setCurrentGameState(\"자신의 역할 확인 중\");\r\n    }\r\n    //낮 시간 시작\r\n    else if (parsedData.type === \"talk-start\") {\r\n      setCurrentGameState(\"낮이 시작되었습니다.\");\r\n      setStateTimer(15);\r\n      // timer.current = parsedData.data.time;\r\n      // let intTimer = setInterval(() => {\r\n      //   timer.current = timer.current - 1;\r\n      // }, 1000);\r\n      setTimeout(() => {\r\n        // clearInterval(intTimer);\r\n        //낮 시간 종료 신호 전송\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"talk-end\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, parsedData.data.time * 1000);\r\n    }\r\n    //\r\n    else if (parsedData.type === \"vote-ready\") {\r\n      timer.current = parsedData.data.time;\r\n      let intTimer = setInterval(() => {\r\n        timer.current = timer.current - 1;\r\n      }, 1000);\r\n      setCurrentGameState(\"처형할 인물에 투표하십시오.\");\r\n\r\n      //투표 종료 신호 전송\r\n      setTimeout(() => {\r\n        clearInterval(intTimer);\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"vote-result\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, parsedData.data.time * 1000);\r\n    }\r\n    //투표 종료, 투표 결과 공개\r\n    else if (parsedData.type === \"vote-result\") {\r\n      setCurrentGameState(\"투표가 종료되었습니다.\");\r\n      timer.current = 5;\r\n      console.log(\"vote-result: \" + parsedData.data);\r\n\r\n      setTimeout(() => {\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"vote-check\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, 5000);\r\n    }\r\n    //밤 시작\r\n    else if (parsedData.type === \"night\") {\r\n      setCurrentGameState(\"밤이 시작되었습니다.\");\r\n      timer.current = parsedData.data.time;\r\n      let intTimer = setInterval(() => {\r\n        timer.current = timer.current - 1;\r\n      }, 1000);\r\n      setTimeout(() => {\r\n        clearTimeout(intTimer);\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"night-result\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, parsedData.data.time * 1000);\r\n      console.log(\"night: \", parsedData.data);\r\n    }\r\n    //밤 투표 결과 데이터\r\n    else if (parsedData.type === \"night-result\") {\r\n      timer.current = 5;\r\n      let intTimer = setInterval(() => {\r\n        timer.current = timer.current - 1;\r\n      }, 1000);\r\n      setTimeout(() => {\r\n        clearTimeout(intTimer);\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"night-result\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, parsedData.data.time * 1000);\r\n      let isDead = false;\r\n      if (parsedData.data.dead.length !== 0) {\r\n        isDead = true;\r\n        setCurrentGameState(\r\n          `날이 밝았습니다. ${parsedData.data.dead[0]}이 마피아에 의해 살해당했습니다.`\r\n        );\r\n      } else {\r\n        setCurrentGameState(`날이 밝았습니다. 아무도 죽지 않았습니다.`);\r\n      }\r\n\r\n      console.log(parsedData.data);\r\n    } else if (parsedData.type === \"gameover\") {\r\n      setCurrentGameState(`${parsedData.data.winner} 승리!`);\r\n      console.log(\"gameover: \", parsedData.data);\r\n      //게임 종료 후 복귀\r\n    }\r\n  };\r\n\r\n  //allcam 컴포에서 상호작용 시 실행될 코드\r\n  const inCamHandler = (res) => {\r\n    if (res.type === \"session-connect\") {\r\n      client.publish({\r\n        destination: pubGameAddr,\r\n        headers: { token: token, \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          type: \"session-connect\",\r\n        }),\r\n        skipContentLengthHeader: true,\r\n      });\r\n    }\r\n    //다른 사람에게 투표 시\r\n    else if (res.type === \"vote\") {\r\n      client.publish({\r\n        destination: pubGameAddr,\r\n        headers: { token: token, \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          type: \"vote\",\r\n          data: {\r\n            target: res.target,\r\n          },\r\n        }),\r\n        skipContentLengthHeader: true,\r\n      });\r\n    } else if (res.type === \"night-act\") {\r\n      client.publish({\r\n        destination: pubGameAddr,\r\n        headers: { token: token, \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          type: \"vote\",\r\n          data: {\r\n            role: res.role,\r\n            target: res.target,\r\n          },\r\n        }),\r\n        skipContentLengthHeader: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  client.onConnect = (frame) => {\r\n    console.log(\"GRP, frame: \" + frame);\r\n    // client.subscribe(subAddr, childComponentRef.current.onMessageReceived);\r\n    client.subscribe(subAddr, sideComponentRef.current.onMessageReceived);\r\n    client.subscribe(`${subAddr}/game`, onMessageReceived);\r\n    client.subscribe(`${subAddr}/game/${myNickName}`, onMessageReceived);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //소켓 연결 코드는 한번만 랜더링\r\n    client.activate();\r\n    // dispatch(setClient(client));\r\n    let unloadEventLeave = window.addEventListener(\"unload\", () => {\r\n      client.publish({\r\n        destination: pubAddr,\r\n        headers: { token: token, \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          header: {\r\n            type: \"leave\",\r\n          },\r\n          data: {\r\n            nickname: myNickName,\r\n          },\r\n        }),\r\n        skipContentLengthHeader: true,\r\n      });\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"unload\", unloadEventLeave);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container sx={{ height: \"100vh\", display: \"flex\", alignItems: \"center\", minWidth: \"1200px\" }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={8}>\r\n          <Grid sx={{ marginTop: \"15px\" }}>\r\n            <Paper elevation={3}>\r\n              {/* 좌상 */}\r\n              <button\r\n                onClick={() => {\r\n                  setStateTimer((StateTimer) => 15);\r\n                  console.log(\"setStateTimer(10)\");\r\n                  console.log(stateTimer);\r\n                }}\r\n              ></button>\r\n              <MainBar\r\n                currentGameState={currentGameState}\r\n                myRole={myRole}\r\n                timer={timer}\r\n                stateTimer={stateTimer}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid sx={{ marginTop: \"25px\" }}>\r\n            {/* 좌하 */}\r\n            <Paper elevation={3}>\r\n              {IsGameStart ? (\r\n                <AllCam inCamHandler={inCamHandler} setCurrentGameState={setCurrentGameState} />\r\n              ) : (\r\n                <PlayMap />\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Grid>\r\n            <Paper elevation={3} style={{ height: 120 }}>\r\n              {/* 우상 */}\r\n              <NaviBar2\r\n                ref={childComponentRef}\r\n                IsGameStart={IsGameStart}\r\n                setIsGameStart={setIsGameStart}\r\n                client={client}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid sx={{ marginTop: \"25px\", height: \"100%\" }}>\r\n            {/* 우하 */}\r\n            <Paper elevation={3}>\r\n              <SideBar ref={sideComponentRef} client={client} />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GatherRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}