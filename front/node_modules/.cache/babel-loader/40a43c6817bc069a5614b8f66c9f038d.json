{"ast":null,"code":"var _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\components\\\\Friends.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Table, TableContainer, TableBody, Paper, TableRow, TableCell, Button } from \"@mui/material\";\nimport { friendList } from \"../redux/slice/FriendListSlice\";\nimport SockJS from \"sockjs-client\";\nimport { over } from \"stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\n\nfunction Friends() {\n  _s();\n\n  const dispatch = useDispatch();\n  const me = useSelector(state => state.user);\n  let headers = {\n    token: `${me.accessToken}`\n  };\n  const friendLists = useSelector(state => state.friendList); // 친구 관련\n\n  const [friend, setFriend] = useState(friendLists); // 친구 목록\n\n  useEffect(() => {\n    connect();\n  }, []); // 소켓 연결\n\n  const connect = () => {\n    let Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  }; // 구독 연결\n\n\n  const onConnected = () => {\n    stompClient.subscribe(`/sub/friend/${me.nickname}`, Received);\n  };\n\n  const onError = err => {\n    console.log(\"친구 소켓 연결 실패\", err);\n  }; // 소켓으로부터 받기\n\n\n  const Received = payload => {\n    var payloadData = JSON.parse(payload.body);\n\n    if (payloadData.header.type === \"list\") {\n      // 친구목록\n      setFriend(payloadData.friendResponseDataDto.users);\n      dispatch(friendList(payloadData.friendResponseDataDto.users));\n    }\n  }; // 서버로 전송하기 (친구 수락, 친구 거절, 친구 삭제)\n\n\n  const SendF = (f, type) => {\n    if (stompClient.ws.readyState === 1) {\n      // 연결이 되었을 때 전송해야함\n      var sendData = {\n        header: {\n          type\n        },\n        data: {\n          friendSeq: f.friendSeq,\n          from: me.nickname,\n          to: f.nickname\n        }\n      };\n      return stompClient.send(`/pub/friend/${f.nickname}`, headers, JSON.stringify(sendData));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      style: {\n        padding: \"20px\",\n        height: '300px'\n      },\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"medium\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: friend && friend.map((f, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [f.nickname, /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  width: '30px'\n                },\n                variant: \"outlined\",\n                onClick: () => {\n                  SendF(f, \"delete\");\n                },\n                children: \"DEL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Friends, \"8HEFSiDsGUYW2TzKlXyht02ybpo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Friends;\nexport default Friends;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","Table","TableContainer","TableBody","Paper","TableRow","TableCell","Button","friendList","SockJS","over","stompClient","Friends","dispatch","me","state","user","headers","token","accessToken","friendLists","friend","setFriend","connect","Sock","onConnected","onError","subscribe","nickname","Received","err","console","log","payload","payloadData","JSON","parse","body","header","type","friendResponseDataDto","users","SendF","f","ws","readyState","sendData","data","friendSeq","from","to","send","stringify","padding","height","map","index","width"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/Friends.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  TableBody,\r\n  Paper,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { friendList } from \"../redux/slice/FriendListSlice\";\r\n\r\nimport SockJS from \"sockjs-client\";\r\nimport { over } from \"stompjs\";\r\n\r\nvar stompClient = null;\r\nfunction Friends() {\r\n  const dispatch = useDispatch();\r\n  const me = useSelector((state) => state.user);\r\n  let headers = {\r\n    token:`${me.accessToken}`\r\n  };\r\n  const friendLists = useSelector((state) => state.friendList);\r\n  // 친구 관련\r\n  const [friend, setFriend] = useState(friendLists); // 친구 목록\r\n  useEffect(() => {\r\n    connect();\r\n  }, []);\r\n  // 소켓 연결\r\n  const connect = () => {\r\n    let Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected, onError);\r\n  };\r\n  // 구독 연결\r\n  const onConnected = () => {\r\n    stompClient.subscribe(`/sub/friend/${me.nickname}`, Received);\r\n  };\r\n  const onError = (err) => {\r\n    console.log(\"친구 소켓 연결 실패\", err);\r\n  };\r\n\r\n  // 소켓으로부터 받기\r\n  const Received = (payload) => {\r\n    var payloadData = JSON.parse(payload.body);\r\n    if (payloadData.header.type === \"list\") {\r\n      // 친구목록\r\n      setFriend(payloadData.friendResponseDataDto.users);\r\n      dispatch(friendList(payloadData.friendResponseDataDto.users));\r\n    }\r\n  };\r\n\r\n  // 서버로 전송하기 (친구 수락, 친구 거절, 친구 삭제)\r\n  const SendF = (f, type) => {\r\n    if (stompClient.ws.readyState === 1) {\r\n      // 연결이 되었을 때 전송해야함\r\n      var sendData = {\r\n        header: {\r\n          type,\r\n        },\r\n        data: {\r\n          friendSeq: f.friendSeq,\r\n          from: me.nickname,\r\n          to: f.nickname,\r\n        },\r\n      };\r\n      return stompClient.send(`/pub/friend/${f.nickname}`, headers, JSON.stringify(sendData));\r\n    }\r\n  };\r\n  return (\r\n    <span>\r\n      <TableContainer style={{ padding: \"20px\", height:'300px' }} component={Paper}>\r\n        <Table size='medium'>\r\n          <TableBody>\r\n            {friend &&\r\n              friend.map((f, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    {f.nickname}\r\n                    <Button sx={{width:'30px'}} variant=\"outlined\"\r\n                      onClick={() => {\r\n                        SendF(f, \"delete\");\r\n                      }}\r\n                    >\r\n                      DEL\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </span>\r\n  );\r\n}\r\nexport default Friends;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,KADF,EAEEC,cAFF,EAGEC,SAHF,EAIEC,KAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,MAPF,QAQO,eARP;AASA,SAASC,UAAT,QAA2B,gCAA3B;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,IAAT,QAAqB,SAArB;;AAEA,IAAIC,WAAW,GAAG,IAAlB;;AACA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EACA,MAAMc,EAAE,GAAGf,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAtB;EACA,IAAIC,OAAO,GAAG;IACZC,KAAK,EAAE,GAAEJ,EAAE,CAACK,WAAY;EADZ,CAAd;EAGA,MAAMC,WAAW,GAAGrB,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACP,UAAlB,CAA/B,CANiB,CAOjB;;EACA,MAAM,CAACa,MAAD,EAASC,SAAT,IAAsBxB,QAAQ,CAACsB,WAAD,CAApC,CARiB,CAQkC;;EACnDvB,SAAS,CAAC,MAAM;IACd0B,OAAO;EACR,CAFQ,EAEN,EAFM,CAAT,CATiB,CAYjB;;EACA,MAAMA,OAAO,GAAG,MAAM;IACpB,IAAIC,IAAI,GAAG,IAAIf,MAAJ,CAAW,mCAAX,CAAX;IACAE,WAAW,GAAGD,IAAI,CAACc,IAAD,CAAlB;IACAb,WAAW,CAACY,OAAZ,CAAoB,EAApB,EAAwBE,WAAxB,EAAqCC,OAArC;EACD,CAJD,CAbiB,CAkBjB;;;EACA,MAAMD,WAAW,GAAG,MAAM;IACxBd,WAAW,CAACgB,SAAZ,CAAuB,eAAcb,EAAE,CAACc,QAAS,EAAjD,EAAoDC,QAApD;EACD,CAFD;;EAGA,MAAMH,OAAO,GAAII,GAAD,IAAS;IACvBC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;EACD,CAFD,CAtBiB,CA0BjB;;;EACA,MAAMD,QAAQ,GAAII,OAAD,IAAa;IAC5B,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,IAAnB,CAAlB;;IACA,IAAIH,WAAW,CAACI,MAAZ,CAAmBC,IAAnB,KAA4B,MAAhC,EAAwC;MACtC;MACAjB,SAAS,CAACY,WAAW,CAACM,qBAAZ,CAAkCC,KAAnC,CAAT;MACA5B,QAAQ,CAACL,UAAU,CAAC0B,WAAW,CAACM,qBAAZ,CAAkCC,KAAnC,CAAX,CAAR;IACD;EACF,CAPD,CA3BiB,CAoCjB;;;EACA,MAAMC,KAAK,GAAG,CAACC,CAAD,EAAIJ,IAAJ,KAAa;IACzB,IAAI5B,WAAW,CAACiC,EAAZ,CAAeC,UAAf,KAA8B,CAAlC,EAAqC;MACnC;MACA,IAAIC,QAAQ,GAAG;QACbR,MAAM,EAAE;UACNC;QADM,CADK;QAIbQ,IAAI,EAAE;UACJC,SAAS,EAAEL,CAAC,CAACK,SADT;UAEJC,IAAI,EAAEnC,EAAE,CAACc,QAFL;UAGJsB,EAAE,EAAEP,CAAC,CAACf;QAHF;MAJO,CAAf;MAUA,OAAOjB,WAAW,CAACwC,IAAZ,CAAkB,eAAcR,CAAC,CAACf,QAAS,EAA3C,EAA8CX,OAA9C,EAAuDkB,IAAI,CAACiB,SAAL,CAAeN,QAAf,CAAvD,CAAP;IACD;EACF,CAfD;;EAgBA,oBACE;IAAA,uBACE,QAAC,cAAD;MAAgB,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAX;QAAmBC,MAAM,EAAC;MAA1B,CAAvB;MAA4D,SAAS,EAAElD,KAAvE;MAAA,uBACE,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAA,uBACE,QAAC,SAAD;UAAA,UACGiB,MAAM,IACLA,MAAM,CAACkC,GAAP,CAAW,CAACZ,CAAD,EAAIa,KAAJ,kBACT,QAAC,QAAD;YAAA,uBACE,QAAC,SAAD;cAAA,WACGb,CAAC,CAACf,QADL,eAEE,QAAC,MAAD;gBAAQ,EAAE,EAAE;kBAAC6B,KAAK,EAAC;gBAAP,CAAZ;gBAA4B,OAAO,EAAC,UAApC;gBACE,OAAO,EAAE,MAAM;kBACbf,KAAK,CAACC,CAAD,EAAI,QAAJ,CAAL;gBACD,CAHH;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF,GAAea,KAAf;YAAA;YAAA;YAAA;UAAA,QADF;QAFJ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GA9EQ5C,O;UACUZ,W,EACND,W,EAISA,W;;;KANba,O;AA+ET,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}