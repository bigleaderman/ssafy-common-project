{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebRtcStats = void 0;\n\nvar OpenViduLogger_1 = require(\"../Logger/OpenViduLogger\");\n\nvar Platform_1 = require(\"../Utils/Platform\");\n/**\n * @hidden\n */\n\n\nvar logger = OpenViduLogger_1.OpenViduLogger.getInstance();\n/**\n * @hidden\n */\n\nvar platform;\n;\n\nvar WebRtcStats =\n/** @class */\nfunction () {\n  function WebRtcStats(stream) {\n    this.stream = stream;\n    this.STATS_ITEM_NAME = 'webrtc-stats-config';\n    this.webRtcStatsEnabled = false;\n    this.statsInterval = 1;\n    platform = Platform_1.PlatformUtils.getInstance();\n  }\n\n  WebRtcStats.prototype.isEnabled = function () {\n    return this.webRtcStatsEnabled;\n  };\n\n  WebRtcStats.prototype.initWebRtcStats = function () {\n    var _this = this;\n\n    var webrtcObj = localStorage.getItem(this.STATS_ITEM_NAME);\n\n    if (!!webrtcObj) {\n      this.webRtcStatsEnabled = true;\n      var webrtcStatsConfig = JSON.parse(webrtcObj); // webrtc object found in local storage\n\n      logger.warn('WebRtc stats enabled for stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId);\n      logger.warn('localStorage item: ' + JSON.stringify(webrtcStatsConfig));\n      this.POST_URL = webrtcStatsConfig.httpEndpoint;\n      this.statsInterval = webrtcStatsConfig.interval; // Interval in seconds\n\n      this.webRtcStatsIntervalId = setInterval(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , this.sendStatsToHttpEndpoint()];\n\n              case 1:\n                _a.sent();\n\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }, this.statsInterval * 1000);\n    } else {\n      logger.debug('WebRtc stats not enabled');\n    }\n  }; // {\n  // \"localCandidate\": {\n  //     \"id\": \"RTCIceCandidate_/r4P1y2Q\",\n  //     \"timestamp\": 1616080155617,\n  //     \"type\": \"local-candidate\",\n  //     \"transportId\": \"RTCTransport_0_1\",\n  //     \"isRemote\": false,\n  //     \"networkType\": \"wifi\",\n  //     \"ip\": \"123.45.67.89\",\n  //     \"port\": 63340,\n  //     \"protocol\": \"udp\",\n  //     \"candidateType\": \"srflx\",\n  //     \"priority\": 1686052607,\n  //     \"deleted\": false,\n  //     \"raw\": [\n  //     \"candidate:3345412921 1 udp 1686052607 123.45.67.89 63340 typ srflx raddr 192.168.1.31 rport 63340 generation 0 ufrag 0ZtT network-id 1 network-cost 10\",\n  //     \"candidate:58094482 1 udp 41885695 98.76.54.32 44431 typ relay raddr 123.45.67.89 rport 63340 generation 0 ufrag 0ZtT network-id 1 network-cost 10\"\n  //     ]\n  // },\n  // \"remoteCandidate\": {\n  //     \"id\": \"RTCIceCandidate_1YO18gph\",\n  //     \"timestamp\": 1616080155617,\n  //     \"type\": \"remote-candidate\",\n  //     \"transportId\": \"RTCTransport_0_1\",\n  //     \"isRemote\": true,\n  //     \"ip\": \"12.34.56.78\",\n  //     \"port\": 64989,\n  //     \"protocol\": \"udp\",\n  //     \"candidateType\": \"srflx\",\n  //     \"priority\": 1679819263,\n  //     \"deleted\": false,\n  //     \"raw\": [\n  //     \"candidate:16 1 UDP 1679819263 12.34.56.78 64989 typ srflx raddr 172.19.0.1 rport 64989\",\n  //     \"candidate:16 1 UDP 1679819263 12.34.56.78 64989 typ srflx raddr 172.19.0.1 rport 64989\"\n  //     ]\n  // }\n  // }\n  // Have been tested in:\n  //   - Linux Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 74.0.3911.218\n  //       - Firefox 86\n  //       - Microsoft Edge 91.0.825.0\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - Windows Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 74.0.3911.232\n  //       - Firefox 86.0.1\n  //       - Microsoft Edge 89.0.774.54\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - MacOS Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Firefox 87.0\n  //       - Opera 75.0.3969.93\n  //       - Microsoft Edge 89.0.774.57\n  //       - Safari 14.0 (14610.1.28.1.9)\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - Android:\n  //       - Chrome Mobile 89.0.4389.90\n  //       - Opera 62.3.3146.57763\n  //       - Firefox Mobile 86.6.1\n  //       - Microsoft Edge Mobile 46.02.4.5147\n  //       - Ionic 5\n  //       - React Native 0.64\n  //   - iOS:\n  //       - Safari Mobile\n  //       - ¿Ionic?\n  //       - ¿React Native?\n\n\n  WebRtcStats.prototype.getSelectedIceCandidateInfo = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var statsReport, transportStat, candidatePairs, localCandidates, remoteCandidates, selectedCandidatePair, selectedCandidatePairId, length_1, iterator, i, candidatePair, localCandidateId, remoteCandidateId, finalLocalCandidate, candList, cand, _i, cand_1, c, finalRemoteCandidate, candList, cand, _a, cand_2, c;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.stream.getRTCPeerConnection().getStats()];\n\n            case 1:\n              statsReport = _b.sent();\n              candidatePairs = new Map();\n              localCandidates = new Map();\n              remoteCandidates = new Map();\n              statsReport.forEach(function (stat) {\n                if (stat.type === 'transport' && (platform.isChromium() || platform.isSafariBrowser() || platform.isReactNative())) {\n                  transportStat = stat;\n                }\n\n                switch (stat.type) {\n                  case 'candidate-pair':\n                    candidatePairs.set(stat.id, stat);\n                    break;\n\n                  case 'local-candidate':\n                    localCandidates.set(stat.id, stat);\n                    break;\n\n                  case 'remote-candidate':\n                    remoteCandidates.set(stat.id, stat);\n                    break;\n                }\n              });\n\n              if (transportStat != null) {\n                selectedCandidatePairId = transportStat.selectedCandidatePairId;\n                selectedCandidatePair = candidatePairs.get(selectedCandidatePairId);\n              } else {\n                length_1 = candidatePairs.size;\n                iterator = candidatePairs.values();\n\n                for (i = 0; i < length_1; i++) {\n                  candidatePair = iterator.next().value;\n\n                  if (candidatePair['selected']) {\n                    selectedCandidatePair = candidatePair;\n                    break;\n                  }\n                }\n              }\n\n              localCandidateId = selectedCandidatePair.localCandidateId;\n              remoteCandidateId = selectedCandidatePair.remoteCandidateId;\n              finalLocalCandidate = localCandidates.get(localCandidateId);\n\n              if (!!finalLocalCandidate) {\n                candList = this.stream.getLocalIceCandidateList();\n                cand = candList.filter(function (c) {\n                  return !!c.candidate && (c.candidate.indexOf(finalLocalCandidate.ip) >= 0 || c.candidate.indexOf(finalLocalCandidate.address) >= 0) && c.candidate.indexOf(finalLocalCandidate.port) >= 0;\n                });\n                finalLocalCandidate.raw = [];\n\n                for (_i = 0, cand_1 = cand; _i < cand_1.length; _i++) {\n                  c = cand_1[_i];\n                  finalLocalCandidate.raw.push(c.candidate);\n                }\n              } else {\n                finalLocalCandidate = 'ERROR: No active local ICE candidate. Probably ICE-TCP is being used';\n              }\n\n              finalRemoteCandidate = remoteCandidates.get(remoteCandidateId);\n\n              if (!!finalRemoteCandidate) {\n                candList = this.stream.getRemoteIceCandidateList();\n                cand = candList.filter(function (c) {\n                  return !!c.candidate && (c.candidate.indexOf(finalRemoteCandidate.ip) >= 0 || c.candidate.indexOf(finalRemoteCandidate.address) >= 0) && c.candidate.indexOf(finalRemoteCandidate.port) >= 0;\n                });\n                finalRemoteCandidate.raw = [];\n\n                for (_a = 0, cand_2 = cand; _a < cand_2.length; _a++) {\n                  c = cand_2[_a];\n                  finalRemoteCandidate.raw.push(c.candidate);\n                }\n              } else {\n                finalRemoteCandidate = 'ERROR: No active remote ICE candidate. Probably ICE-TCP is being used';\n              }\n\n              return [2\n              /*return*/\n              , resolve({\n                localCandidate: finalLocalCandidate,\n                remoteCandidate: finalRemoteCandidate\n              })];\n          }\n        });\n      });\n    });\n  };\n\n  WebRtcStats.prototype.stopWebRtcStats = function () {\n    if (this.webRtcStatsEnabled) {\n      clearInterval(this.webRtcStatsIntervalId);\n      logger.warn('WebRtc stats stopped for disposed stream ' + this.stream.streamId + ' of connection ' + this.stream.connection.connectionId);\n    }\n  };\n\n  WebRtcStats.prototype.sendStats = function (url, response) {\n    return __awaiter(this, void 0, void 0, function () {\n      var configuration, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            configuration = {\n              headers: {\n                'Content-type': 'application/json'\n              },\n              body: JSON.stringify(response),\n              method: 'POST'\n            };\n            return [4\n            /*yield*/\n            , fetch(url, configuration)];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_1 = _a.sent();\n            logger.error(\"sendStats error: \".concat(JSON.stringify(error_1)));\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  WebRtcStats.prototype.sendStatsToHttpEndpoint = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var webrtcStats, response, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.getCommonStats()];\n\n          case 1:\n            webrtcStats = _a.sent();\n            response = this.generateJSONStatsResponse(webrtcStats);\n            return [4\n            /*yield*/\n            , this.sendStats(this.POST_URL, response)];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_2 = _a.sent();\n            logger.log(error_2);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // Have been tested in:\n  //   - Linux Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 74.0.3911.218\n  //       - Firefox 86\n  //       - Microsoft Edge 91.0.825.0\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - Windows Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 74.0.3911.232\n  //       - Firefox 86.0.1\n  //       - Microsoft Edge 89.0.774.54\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - MacOS Desktop:\n  //       - Chrome 89.0.4389.90\n  //       - Opera 75.0.3969.93\n  //       - Firefox 87.0\n  //       - Microsoft Edge 89.0.774.57\n  //       - Safari 14.0 (14610.1.28.1.9)\n  //       - Electron 11.3.0 (Chromium 87.0.4280.141)\n  //   - Android:\n  //       - Chrome Mobile 89.0.4389.90\n  //       - Opera 62.3.3146.57763\n  //       - Firefox Mobile 86.6.1\n  //       - Microsoft Edge Mobile 46.02.4.5147\n  //       - Ionic 5\n  //       - React Native 0.64\n  //   - iOS:\n  //       - Safari Mobile\n  //       - ¿Ionic?\n  //       - ¿React Native?\n\n\n  WebRtcStats.prototype.getCommonStats = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var statsReport, response_1, videoTrackStats_1, candidatePairStats_1, error_3;\n\n            var _this = this;\n\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  _a.trys.push([0, 2,, 3]);\n\n                  return [4\n                  /*yield*/\n                  , this.stream.getRTCPeerConnection().getStats()];\n\n                case 1:\n                  statsReport = _a.sent();\n                  response_1 = this.getWebRtcStatsResponseOutline();\n                  videoTrackStats_1 = ['framesReceived', 'framesDropped', 'framesSent', 'frameHeight', 'frameWidth'];\n                  candidatePairStats_1 = ['availableOutgoingBitrate', 'currentRoundTripTime'];\n                  statsReport.forEach(function (stat) {\n                    var mediaType = stat.mediaType != null ? stat.mediaType : stat.kind;\n\n                    var addStat = function addStat(direction, key) {\n                      if (stat[key] != null && response_1[direction] != null) {\n                        if (!mediaType && videoTrackStats_1.indexOf(key) > -1) {\n                          mediaType = 'video';\n                        }\n\n                        if (direction != null && mediaType != null && key != null && response_1[direction][mediaType] != null) {\n                          response_1[direction][mediaType][key] = Number(stat[key]);\n                        } else if (direction != null && key != null && candidatePairStats_1.includes(key)) {\n                          // candidate-pair-stats\n                          response_1[direction][key] = Number(stat[key]);\n                        }\n                      }\n                    };\n\n                    switch (stat.type) {\n                      case \"outbound-rtp\":\n                        addStat('outbound', 'bytesSent');\n                        addStat('outbound', 'packetsSent');\n                        addStat('outbound', 'framesEncoded');\n                        addStat('outbound', 'nackCount');\n                        addStat('outbound', 'firCount');\n                        addStat('outbound', 'pliCount');\n                        addStat('outbound', 'qpSum');\n                        break;\n\n                      case \"inbound-rtp\":\n                        addStat('inbound', 'bytesReceived');\n                        addStat('inbound', 'packetsReceived');\n                        addStat('inbound', 'packetsLost');\n                        addStat('inbound', 'jitter');\n                        addStat('inbound', 'framesDecoded');\n                        addStat('inbound', 'nackCount');\n                        addStat('inbound', 'firCount');\n                        addStat('inbound', 'pliCount');\n                        break;\n\n                      case 'track':\n                        addStat('inbound', 'jitterBufferDelay');\n                        addStat('inbound', 'framesReceived');\n                        addStat('outbound', 'framesDropped');\n                        addStat('outbound', 'framesSent');\n                        addStat(_this.stream.isLocal() ? 'outbound' : 'inbound', 'frameHeight');\n                        addStat(_this.stream.isLocal() ? 'outbound' : 'inbound', 'frameWidth');\n                        break;\n\n                      case 'candidate-pair':\n                        addStat('candidatepair', 'currentRoundTripTime');\n                        addStat('candidatepair', 'availableOutgoingBitrate');\n                        break;\n                    }\n                  }); // Delete candidatepair from response if null\n\n                  if (!(response_1 === null || response_1 === void 0 ? void 0 : response_1.candidatepair) || Object.keys(response_1.candidatepair).length === 0) {\n                    delete response_1.candidatepair;\n                  }\n\n                  return [2\n                  /*return*/\n                  , resolve(response_1)];\n\n                case 2:\n                  error_3 = _a.sent();\n                  logger.error('Error getting common stats: ', error_3);\n                  return [2\n                  /*return*/\n                  , reject(error_3)];\n\n                case 3:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        })];\n      });\n    });\n  };\n\n  WebRtcStats.prototype.generateJSONStatsResponse = function (stats) {\n    return {\n      '@timestamp': new Date().toISOString(),\n      participant_id: this.stream.connection.data,\n      session_id: this.stream.session.sessionId,\n      platform: platform.getName(),\n      platform_description: platform.getDescription(),\n      stream: 'webRTC',\n      webrtc_stats: stats\n    };\n  };\n\n  WebRtcStats.prototype.getWebRtcStatsResponseOutline = function () {\n    if (this.stream.isLocal()) {\n      return {\n        outbound: {\n          audio: {},\n          video: {}\n        },\n        candidatepair: {}\n      };\n    } else {\n      return {\n        inbound: {\n          audio: {},\n          video: {}\n        }\n      };\n    }\n  };\n\n  return WebRtcStats;\n}();\n\nexports.WebRtcStats = WebRtcStats;","map":null,"metadata":{},"sourceType":"script"}