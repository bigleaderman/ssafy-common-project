{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SessionDisconnectedEvent = void 0;\n\nvar Event_1 = require(\"./Event\");\n\nvar OpenViduLogger_1 = require(\"../Logger/OpenViduLogger\");\n/**\n * @hidden\n */\n\n\nvar logger = OpenViduLogger_1.OpenViduLogger.getInstance();\n/**\n * Triggered by [[sessionDisconnected]]\n */\n\nvar SessionDisconnectedEvent =\n/** @class */\nfunction (_super) {\n  __extends(SessionDisconnectedEvent, _super);\n  /**\n   * @hidden\n   */\n\n\n  function SessionDisconnectedEvent(target, reason) {\n    var _this = _super.call(this, true, target, 'sessionDisconnected') || this;\n\n    _this.reason = reason;\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  SessionDisconnectedEvent.prototype.callDefaultBehavior = function () {\n    logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Session'\");\n    var session = this.target; // Dispose and delete all remote Connections\n\n    session.remoteConnections.forEach(function (remoteConnection) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n\n      var connectionId = remoteConnection.connectionId;\n\n      if (!!((_a = session.remoteConnections.get(connectionId)) === null || _a === void 0 ? void 0 : _a.stream)) {\n        (_b = session.remoteConnections.get(connectionId)) === null || _b === void 0 ? void 0 : _b.stream.disposeWebRtcPeer();\n        (_c = session.remoteConnections.get(connectionId)) === null || _c === void 0 ? void 0 : _c.stream.disposeMediaStream();\n\n        if ((_d = session.remoteConnections.get(connectionId)) === null || _d === void 0 ? void 0 : _d.stream.streamManager) {\n          (_e = session.remoteConnections.get(connectionId)) === null || _e === void 0 ? void 0 : _e.stream.streamManager.removeAllVideos();\n        }\n\n        var streamId = (_g = (_f = session.remoteConnections.get(connectionId)) === null || _f === void 0 ? void 0 : _f.stream) === null || _g === void 0 ? void 0 : _g.streamId;\n\n        if (!!streamId) {\n          session.remoteStreamsCreated.delete(streamId);\n        }\n\n        (_h = session.remoteConnections.get(connectionId)) === null || _h === void 0 ? void 0 : _h.dispose();\n      }\n\n      session.remoteConnections.delete(connectionId);\n    });\n  };\n\n  return SessionDisconnectedEvent;\n}(Event_1.Event);\n\nexports.SessionDisconnectedEvent = SessionDisconnectedEvent;","map":null,"metadata":{},"sourceType":"script"}