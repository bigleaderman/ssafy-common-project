{"ast":null,"code":"var _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\components\\\\RoomListPageCom\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { Table, TableContainer, TableBody, Paper, TableRow, TableCell, Button, Container } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat(_ref) {\n  _s();\n\n  let {\n    Chats,\n    Send\n  } = _ref;\n  // 채팅 스크롤 아래로 고정\n  const scrollRef = useRef();\n  useEffect(() => {\n    scrollRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: 'end'\n    });\n  }, [Chats]);\n  const username = useSelector(state => state.user.nickname); // 보내는 채팅\n\n  const [userChat, setUserChat] = useState({\n    header: {\n      type: \"chat\"\n    },\n    data: {\n      nickname: username,\n      message: \"\"\n    }\n  }); // 채팅 적기\n\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserChat({ ...userChat,\n      data: {\n        nickname: username,\n        message: value\n      }\n    });\n  }; // 채팅 전송\n\n\n  const sendValue = () => {\n    if (userChat.data.message) {\n      Send(userChat);\n    }\n\n    setUserChat({ ...userChat,\n      data: {\n        nickname: username,\n        message: \"\"\n      }\n    });\n  }; // 엔터 키 입력\n\n\n  const handleOnKeyPress = e => {\n    if (e.key === \"Enter\" && userChat.data.message) {\n      sendValue(userChat); // Enter 입력이 되면 클릭 이벤트 실행\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"medium\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          ref: scrollRef,\n          children: Chats && Chats.map((chat, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [chat.data.nickname, \" : \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: chat.data.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\" // style={{ height: 20, width: \"100%\" }}\n      ,\n      value: userChat.data.message,\n      onChange: handleMessage,\n      onKeyPress: handleOnKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      sx: {\n        ml: 1,\n        height: 25\n      },\n      onClick: sendValue,\n      children: \"send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"myBvuJCY9+bPtTdbMpvHtrGf0pc=\", false, function () {\n  return [useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","useSelector","Table","TableContainer","TableBody","Paper","TableRow","TableCell","Button","Container","Chat","Chats","Send","scrollRef","current","scrollIntoView","behavior","block","username","state","user","nickname","userChat","setUserChat","header","type","data","message","handleMessage","event","value","target","sendValue","handleOnKeyPress","e","key","width","map","chat","index","ml","height"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/RoomListPageCom/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  TableBody,\r\n  Paper,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  Container,\r\n} from \"@mui/material\";\r\n\r\nfunction Chat({ Chats, Send }) {\r\n  // 채팅 스크롤 아래로 고정\r\n  const scrollRef = useRef();\r\n  useEffect(() => {\r\n    scrollRef.current.scrollIntoView({ behavior: \"smooth\",block: 'end' });\r\n  }, [Chats]);\r\n\r\n  const username = useSelector(state => state.user.nickname);\r\n  // 보내는 채팅\r\n  const [userChat, setUserChat] = useState({\r\n    header: {\r\n      type: \"chat\",\r\n    },\r\n    data: {\r\n      nickname: username,\r\n      message: \"\",\r\n    },\r\n  });\r\n  // 채팅 적기\r\n  const handleMessage = event => {\r\n    const { value } = event.target;\r\n    setUserChat({\r\n      ...userChat,\r\n      data: {\r\n        nickname: username,\r\n        message: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  // 채팅 전송\r\n  const sendValue = () => {\r\n    if (userChat.data.message) {\r\n      Send(userChat);\r\n    }\r\n    setUserChat({\r\n      ...userChat,\r\n      data: {\r\n        nickname: username,\r\n        message: \"\",\r\n      },\r\n    });\r\n  };\r\n  // 엔터 키 입력\r\n  const handleOnKeyPress = e => {\r\n    if (e.key === \"Enter\" && userChat.data.message) {\r\n      sendValue(userChat); // Enter 입력이 되면 클릭 이벤트 실행\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container sx={{width:'100%'}}>\r\n      <TableContainer component={Paper}>\r\n        <Table size='medium'>\r\n          <TableBody ref={scrollRef}>\r\n            {Chats &&\r\n              Chats.map((chat, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{chat.data.nickname} : </TableCell>\r\n                  <TableCell>{chat.data.message}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <input\r\n        type='text'\r\n        // style={{ height: 20, width: \"100%\" }}\r\n        value={userChat.data.message}\r\n        onChange={handleMessage}\r\n        onKeyPress={handleOnKeyPress}\r\n      />\r\n      <Button variant='outlined' sx={{ ml: 1, height: 25 }} onClick={sendValue}>\r\n        send\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}