{"ast":null,"code":"import _slicedToArray from \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\components\\\\GatherRoomPageCom\\\\PlayMap.js\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SavePosX, selectPosX } from \"../../redux/slice/GatherMapPosXSlice\";\nimport { SavePosY, selectPosY } from \"../../redux/slice/GatherMapPosYSlice\";\nimport { useBeforeunload } from \"react-beforeunload\";\nimport { chainPropTypes } from \"@mui/utils\";\nexport default function PlayMap(props) {\n  var dispatch = useDispatch();\n  var mapSize = 700;\n  var charSize = 50;\n  var tableData = {\n    tbLeft: 200,\n    tbTop: 100 - charSize,\n    width: 300,\n    height: 100\n  }; //맵 크기\n  //포커싱 지정을 위한 변수\n\n  var mapFocus = useRef(); //div태그를 아바타 객체로 지정\n\n  var myChar;\n  var keyPress = {},\n      pX = useRef(useSelector(selectPosX)),\n      pY = useRef(useSelector(selectPosY)),\n      speed = 5; //렌더링될 때마다 myChar가 #myCharacter 를 가르킴\n\n  useEffect(function () {\n    myChar = document.getElementById(\"myCharacter\");\n    console.log(\"myChar rendered\"); //랜더링 종료 시 인터벌 종료\n\n    return function () {\n      clearInterval(inputCheck);\n      console.log(\"pX : \", pX.current);\n      console.log(\"pY : \", pY.current);\n      dispatch(SavePosX(pX.current));\n      dispatch(SavePosY(pY.current));\n      console.log(\"render returned\");\n    };\n  }); //부드러운 움직임을 위한 변수 선언\n  //일정 초마다 키 입력 확인\n\n  var inputCheck = setInterval(function () {\n    if (keyPress[87]) pY.current -= speed;\n    if (keyPress[83]) pY.current += speed; // down - s\n\n    if (keyPress[65]) pX.current -= speed; // left - a\n\n    if (keyPress[68]) pX.current += speed; //테이블 충돌 감지\n    //캐릭터 네 점이 테이블과 겹치는지 확인\n    //캐릭터의 x축이 테이블 x축 안에 포함될 때\n    //좌상(charY, charX), 우상(charY, charX+charSize)\n    //좌하(charY+charSize, charX), 우하(charY+charSize, charX+charSize)\n\n    if (pX.current < tableData.tbLeft + tableData.width && pX.current + charSize > tableData.tbLeft && pY.current < tableData.tbTop + 50 + tableData.height && charSize + pY.current > tableData.tbTop + 50) {\n      if (keyPress[87]) pY.current += speed;\n      if (keyPress[83]) pY.current -= speed; // down - s\n\n      if (keyPress[65]) pX.current += speed; // left - a\n\n      if (keyPress[68]) pX.current -= speed;\n    }\n\n    if (pY.current < 0) //외부 벽 충돌 감지\n      pY.current = 0;\n    if (pY.current >= mapSize - charSize) pY.current = mapSize - charSize;\n    if (pX.current < 0) pX.current = 0;\n    if (pX.current >= mapSize - charSize) pX.current = mapSize - charSize; //캐릭터 좌표 최신화\n\n    myChar.style.left = pX.current + \"px\";\n    myChar.style.top = pY.current + \"px\"; // console.log(\"interval\");\n  }, 16); //첫 렌더링될 때만 입력받는 input태그로 focus\n\n  useEffect(function () {\n    console.log(\"useEffect focus once\");\n    mapFocus.current.focus();\n  }, []); //맵 클릭 시 입력 포커싱 지정\n\n  var changeFocus = function changeFocus() {\n    mapFocus.current.focus();\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    keyPress[e.keyCode.toString()] = true;\n  };\n\n  var handleKeyUp = function handleKeyUp(e) {\n    keyPress[e.keyCode.toString()] = false;\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Value = _useState2[0],\n      setValue = _useState2[1];\n\n  useBeforeunload(function (e) {\n    if (Value !== \"\") e.preventDefault();\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: changeFocus,\n    style: {\n      width: mapSize,\n      height: mapSize,\n      background: \"orange\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myCharacter\",\n    style: {\n      margin: \"0px\",\n      width: charSize,\n      height: charSize,\n      background: \"red\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"table\",\n    style: {\n      width: tableData.width,\n      height: tableData.height,\n      left: tableData.tbLeft,\n      top: tableData.tbTop,\n      background: \"green\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    value: \"a\" // style={{ display: \"none\" }}\n    ,\n    type: \"text\",\n    ref: mapFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), \"playMap\");\n}","map":{"version":3,"names":["React","useRef","useEffect","useState","useSelector","useDispatch","SavePosX","selectPosX","SavePosY","selectPosY","useBeforeunload","chainPropTypes","PlayMap","props","dispatch","mapSize","charSize","tableData","tbLeft","tbTop","width","height","mapFocus","myChar","keyPress","pX","pY","speed","document","getElementById","console","log","clearInterval","inputCheck","current","setInterval","style","left","top","focus","changeFocus","handleKeyDown","e","keyCode","toString","handleKeyUp","Value","setValue","preventDefault","background","margin","position","target","value"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/GatherRoomPageCom/PlayMap.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SavePosX, selectPosX } from \"../../redux/slice/GatherMapPosXSlice\";\r\nimport { SavePosY, selectPosY } from \"../../redux/slice/GatherMapPosYSlice\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\nimport { chainPropTypes } from \"@mui/utils\";\r\n\r\nexport default function PlayMap(props) {\r\n    const dispatch = useDispatch();\r\n    const mapSize = 700;\r\n    const charSize = 50;\r\n    const tableData = {\r\n        tbLeft: 200,\r\n        tbTop: 100 - charSize,\r\n        width: 300,\r\n        height: 100,\r\n    };\r\n    //맵 크기\r\n    //포커싱 지정을 위한 변수\r\n    const mapFocus = useRef();\r\n    //div태그를 아바타 객체로 지정\r\n    let myChar;\r\n\r\n    let keyPress = {},\r\n        pX = useRef(useSelector(selectPosX)),\r\n        pY = useRef(useSelector(selectPosY)),\r\n        speed = 5;\r\n    //렌더링될 때마다 myChar가 #myCharacter 를 가르킴\r\n    useEffect(() => {\r\n        myChar = document.getElementById(\"myCharacter\");\r\n        console.log(\"myChar rendered\");\r\n        //랜더링 종료 시 인터벌 종료\r\n        return () => {\r\n            clearInterval(inputCheck);\r\n\r\n            console.log(\"pX : \", pX.current);\r\n            console.log(\"pY : \", pY.current);\r\n            dispatch(SavePosX(pX.current));\r\n            dispatch(SavePosY(pY.current));\r\n            console.log(\"render returned\");\r\n        };\r\n    });\r\n\r\n    //부드러운 움직임을 위한 변수 선언\r\n    //일정 초마다 키 입력 확인\r\n    const inputCheck = setInterval(() => {\r\n        if (keyPress[87]) pY.current -= speed;\r\n        if (keyPress[83]) pY.current += speed; // down - s\r\n        if (keyPress[65]) pX.current -= speed; // left - a\r\n        if (keyPress[68]) pX.current += speed;\r\n\r\n        //테이블 충돌 감지\r\n        //캐릭터 네 점이 테이블과 겹치는지 확인\r\n        //캐릭터의 x축이 테이블 x축 안에 포함될 때\r\n        //좌상(charY, charX), 우상(charY, charX+charSize)\r\n        //좌하(charY+charSize, charX), 우하(charY+charSize, charX+charSize)\r\n\r\n        if (\r\n            pX.current < tableData.tbLeft + tableData.width &&\r\n            pX.current + charSize > tableData.tbLeft &&\r\n            pY.current < tableData.tbTop + 50 + tableData.height &&\r\n            charSize + pY.current > tableData.tbTop + 50\r\n        ) {\r\n            if (keyPress[87]) pY.current += speed;\r\n            if (keyPress[83]) pY.current -= speed; // down - s\r\n            if (keyPress[65]) pX.current += speed; // left - a\r\n            if (keyPress[68]) pX.current -= speed;\r\n        }\r\n\r\n        if (pY.current < 0)\r\n            //외부 벽 충돌 감지\r\n            pY.current = 0;\r\n        if (pY.current >= mapSize - charSize) pY.current = mapSize - charSize;\r\n        if (pX.current < 0) pX.current = 0;\r\n        if (pX.current >= mapSize - charSize) pX.current = mapSize - charSize;\r\n\r\n        //캐릭터 좌표 최신화\r\n        myChar.style.left = pX.current + \"px\";\r\n        myChar.style.top = pY.current + \"px\";\r\n        // console.log(\"interval\");\r\n    }, 16);\r\n\r\n    //첫 렌더링될 때만 입력받는 input태그로 focus\r\n    useEffect(() => {\r\n        console.log(\"useEffect focus once\");\r\n        mapFocus.current.focus();\r\n    }, []);\r\n\r\n    //맵 클릭 시 입력 포커싱 지정\r\n    const changeFocus = () => {\r\n        mapFocus.current.focus();\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        keyPress[e.keyCode.toString()] = true;\r\n    };\r\n    const handleKeyUp = (e) => {\r\n        keyPress[e.keyCode.toString()] = false;\r\n    };\r\n    const [Value, setValue] = useState(\"\");\r\n    useBeforeunload((e) => {\r\n        if (Value !== \"\") e.preventDefault();\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onClick={changeFocus}\r\n                style={{\r\n                    width: mapSize,\r\n                    height: mapSize,\r\n                    background: \"orange\",\r\n                }}\r\n            >\r\n                <div\r\n                    id=\"myCharacter\"\r\n                    style={{\r\n                        margin: `0px`,\r\n                        width: charSize,\r\n                        height: charSize,\r\n                        background: \"red\",\r\n                        position: \"relative\",\r\n                    }}\r\n                ></div>\r\n                <div\r\n                    id=\"table\"\r\n                    style={{\r\n                        width: tableData.width,\r\n                        height: tableData.height,\r\n                        left: tableData.tbLeft,\r\n                        top: tableData.tbTop,\r\n                        background: \"green\",\r\n                        position: \"relative\",\r\n                    }}\r\n                ></div>\r\n            </div>\r\n            <input\r\n                onChange={(e) => setValue(e.target.value)}\r\n                value={\"a\"}\r\n                // style={{ display: \"none\" }}\r\n                type=\"text\"\r\n                ref={mapFocus}\r\n                onKeyDown={handleKeyDown}\r\n                onKeyUp={handleKeyUp}\r\n                readOnly\r\n            />\r\n            playMap\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}