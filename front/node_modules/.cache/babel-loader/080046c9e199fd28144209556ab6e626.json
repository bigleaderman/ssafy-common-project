{"ast":null,"code":"var _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\pages\\\\GatherRoomPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\"; //자체 컴포넌트\n\nimport MainBar from \"../components/GatherRoomPageCom/MainBar\";\nimport PlayMap from \"../components/GatherRoomPageCom/PlayMap\";\nimport SideBar from \"../components/GatherRoomPageCom/SideBar\";\nimport AllCam from \"../components/GameRoomPageCom/AllCam\";\nimport NaviBar2 from \"../components/GatherRoomPageCom/NaviBar2\";\nimport { selectUser } from \"../redux/slice/UserSlice\"; //mui 컴포넌트\n\nimport Grid from \"@mui/material/Grid\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\"; //socktjs\n\nimport SockJS from \"sockjs-client\";\nimport { setInterval } from \"stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar StompJs = require(\"@stomp/stompjs\");\n\nconst GatherRoom = () => {\n  _s();\n\n  const childComponentRef = useRef();\n  const sideComponentRef = useRef();\n  const token = useSelector(state => state.user.accessToken);\n  const myNickName = useSelector(selectUser).nickname;\n  const roomNum = useSelector(state => state.roomNum);\n  console.log(\"GatherRoom 리랜더링 확인\");\n  const subAddr = `/sub/room/${roomNum}`;\n  const pubAddr = `/pub/room/${roomNum}`;\n  const pubGameAddr = `${pubAddr}/game`;\n  const [currentGameState, setCurrentGameState] = useState(\"게임 준비 중...\");\n  const [IsGameStart, setIsGameStart] = useState(false);\n  const [myRole, setMyRole] = useState(\"\");\n  const [timer, setTimer] = useState();\n  const client = useMemo(() => new StompJs.Client({\n    //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\n    // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\n    connectHeaders: {},\n    debug: function (str) {\n      console.log(str);\n    },\n    reconnectDelay: 5000,\n    heartbeatIncoming: 4000,\n    heartbeatOutgoing: 4000\n  }), []);\n\n  client.webSocketFactory = () => {\n    return new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\n  }; // const client = new StompJs.Client({\n  //   //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\n  //   // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\n  //   connectHeaders: {},\n  //   debug: function (str) {\n  //     console.log(str);\n  //   },\n  //   reconnectDelay: 5000,\n  //   heartbeatIncoming: 4000,\n  //   heartbeatOutgoing: 4000,\n  // });\n\n\n  const onMessageReceived = payload => {\n    let parsedData = JSON.parse(payload.body);\n    console.log(payload); //게임 시작 신호 수신\n\n    if (parsedData.type === \"session-created\") {\n      setCurrentGameState(\"세션 생성 완료\"); //게더맵 => 캠 화면 변경\n\n      setIsGameStart(true);\n    } //게임 시작 신호 수신\n    else if (parsedData.type === \"game-start\") {\n      setCurrentGameState(\"게임 시작\"); //main bar에 낮 시작 문구 작성\n    } //본인 역할 확인\n    else if (parsedData.type === \"role\") {\n      setCurrentGameState(\"자신의 역할 확인 중\");\n      setTimer(5);\n      let intTimer = setInterval(() => {\n        setTimer(timer - 1);\n      }, 1000);\n      setMyRole(parsedData.data.role); //5초 뒤 역할 확인 소켓 전홍\n\n      setTimeout(() => {\n        clearInterval(intTimer);\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"role\",\n            data: {\n              role: myRole\n            }\n          }),\n          skipContentLengthHeader: true\n        });\n      }, 5000);\n    } //낮 시간 시작\n    else if (parsedData.type === \"talk-start\") {\n      setCurrentGameState(\"낮이 시작되었습니다.\");\n      setTimer(60);\n      let intTimer = setInterval(() => {\n        setTimer(timer - 1);\n      }, 1000);\n      setTimeout(() => {\n        clearInterval(intTimer); //낮 시간 종료 신호 전송\n\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"talk-end\"\n          }),\n          skipContentLengthHeader: true\n        });\n      }, parsedData.data.time * 1000);\n    } //\n    else if (parsedData.type === \"vote-ready\") {\n      setTimer(60);\n      setCurrentGameState(\"처형할 인물에 투표하십시오.\");\n      client.publish({\n        destination: pubGameAddr,\n        headers: {\n          token: token,\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type: \"vote\",\n          data: {\n            target: \"test user 0\"\n          }\n        }),\n        skipContentLengthHeader: true\n      }); //투표 종료 신호 전송\n\n      setTimeout(() => {\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"vote-result\"\n          }),\n          skipContentLengthHeader: true\n        });\n      }, parsedData.data.time * 1000);\n    } //투표 종료, 투표 결과 공개\n    else if (parsedData.type === \"vote-result\") {\n      setCurrentGameState(\"투표가 종료되었습니다.\");\n      console.log(\"vote-result: \" + parsedData.data);\n      setTimeout(() => {\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"vote-check\"\n          }),\n          skipContentLengthHeader: true\n        });\n      }, 5000);\n    } else if (parsedData.type === \"night\") {\n      console.log(\"night: \", parsedData.data);\n    } else if (parsedData.type === \"act-result\") {\n      console.log(\"act-result: \", parsedData.data);\n    } else if (parsedData.type === \"result\") {\n      console.log(\"result: \", parsedData.data);\n    } else if (parsedData.type === \"gameover\") {\n      console.log(\"gameover: \", parsedData.data); //게임 종료 후 복귀\n\n      setIsGameStart(false);\n    }\n  };\n\n  const inCamHandler = res => {\n    if (res === \"session-connect\") {\n      client.publish({\n        destination: pubGameAddr,\n        headers: {\n          token: token,\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type: \"session-connect\"\n        }),\n        skipContentLengthHeader: true\n      });\n    }\n  };\n\n  client.onConnect = frame => {\n    console.log(\"GRP, frame: \" + frame); // client.subscribe(subAddr, childComponentRef.current.onMessageReceived);\n\n    client.subscribe(subAddr, sideComponentRef.current.onMessageReceived);\n    client.subscribe(`${subAddr}/game`, onMessageReceived);\n    client.subscribe(`${subAddr}/game/${myNickName}`, onMessageReceived);\n  };\n\n  useEffect(() => {\n    //소켓 연결 코드는 한번만 랜더링\n    client.activate();\n    let unloadEventLeave = window.addEventListener(\"unload\", () => {\n      client.publish({\n        destination: pubAddr,\n        headers: {\n          token: token,\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          header: {\n            type: \"leave\"\n          },\n          data: {\n            nickname: myNickName\n          }\n        }),\n        skipContentLengthHeader: true\n      });\n    });\n    return () => {\n      window.removeEventListener(\"unload\", unloadEventLeave);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: /*#__PURE__*/_jsxDEV(MainBar, {\n              currentGameState: currentGameState,\n              myRole: myRole\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: IsGameStart ? /*#__PURE__*/_jsxDEV(AllCam, {\n              inCamHandler: inCamHandler,\n              setCurrentGameState: setCurrentGameState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(PlayMap, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            style: {\n              height: 50\n            },\n            children: /*#__PURE__*/_jsxDEV(NaviBar2, {\n              ref: childComponentRef,\n              IsGameStart: IsGameStart,\n              setIsGameStart: setIsGameStart,\n              client: client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: /*#__PURE__*/_jsxDEV(SideBar, {\n              ref: sideComponentRef,\n              client: client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GatherRoom, \"zZ+NSLtyzkoC89uUb8AirLIZBCE=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = GatherRoom;\nexport default GatherRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"GatherRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","useSelector","MainBar","PlayMap","SideBar","AllCam","NaviBar2","selectUser","Grid","Container","Paper","SockJS","setInterval","StompJs","require","GatherRoom","childComponentRef","sideComponentRef","token","state","user","accessToken","myNickName","nickname","roomNum","console","log","subAddr","pubAddr","pubGameAddr","currentGameState","setCurrentGameState","IsGameStart","setIsGameStart","myRole","setMyRole","timer","setTimer","client","Client","connectHeaders","debug","str","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","webSocketFactory","onMessageReceived","payload","parsedData","JSON","parse","body","type","intTimer","data","role","setTimeout","clearInterval","publish","destination","headers","stringify","skipContentLengthHeader","time","target","inCamHandler","res","onConnect","frame","subscribe","current","activate","unloadEventLeave","window","addEventListener","header","removeEventListener","height"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/pages/GatherRoomPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//자체 컴포넌트\r\nimport MainBar from \"../components/GatherRoomPageCom/MainBar\";\r\nimport PlayMap from \"../components/GatherRoomPageCom/PlayMap\";\r\nimport SideBar from \"../components/GatherRoomPageCom/SideBar\";\r\nimport AllCam from \"../components/GameRoomPageCom/AllCam\";\r\nimport NaviBar2 from \"../components/GatherRoomPageCom/NaviBar2\";\r\nimport { selectUser } from \"../redux/slice/UserSlice\";\r\n//mui 컴포넌트\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\n//socktjs\r\nimport SockJS from \"sockjs-client\";\r\nimport { setInterval } from \"stompjs\";\r\nvar StompJs = require(\"@stomp/stompjs\");\r\n\r\nconst GatherRoom = () => {\r\n  const childComponentRef = useRef();\r\n  const sideComponentRef = useRef();\r\n  const token = useSelector((state) => state.user.accessToken);\r\n  const myNickName = useSelector(selectUser).nickname;\r\n  const roomNum = useSelector((state) => state.roomNum);\r\n  console.log(\"GatherRoom 리랜더링 확인\");\r\n  const subAddr = `/sub/room/${roomNum}`;\r\n  const pubAddr = `/pub/room/${roomNum}`;\r\n  const pubGameAddr = `${pubAddr}/game`;\r\n  const [currentGameState, setCurrentGameState] = useState(\"게임 준비 중...\");\r\n  const [IsGameStart, setIsGameStart] = useState(false);\r\n  const [myRole, setMyRole] = useState(\"\");\r\n  const [timer, setTimer] = useState();\r\n  const client = useMemo(\r\n    () =>\r\n      new StompJs.Client({\r\n        //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\r\n        // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\r\n        connectHeaders: {},\r\n        debug: function (str) {\r\n          console.log(str);\r\n        },\r\n        reconnectDelay: 5000,\r\n        heartbeatIncoming: 4000,\r\n        heartbeatOutgoing: 4000,\r\n      }),\r\n    []\r\n  );\r\n  client.webSocketFactory = () => {\r\n    return new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\r\n  };\r\n  // const client = new StompJs.Client({\r\n  //   //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\r\n  //   // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\r\n  //   connectHeaders: {},\r\n  //   debug: function (str) {\r\n  //     console.log(str);\r\n  //   },\r\n  //   reconnectDelay: 5000,\r\n  //   heartbeatIncoming: 4000,\r\n  //   heartbeatOutgoing: 4000,\r\n  // });\r\n\r\n  const onMessageReceived = (payload) => {\r\n    let parsedData = JSON.parse(payload.body);\r\n    console.log(payload);\r\n    //게임 시작 신호 수신\r\n    if (parsedData.type === \"session-created\") {\r\n      setCurrentGameState(\"세션 생성 완료\");\r\n      //게더맵 => 캠 화면 변경\r\n      setIsGameStart(true);\r\n    }\r\n    //게임 시작 신호 수신\r\n    else if (parsedData.type === \"game-start\") {\r\n      setCurrentGameState(\"게임 시작\");\r\n      //main bar에 낮 시작 문구 작성\r\n    }\r\n    //본인 역할 확인\r\n    else if (parsedData.type === \"role\") {\r\n      setCurrentGameState(\"자신의 역할 확인 중\");\r\n      setTimer(5);\r\n      let intTimer = setInterval(() => {\r\n        setTimer(timer - 1);\r\n      }, 1000);\r\n      setMyRole(parsedData.data.role);\r\n      //5초 뒤 역할 확인 소켓 전홍\r\n      setTimeout(() => {\r\n        clearInterval(intTimer);\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"role\",\r\n            data: {\r\n              role: myRole,\r\n            },\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, 5000);\r\n    }\r\n    //낮 시간 시작\r\n    else if (parsedData.type === \"talk-start\") {\r\n      setCurrentGameState(\"낮이 시작되었습니다.\");\r\n      setTimer(60);\r\n      let intTimer = setInterval(() => {\r\n        setTimer(timer - 1);\r\n      }, 1000);\r\n      setTimeout(() => {\r\n        clearInterval(intTimer);\r\n        //낮 시간 종료 신호 전송\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"talk-end\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, parsedData.data.time * 1000);\r\n    }\r\n    //\r\n    else if (parsedData.type === \"vote-ready\") {\r\n      setTimer(60);\r\n      setCurrentGameState(\"처형할 인물에 투표하십시오.\");\r\n      client.publish({\r\n        destination: pubGameAddr,\r\n        headers: { token: token, \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          type: \"vote\",\r\n          data: {\r\n            target: \"test user 0\",\r\n          },\r\n        }),\r\n        skipContentLengthHeader: true,\r\n      });\r\n      //투표 종료 신호 전송\r\n      setTimeout(() => {\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"vote-result\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, parsedData.data.time * 1000);\r\n    }\r\n    //투표 종료, 투표 결과 공개\r\n    else if (parsedData.type === \"vote-result\") {\r\n      setCurrentGameState(\"투표가 종료되었습니다.\");\r\n\r\n      console.log(\"vote-result: \" + parsedData.data);\r\n\r\n      setTimeout(() => {\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"vote-check\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, 5000);\r\n    } else if (parsedData.type === \"night\") {\r\n      console.log(\"night: \", parsedData.data);\r\n    } else if (parsedData.type === \"act-result\") {\r\n      console.log(\"act-result: \", parsedData.data);\r\n    } else if (parsedData.type === \"result\") {\r\n      console.log(\"result: \", parsedData.data);\r\n    } else if (parsedData.type === \"gameover\") {\r\n      console.log(\"gameover: \", parsedData.data);\r\n      //게임 종료 후 복귀\r\n      setIsGameStart(false);\r\n    }\r\n  };\r\n\r\n  const inCamHandler = (res) => {\r\n    if (res === \"session-connect\") {\r\n      client.publish({\r\n        destination: pubGameAddr,\r\n        headers: { token: token, \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          type: \"session-connect\",\r\n        }),\r\n        skipContentLengthHeader: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  client.onConnect = (frame) => {\r\n    console.log(\"GRP, frame: \" + frame);\r\n    // client.subscribe(subAddr, childComponentRef.current.onMessageReceived);\r\n    client.subscribe(subAddr, sideComponentRef.current.onMessageReceived);\r\n    client.subscribe(`${subAddr}/game`, onMessageReceived);\r\n    client.subscribe(`${subAddr}/game/${myNickName}`, onMessageReceived);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //소켓 연결 코드는 한번만 랜더링\r\n    client.activate();\r\n\r\n    let unloadEventLeave = window.addEventListener(\"unload\", () => {\r\n      client.publish({\r\n        destination: pubAddr,\r\n        headers: { token: token, \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          header: {\r\n            type: \"leave\",\r\n          },\r\n          data: {\r\n            nickname: myNickName,\r\n          },\r\n        }),\r\n        skipContentLengthHeader: true,\r\n      });\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"unload\", unloadEventLeave);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={8}>\r\n          <Grid>\r\n            <Paper elevation={3}>\r\n              {/* 좌상 */}\r\n              <MainBar currentGameState={currentGameState} myRole={myRole} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid>\r\n            {/* 좌하 */}\r\n            <Paper elevation={3}>\r\n              {IsGameStart ? (\r\n                <AllCam inCamHandler={inCamHandler} setCurrentGameState={setCurrentGameState} />\r\n              ) : (\r\n                <PlayMap />\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Grid>\r\n            <Paper elevation={3} style={{ height: 50 }}>\r\n              {/* 우상 */}\r\n              <NaviBar2\r\n                ref={childComponentRef}\r\n                IsGameStart={IsGameStart}\r\n                setIsGameStart={setIsGameStart}\r\n                client={client}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid>\r\n            {/* 우하 */}\r\n            <Paper elevation={3}>\r\n              <SideBar ref={sideComponentRef} client={client} />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GatherRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}