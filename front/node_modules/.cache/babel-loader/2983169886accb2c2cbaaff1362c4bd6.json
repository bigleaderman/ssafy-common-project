{"ast":null,"code":"var _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\components\\\\GameRoomPageCom\\\\AllCam.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { OpenVidu } from \"openvidu-browser\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../redux/slice/UserSlice\";\nimport { Grid } from \"@mui/material\";\nimport UserVideoComponent from \"./UserVideoComponent\";\nimport RoleComboBox from \"../RoleComboBox\"; //게임 방 번호 가져옴\n// import {} from \"../../redux/slice/\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllCam = props => {\n  _s();\n\n  let OV, session, mySession;\n  let ovToken;\n  const roomNum = useSelector(state => state.roomNum);\n  const currentUser = useSelector(selectUser);\n  const token = useSelector(state => state.user.accessToken);\n  const pubAddr = `/pub/room/${roomNum}`;\n  const pubGameAddr = `${pubAddr}/game`;\n  const [subscribers, setSubscribers] = useState([]);\n  const [currentVideoDevice, setCurrentVideoDevice] = useState(undefined);\n  const [mainStreamManager, setMainStreamManager] = useState(undefined);\n  const [publisher, setPublisher] = useState(undefined);\n  const [voteIndex, setVoteIndex] = useState(null); // let publisher;\n\n  useEffect(() => {\n    console.log(props.dead);\n    joinSession();\n    return () => {\n      leaveSession();\n    };\n  }, []); //메인 비디오 컨트롤\n  // const handleMainVideoStream = (stream) => {\n  //   if (mainStreamManager !== stream) {\n  //     mainStreamManager = stream;\n  //   }\n  // };\n\n  const deleteSubscriber = streamManager => {\n    let index = subscribers.indexOf(streamManager, 0);\n\n    if (index > -1) {\n      setSubscribers([...subscribers].splice(index, 1));\n    }\n  };\n\n  const joinSession = async () => {\n    OV = new OpenVidu();\n    session = OV.initSession();\n    mySession = session;\n    mySession.on(\"streamCreated\", event => {\n      // Subscribe to the Stream to receive it. Second parameter is undefined\n      // so OpenVidu doesn't create an HTML video by its own\n      const tmpSubscriber = mySession.subscribe(event.stream, undefined); // Update the state with the new subscribers\n\n      setSubscribers(currentSubscribers => [...currentSubscribers, tmpSubscriber]);\n    });\n    mySession.on(\"streamDestroyed\", event => {\n      // Remove the stream from 'subscribers' array\n      deleteSubscriber(event.stream.streamManager);\n    }); // On every asynchronous exception...\n\n    mySession.on(\"exception\", exception => {\n      console.warn(exception);\n    });\n    await axios({\n      url: `/api/room/${roomNum}/video-token`,\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${currentUser.accessToken}`\n      }\n    }).then(_ref => {\n      let {\n        data\n      } = _ref;\n      console.log(\"data: \" + data);\n      ovToken = data;\n    }).catch(err => {\n      console.log(\"get ovToken fail: \", err);\n    });\n    await mySession.connect(ovToken, {\n      clientData: currentUser.nickname\n    }).then(async () => {\n      props.inCamHandler({\n        type: \"session-connect\"\n      });\n      props.setCurrentGameState(\"세션 접속 완료\"); //모든 입출력 장치 불러옴\n\n      const devices = await OV.getDevices();\n      console.log(devices); //입출력 장치 중 videoInput == 캠만 배열화 후 저장\n\n      const videoDevices = devices.filter(device => device.kind === \"videoinput\"); // --- 5) Get your own camera stream ---\n      // Init a publisher passing undefined as targetElement (we don't want OpenVidu to insert a video\n      // element: we will manage it on our own) and with the desired properties\n\n      let tmpPublisher = OV.initPublisher(undefined, {\n        audioSource: undefined,\n        // The source of audio. If undefined default microphone\n        videoSource: videoDevices[0].deviceId,\n        // The source of video. If undefined default webcam\n        publishAudio: false,\n        // Whether you want to start publishing with your audio unmuted or not\n        publishVideo: false,\n        // Whether you want to start publishing with your video enabled or not\n        resolution: \"640x400\",\n        // The resolution of your video\n        frameRate: 30,\n        // The frame rate of your video\n        insertMode: \"APPEND\",\n        // How the video is inserted in the target element 'video-container'\n        mirror: false // Whether to mirror your local video or not\n\n      }); // --- 6) Publish your stream ---\n\n      mySession.publish(tmpPublisher); // Set the main video in the page to display our webcam and store our Publisher\n\n      setCurrentVideoDevice(videoDevices[0]);\n      setMainStreamManager(tmpPublisher);\n      setPublisher(tmpPublisher);\n    }).catch(error => {\n      console.log(\"There was an error connecting to the session:\", error.code, error.message);\n    });\n  };\n\n  const leaveSession = () => {\n    if (mySession) mySession.disconnect();\n    OV = null;\n    session = undefined;\n    setSubscribers([]);\n    setMainStreamManager(undefined);\n    setPublisher(undefined); // publisher = undefined;\n  };\n\n  const switchCamera = async () => {\n    try {\n      const devices = await OV.getDevices();\n      const videoDevices = devices.filter(device => device.kind === \"videoinput\");\n\n      if (videoDevices && videoDevices.length > 1) {\n        const newVideoDevice = videoDevices.filter(device => device.deviceId !== currentVideoDevice.deviceId);\n\n        if (newVideoDevice.length > 0) {\n          // Creating a new publisher with specific videoSource\n          // In mobile devices the default and first camera is the front one\n          const newPublisher = OV.initPublisher(undefined, {\n            videoSource: null,\n            publishAudio: false,\n            publishVideo: false,\n            mirror: false\n          }); //newPublisher.once(\"accessAllowed\", () => {\n\n          await session.unpublish(mainStreamManager);\n          await session.publish(newPublisher);\n          setCurrentVideoDevice(newVideoDevice);\n          setMainStreamManager(newPublisher);\n          setPublisher(newPublisher);\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleVote = index => {\n    if (props.turn === \"vote\") {\n      setVoteIndex(index);\n      console.log(JSON.parse(subscribers[index].stream.connection.data).clientData, \"를 지목함\"); // 소켓 전송\n\n      props.client.publish({\n        destination: pubGameAddr,\n        headers: {\n          token: token,\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type: \"vote\",\n          data: {\n            target: JSON.parse(subscribers[index].stream.connection.data).clientData\n          }\n        }),\n        skipContentLengthHeader: true\n      });\n    } else if (props.turn === \"night\") {\n      if (props.role === \"mafia\") {\n        setVoteIndex(index);\n        console.log(JSON.parse(subscribers[index].stream.connection.data).clientData, \"를 지목함\"); // 소켓 전송\n\n        props.client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"night-act\",\n            data: {\n              nickname: currentUser.nickname,\n              role: \"mafia\",\n              target: JSON.parse(subscribers[index].stream.connection.data).clientData\n            }\n          }),\n          skipContentLengthHeader: true\n        });\n      } else if (props.role === \"police\") {\n        setVoteIndex(index);\n        console.log(JSON.parse(subscribers[index].stream.connection.data).clientData, \"를 지목함\"); // 소켓 전송\n\n        props.client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"night-act\",\n            data: {\n              nickname: currentUser.nickname,\n              role: \"police\",\n              target: JSON.parse(subscribers[index].stream.connection.data).clientData\n            }\n          }),\n          skipContentLengthHeader: true\n        });\n      } else if (props.role === \"doctor\") {\n        setVoteIndex(index);\n        console.log(JSON.parse(subscribers[index].stream.connection.data).clientData, \"를 지목함\"); // 소켓 전송\n\n        props.client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"night-act\",\n            data: {\n              nickname: currentUser.nickname,\n              role: \"doctor\",\n              target: JSON.parse(subscribers[index].stream.connection.data).clientData\n            }\n          }),\n          skipContentLengthHeader: true\n        });\n      }\n    }\n  };\n\n  const isPointer = () => {\n    if (props.turn === \"vote\") {\n      return voteIndex === null;\n    } else if (props.turn === \"night\" && props.role !== \"civil\") {\n      return voteIndex === null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uD074\\uB9AD \\uC2DC \\uC5F0\\uACB0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        height: 500\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: publisher !== undefined ? /*#__PURE__*/_jsxDEV(UserVideoComponent, {\n            streamManager: publisher,\n            self: true,\n            isPointer: false,\n            isDead: props.dead.indexOf(currentUser.nickname) >= 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: subscribers[2] !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                if (isPointer()) handleVote(2);\n              },\n              children: /*#__PURE__*/_jsxDEV(UserVideoComponent, {\n                streamManager: subscribers[2],\n                isPointer: isPointer(),\n                isDead: props.dead.indexOf(JSON.parse(subscribers[2].stream.connection.data).clientData) >= 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RoleComboBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: subscribers[4] !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                if (isPointer()) handleVote(4);\n              },\n              children: /*#__PURE__*/_jsxDEV(UserVideoComponent, {\n                streamManager: subscribers[4],\n                isPointer: isPointer(),\n                isDead: props.dead.indexOf(JSON.parse(subscribers[4].stream.connection.data).clientData) >= 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RoleComboBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: subscribers[0] !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                if (isPointer()) handleVote(0);\n              },\n              children: /*#__PURE__*/_jsxDEV(UserVideoComponent, {\n                streamManager: subscribers[0],\n                isPointer: isPointer(),\n                isDead: props.dead.indexOf(JSON.parse(subscribers[0].stream.connection.data).clientData) >= 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RoleComboBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: \"empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: subscribers[5] !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                if (isPointer()) handleVote(5);\n              },\n              children: /*#__PURE__*/_jsxDEV(UserVideoComponent, {\n                streamManager: subscribers[5],\n                isPointer: isPointer(),\n                isDead: props.dead.indexOf(JSON.parse(subscribers[5].stream.connection.data).clientData) >= 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RoleComboBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: subscribers[1] !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                if (isPointer()) handleVote(1);\n              },\n              children: /*#__PURE__*/_jsxDEV(UserVideoComponent, {\n                streamManager: subscribers[1],\n                isPointer: isPointer(),\n                isDead: props.dead.indexOf(JSON.parse(subscribers[1].stream.connection.data).clientData) >= 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RoleComboBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: subscribers[3] !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                if (isPointer()) handleVote(3);\n              },\n              children: /*#__PURE__*/_jsxDEV(UserVideoComponent, {\n                streamManager: subscribers[3],\n                isPointer: isPointer(),\n                isDead: props.dead.indexOf(JSON.parse(subscribers[3].stream.connection.data).clientData) >= 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RoleComboBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: subscribers[6] !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                if (isPointer()) handleVote(6);\n              },\n              children: /*#__PURE__*/_jsxDEV(UserVideoComponent, {\n                streamManager: subscribers[6],\n                isPointer: isPointer(),\n                isDead: props.dead.indexOf(JSON.parse(subscribers[6].stream.connection.data).clientData) >= 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RoleComboBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllCam, \"IkSyNzjiWa6vJq5wswH1dYrvMIg=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = AllCam;\nexport default AllCam;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCam\");","map":{"version":3,"names":["React","useEffect","useState","OpenVidu","axios","useSelector","selectUser","Grid","UserVideoComponent","RoleComboBox","AllCam","props","OV","session","mySession","ovToken","roomNum","state","currentUser","token","user","accessToken","pubAddr","pubGameAddr","subscribers","setSubscribers","currentVideoDevice","setCurrentVideoDevice","undefined","mainStreamManager","setMainStreamManager","publisher","setPublisher","voteIndex","setVoteIndex","console","log","dead","joinSession","leaveSession","deleteSubscriber","streamManager","index","indexOf","splice","initSession","on","event","tmpSubscriber","subscribe","stream","currentSubscribers","exception","warn","url","method","headers","Authorization","then","data","catch","err","connect","clientData","nickname","inCamHandler","type","setCurrentGameState","devices","getDevices","videoDevices","filter","device","kind","tmpPublisher","initPublisher","audioSource","videoSource","deviceId","publishAudio","publishVideo","resolution","frameRate","insertMode","mirror","publish","error","code","message","disconnect","switchCamera","length","newVideoDevice","newPublisher","unpublish","e","handleVote","turn","JSON","parse","connection","client","destination","body","stringify","target","skipContentLengthHeader","role","isPointer","height"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/GameRoomPageCom/AllCam.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { OpenVidu } from \"openvidu-browser\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../redux/slice/UserSlice\";\r\nimport { Grid } from \"@mui/material\";\r\nimport UserVideoComponent from \"./UserVideoComponent\";\r\nimport RoleComboBox from \"../RoleComboBox\";\r\n\r\n\r\n//게임 방 번호 가져옴\r\n// import {} from \"../../redux/slice/\";\r\n\r\nconst AllCam = (props) => {\r\n  let OV, session, mySession;\r\n  let ovToken;\r\n  const roomNum = useSelector((state) => state.roomNum);\r\n  const currentUser = useSelector(selectUser);\r\n  const token = useSelector((state) => state.user.accessToken);\r\n  const pubAddr = `/pub/room/${roomNum}`;\r\n  const pubGameAddr = `${pubAddr}/game`;\r\n  const [subscribers, setSubscribers] = useState([]);\r\n  const [currentVideoDevice, setCurrentVideoDevice] = useState(undefined);\r\n  const [mainStreamManager, setMainStreamManager] = useState(undefined);\r\n  const [publisher, setPublisher] = useState(undefined);\r\n  const [voteIndex, setVoteIndex] = useState(null);\r\n  // let publisher;\r\n\r\n  useEffect(() => {\r\n    console.log(props.dead);\r\n    joinSession();\r\n\r\n    return () => {\r\n      leaveSession();\r\n    };\r\n  }, []);\r\n\r\n  //메인 비디오 컨트롤\r\n  // const handleMainVideoStream = (stream) => {\r\n  //   if (mainStreamManager !== stream) {\r\n  //     mainStreamManager = stream;\r\n  //   }\r\n  // };\r\n\r\n  const deleteSubscriber = (streamManager) => {\r\n    let index = subscribers.indexOf(streamManager, 0);\r\n    if (index > -1) {\r\n      setSubscribers([...subscribers].splice(index, 1));\r\n    }\r\n  };\r\n\r\n  const joinSession = async () => {\r\n    OV = new OpenVidu();\r\n    session = OV.initSession();\r\n    mySession = session;\r\n\r\n    mySession.on(\"streamCreated\", (event) => {\r\n      // Subscribe to the Stream to receive it. Second parameter is undefined\r\n      // so OpenVidu doesn't create an HTML video by its own\r\n      const tmpSubscriber = mySession.subscribe(event.stream, undefined);\r\n      // Update the state with the new subscribers\r\n      setSubscribers((currentSubscribers) => [...currentSubscribers, tmpSubscriber]);\r\n    });\r\n\r\n    mySession.on(\"streamDestroyed\", (event) => {\r\n      // Remove the stream from 'subscribers' array\r\n      deleteSubscriber(event.stream.streamManager);\r\n    });\r\n\r\n    // On every asynchronous exception...\r\n    mySession.on(\"exception\", (exception) => {\r\n      console.warn(exception);\r\n    });\r\n\r\n    await axios({\r\n      url: `/api/room/${roomNum}/video-token`,\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${currentUser.accessToken}`,\r\n      },\r\n    })\r\n      .then(({ data }) => {\r\n        console.log(\"data: \" + data);\r\n        ovToken = data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"get ovToken fail: \", err);\r\n      });\r\n\r\n    await mySession\r\n      .connect(ovToken, { clientData: currentUser.nickname })\r\n      .then(async () => {\r\n        props.inCamHandler({ type: \"session-connect\" });\r\n        props.setCurrentGameState(\"세션 접속 완료\");\r\n        //모든 입출력 장치 불러옴\r\n        const devices = await OV.getDevices();\r\n        console.log(devices);\r\n        //입출력 장치 중 videoInput == 캠만 배열화 후 저장\r\n        const videoDevices = devices.filter((device) => device.kind === \"videoinput\");\r\n\r\n        // --- 5) Get your own camera stream ---\r\n\r\n        // Init a publisher passing undefined as targetElement (we don't want OpenVidu to insert a video\r\n        // element: we will manage it on our own) and with the desired properties\r\n\r\n        let tmpPublisher = OV.initPublisher(undefined, {\r\n          audioSource: undefined, // The source of audio. If undefined default microphone\r\n          videoSource: videoDevices[0].deviceId, // The source of video. If undefined default webcam\r\n          publishAudio: false, // Whether you want to start publishing with your audio unmuted or not\r\n          publishVideo: false, // Whether you want to start publishing with your video enabled or not\r\n          resolution: \"640x400\", // The resolution of your video\r\n          frameRate: 30, // The frame rate of your video\r\n          insertMode: \"APPEND\", // How the video is inserted in the target element 'video-container'\r\n          mirror: false, // Whether to mirror your local video or not\r\n        });\r\n\r\n        // --- 6) Publish your stream ---\r\n        mySession.publish(tmpPublisher);\r\n\r\n        // Set the main video in the page to display our webcam and store our Publisher\r\n\r\n        setCurrentVideoDevice(videoDevices[0]);\r\n        setMainStreamManager(tmpPublisher);\r\n        setPublisher(tmpPublisher);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"There was an error connecting to the session:\", error.code, error.message);\r\n      });\r\n  };\r\n\r\n  const leaveSession = () => {\r\n    if (mySession) mySession.disconnect();\r\n\r\n    OV = null;\r\n    session = undefined;\r\n    setSubscribers([]);\r\n    setMainStreamManager(undefined);\r\n    setPublisher(undefined);\r\n    // publisher = undefined;\r\n  };\r\n\r\n  const switchCamera = async () => {\r\n    try {\r\n      const devices = await OV.getDevices();\r\n      const videoDevices = devices.filter((device) => device.kind === \"videoinput\");\r\n\r\n      if (videoDevices && videoDevices.length > 1) {\r\n        const newVideoDevice = videoDevices.filter(\r\n          (device) => device.deviceId !== currentVideoDevice.deviceId\r\n        );\r\n\r\n        if (newVideoDevice.length > 0) {\r\n          // Creating a new publisher with specific videoSource\r\n          // In mobile devices the default and first camera is the front one\r\n          const newPublisher = OV.initPublisher(undefined, {\r\n            videoSource: null,\r\n            publishAudio: false,\r\n            publishVideo: false,\r\n            mirror: false,\r\n          });\r\n\r\n          //newPublisher.once(\"accessAllowed\", () => {\r\n          await session.unpublish(mainStreamManager);\r\n\r\n          await session.publish(newPublisher);\r\n          setCurrentVideoDevice(newVideoDevice);\r\n          setMainStreamManager(newPublisher);\r\n          setPublisher(newPublisher);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleVote = (index) => {\r\n    if (props.turn === \"vote\") {\r\n      setVoteIndex(index);\r\n      console.log(JSON.parse(subscribers[index].stream.connection.data).clientData, \"를 지목함\");\r\n\r\n      // 소켓 전송\r\n\r\n      props.client.publish({\r\n        destination: pubGameAddr,\r\n        headers: { token: token, \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          type: \"vote\",\r\n          data: {\r\n            target: JSON.parse(subscribers[index].stream.connection.data).clientData,\r\n          },\r\n        }),\r\n        skipContentLengthHeader: true,\r\n      });\r\n    } else if (props.turn === \"night\") {\r\n      if (props.role === \"mafia\") {\r\n        setVoteIndex(index);\r\n        console.log(JSON.parse(subscribers[index].stream.connection.data).clientData, \"를 지목함\");\r\n\r\n        // 소켓 전송\r\n\r\n        props.client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"night-act\",\r\n            data: {\r\n              nickname: currentUser.nickname,\r\n              role: \"mafia\",\r\n              target: JSON.parse(subscribers[index].stream.connection.data).clientData,\r\n            },\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      } else if (props.role === \"police\") {\r\n        setVoteIndex(index);\r\n        console.log(JSON.parse(subscribers[index].stream.connection.data).clientData, \"를 지목함\");\r\n\r\n        // 소켓 전송\r\n\r\n        props.client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"night-act\",\r\n            data: {\r\n              nickname: currentUser.nickname,\r\n              role: \"police\",\r\n              target: JSON.parse(subscribers[index].stream.connection.data).clientData,\r\n            },\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      } else if (props.role === \"doctor\") {\r\n        setVoteIndex(index);\r\n        console.log(JSON.parse(subscribers[index].stream.connection.data).clientData, \"를 지목함\");\r\n\r\n        // 소켓 전송\r\n\r\n        props.client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"night-act\",\r\n            data: {\r\n              nickname: currentUser.nickname,\r\n              role: \"doctor\",\r\n              target: JSON.parse(subscribers[index].stream.connection.data).clientData,\r\n            },\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const isPointer = () => {\r\n    if (props.turn === \"vote\") {\r\n      return voteIndex === null;\r\n    } else if (props.turn === \"night\" && props.role !== \"civil\") {\r\n      return voteIndex === null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button>클릭 시 연결</button>\r\n      <Grid container spacing={2} style={{ height: 500 }}>\r\n        <Grid item xs={4}>\r\n          <Grid>\r\n            {/* 1번 자리 내 캠 */}\r\n            {publisher !== undefined ? (\r\n              <UserVideoComponent\r\n                streamManager={publisher}\r\n                self={true}\r\n                isPointer={false}\r\n                isDead={props.dead.indexOf(currentUser.nickname) >= 0}\r\n              />\r\n            ) : null}\r\n          </Grid>\r\n          <Grid>\r\n            {subscribers[2] !== undefined ? (\r\n              <>\r\n                <div\r\n                  onClick={() => {\r\n                    if (isPointer()) handleVote(2);\r\n                  }}\r\n                >\r\n                  <UserVideoComponent\r\n                    streamManager={subscribers[2]}\r\n                    isPointer={isPointer()}\r\n                    isDead={\r\n                      props.dead.indexOf(\r\n                        JSON.parse(subscribers[2].stream.connection.data).clientData\r\n                      ) >= 0\r\n                    }\r\n                  />\r\n                </div>\r\n                <RoleComboBox />\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid>\r\n            {subscribers[4] !== undefined ? (\r\n              <>\r\n                <div\r\n                  onClick={() => {\r\n                    if (isPointer()) handleVote(4);\r\n                  }}\r\n                >\r\n                  <UserVideoComponent\r\n                    streamManager={subscribers[4]}\r\n                    isPointer={isPointer()}\r\n                    isDead={\r\n                      props.dead.indexOf(\r\n                        JSON.parse(subscribers[4].stream.connection.data).clientData\r\n                      ) >= 0\r\n                    }\r\n                  />\r\n                </div>\r\n                <RoleComboBox />\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Grid>\r\n            {subscribers[0] !== undefined ? (\r\n              <>\r\n                <div\r\n                  onClick={() => {\r\n                    if (isPointer()) handleVote(0);\r\n                  }}\r\n                >\r\n                  <UserVideoComponent\r\n                    streamManager={subscribers[0]}\r\n                    isPointer={isPointer()}\r\n                    isDead={\r\n                      props.dead.indexOf(\r\n                        JSON.parse(subscribers[0].stream.connection.data).clientData\r\n                      ) >= 0\r\n                    }\r\n                  />\r\n                </div>\r\n                <RoleComboBox />\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid>empty</Grid>\r\n          <Grid>\r\n            {subscribers[5] !== undefined ? (\r\n              <>\r\n                <div\r\n                  onClick={() => {\r\n                    if (isPointer()) handleVote(5);\r\n                  }}\r\n                >\r\n                  <UserVideoComponent\r\n                    streamManager={subscribers[5]}\r\n                    isPointer={isPointer()}\r\n                    isDead={\r\n                      props.dead.indexOf(\r\n                        JSON.parse(subscribers[5].stream.connection.data).clientData\r\n                      ) >= 0\r\n                    }\r\n                  />\r\n                </div>\r\n                <RoleComboBox />\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Grid>\r\n            {subscribers[1] !== undefined ? (\r\n              <>\r\n                <div\r\n                  onClick={() => {\r\n                    if (isPointer()) handleVote(1);\r\n                  }}\r\n                >\r\n                  <UserVideoComponent\r\n                    streamManager={subscribers[1]}\r\n                    isPointer={isPointer()}\r\n                    isDead={\r\n                      props.dead.indexOf(\r\n                        JSON.parse(subscribers[1].stream.connection.data).clientData\r\n                      ) >= 0\r\n                    }\r\n                  />\r\n                </div>\r\n                <RoleComboBox />\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid>\r\n            {subscribers[3] !== undefined ? (\r\n              <>\r\n                <div\r\n                  onClick={() => {\r\n                    if (isPointer()) handleVote(3);\r\n                  }}\r\n                >\r\n                  <UserVideoComponent\r\n                    streamManager={subscribers[3]}\r\n                    isPointer={isPointer()}\r\n                    isDead={\r\n                      props.dead.indexOf(\r\n                        JSON.parse(subscribers[3].stream.connection.data).clientData\r\n                      ) >= 0\r\n                    }\r\n                  />\r\n                </div>\r\n                <RoleComboBox />\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid>\r\n            {subscribers[6] !== undefined ? (\r\n              <>\r\n                <div\r\n                  onClick={() => {\r\n                    if (isPointer()) handleVote(6);\r\n                  }}\r\n                >\r\n                  <UserVideoComponent\r\n                    streamManager={subscribers[6]}\r\n                    isPointer={isPointer()}\r\n                    isDead={\r\n                      props.dead.indexOf(\r\n                        JSON.parse(subscribers[6].stream.connection.data).clientData\r\n                      ) >= 0\r\n                    }\r\n                  />\r\n                </div>\r\n                <RoleComboBox />\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllCam;"],"mappings":"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"},"metadata":{},"sourceType":"module"}