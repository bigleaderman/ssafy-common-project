{"ast":null,"code":"function pack(message, id) {\n  var result = {\n    jsonrpc: \"2.0\"\n  };\n\n  if (message.method) {\n    result.method = message.method;\n    if (message.params) result.params = message.params;\n    if (id != undefined) result.id = id;\n  } else if (id != undefined) {\n    if (message.error) {\n      if (message.result !== undefined) throw new TypeError(\"Both result and error are defined\");\n      result.error = message.error;\n    } else if (message.result !== undefined) result.result = message.result;else throw new TypeError(\"No result or error is defined\");\n\n    result.id = id;\n  }\n\n  ;\n  return JSON.stringify(result);\n}\n\n;\n\nfunction unpack(message) {\n  var result = message;\n\n  if (typeof message === 'string' || message instanceof String) {\n    result = JSON.parse(message);\n  }\n\n  var version = result.jsonrpc;\n  if (version !== '2.0') throw new TypeError(\"Invalid JsonRPC version '\" + version + \"': \" + message);\n\n  if (result.method == undefined) {\n    if (result.id == undefined) throw new TypeError(\"Invalid message: \" + message);\n    var result_defined = result.result !== undefined;\n    var error_defined = result.error !== undefined;\n    if (result_defined && error_defined) throw new TypeError(\"Both result and error are defined: \" + message);\n    if (!result_defined && !error_defined) throw new TypeError(\"No result or error is defined: \" + message);\n    result.ack = result.id;\n    delete result.id;\n  }\n\n  return result;\n}\n\n;\nexports.pack = pack;\nexports.unpack = unpack;","map":null,"metadata":{},"sourceType":"script"}