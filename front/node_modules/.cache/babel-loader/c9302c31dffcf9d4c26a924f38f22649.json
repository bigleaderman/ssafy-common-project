{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VideoElementEvent = void 0;\n\nvar Event_1 = require(\"./Event\");\n/**\n * Triggered by:\n * - [[videoElementCreated]]\n * - [[videoElementDestroyed]]\n */\n\n\nvar VideoElementEvent =\n/** @class */\nfunction (_super) {\n  __extends(VideoElementEvent, _super);\n  /**\n   * @hidden\n   */\n\n\n  function VideoElementEvent(element, target, type) {\n    var _this = _super.call(this, false, target, type) || this;\n\n    _this.element = element;\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n  // tslint:disable-next-line:no-empty\n\n\n  VideoElementEvent.prototype.callDefaultBehavior = function () {};\n\n  return VideoElementEvent;\n}(Event_1.Event);\n\nexports.VideoElementEvent = VideoElementEvent;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA;AAIA;;;;;;;AAKA;AAAA;AAAA;EAAuCA;EAOnC;;;;;EAGA,2BAAYC,OAAZ,EAAuCC,MAAvC,EAA8DC,IAA9D,EAA0E;IAA1E,YACIC,kBAAM,KAAN,EAAaF,MAAb,EAAqBC,IAArB,KAA0B,IAD9B;;IAEIE,KAAI,CAACJ,OAAL,GAAeA,OAAf;;EACH;EAED;;;EAGA;;;EACAK,+DAAyB,CAAzB;;EAEJ;AAAC,CArBD,CAAuCC,aAAvC;;AAAaC","names":["__extends","element","target","type","_super","_this","VideoElementEvent","Event_1","exports"],"sources":["C:\\SSAFY\\2nd semester\\S07P12D106\\front\\node_modules\\openvidu-browser\\src\\OpenViduInternal\\Events\\VideoElementEvent.ts"],"sourcesContent":["/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Event } from './Event';\nimport { StreamManager } from '../../OpenVidu/StreamManager';\n\n\n/**\n * Triggered by:\n * - [[videoElementCreated]]\n * - [[videoElementDestroyed]]\n */\nexport class VideoElementEvent extends Event {\n\n    /**\n     * Video element that was created or destroyed\n     */\n    element: HTMLVideoElement;\n\n    /**\n     * @hidden\n     */\n    constructor(element: HTMLVideoElement, target: StreamManager, type: string) {\n        super(false, target, type);\n        this.element = element;\n    }\n\n    /**\n     * @hidden\n     */\n    // tslint:disable-next-line:no-empty\n    callDefaultBehavior() { }\n\n}"]},"metadata":{},"sourceType":"script"}