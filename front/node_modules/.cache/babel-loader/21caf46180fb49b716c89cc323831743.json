{"ast":null,"code":"// import React, { useEffect, useMemo, useState, useRef } from \"react\";\n// import PropTypes from \"prop-types\";\n// import Tabs from \"@mui/material/Tabs\";\n// import Tab from \"@mui/material/Tab\";\n// import Typography from \"@mui/material/Typography\";\n// import Box from \"@mui/material/Box\";\n// import { selectUser } from \"../../redux/slice/UserSlice\";\n// //socktjs\n// import SockJS from \"sockjs-client\";\n// //redux\n// import { useSelector, useDispatch } from \"react-redux\";\n// import {} from \"../../redux/slice/UserSlice\";\n// const StompJs = require(\"@stomp/stompjs\");\n// //===================================================\n// //about mui tabs\n// function TabPanel(props) {\n//   console.log(props.skD);\n//   const { children, value, index, ...other } = props;\n//   return (\n//     <div\n//       role='tabpanel'\n//       hidden={value !== index}\n//       id={`simple-tabpanel-${index}`}\n//       aria-labelledby={`simple-tab-${index}`}\n//       {...other}\n//     >\n//       {value === index && (\n//         <Box sx={{ p: 3 }}>\n//           <Typography>{children}</Typography>\n//         </Box>\n//       )}\n//     </div>\n//   );\n// }\n// TabPanel.propTypes = {\n//   children: PropTypes.node,\n//   index: PropTypes.number.isRequired,\n//   value: PropTypes.number.isRequired,\n// };\n// function a11yProps(index) {\n//   return {\n//     id: `simple-tab-${index}`,\n//     \"aria-controls\": `simple-tabpanel-${index}`,\n//   };\n// }\n// //end mui tabs\n// //===================================================\n// export default function SideBar(props) {\n//   const subChat = useRef();\n//   const [value, setValue] = useState(0);\n//   const roomNum = useSelector((state) => state.roomNum);\n//   const subAddr = `/sub/room/${roomNum}`;\n//   const pubAddr = `/sub/room/${roomNum}`;\n//   const acToken = useSelector(selectUser).accessToken;\n//   // const client = useMemo(\n//   //   () =>\n//   //     new StompJs.Client({\n//   //       connectHeaders: {},\n//   //       // debug: function (str) {\n//   //       //   console.log(str);\n//   //       // },\n//   //       reconnectDelay: 5000,\n//   //       heartbeatIncoming: 4000,\n//   //       heartbeatOutgoing: 4000,\n//   //     }),\n//   //   []\n//   // );\n//   props.client.webSocketFactory = () => {\n//     return new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\n//   };\n//   const onMessageReceived = (payload) => {\n//     let data = JSON.parse(payload);\n//     console.log(\"side data: \", data);\n//     // if(data.header.type === \"chat\"){\n//     //   console.log(data.);\n//     // }\n//   };\n//   client.onConnect = (frame) => {\n//     console.log(\"start chat con\");\n//     subChat.current = client.subscribe(subAddr, onMessageReceived);\n//   };\n//   client.onWebSocketClose = () => {\n//     console.log(\"close chat con\");\n//   };\n//   //에러 발생시 실행되는 코드\n//   client.onStompError = function (frame) {\n//     console.log(\"Broker reported error: \" + frame.headers[\"message\"]);\n//     console.log(\"Additional details: \" + frame.body);\n//   };\n//   useEffect(() => {\n//     // client.activate();\n//     return () => {\n//       console.log(\"close renderer\");\n//     };\n//   }, []);\n//   const handleChange = (event, newValue) => {\n//     setValue(newValue);\n//   };\n//   return (\n//     <Box sx={{ width: \"100%\", height: 800 }}>\n//       <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n//         <Tabs value={value} onChange={handleChange} aria-label='basic tabs example'>\n//           <Tab label='채팅' {...a11yProps(0)} />\n//           <Tab label='대기실 유저' {...a11yProps(1)} />\n//           <Tab label='친구' {...a11yProps(2)} />\n//         </Tabs>\n//       </Box>\n//       <TabPanel value={value} index={0}></TabPanel>\n//       <TabPanel value={value} index={1}>\n//         Item Tw\n//       </TabPanel>\n//       <TabPanel value={value} index={2}>\n//         Item Th\n//       </TabPanel>\n//     </Box>\n//   );\n// }\n// function ChatBar() {\n//   return <span>this is ChatBar</span>;\n// }\n// function UserBar() {\n//   return <span>this is UserBar</span>;\n// }","map":{"version":3,"names":[],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/GatherRoomPageCom/SideBar.js"],"sourcesContent":["// import React, { useEffect, useMemo, useState, useRef } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n// import Tabs from \"@mui/material/Tabs\";\r\n// import Tab from \"@mui/material/Tab\";\r\n// import Typography from \"@mui/material/Typography\";\r\n// import Box from \"@mui/material/Box\";\r\n\r\n// import { selectUser } from \"../../redux/slice/UserSlice\";\r\n\r\n// //socktjs\r\n// import SockJS from \"sockjs-client\";\r\n\r\n// //redux\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import {} from \"../../redux/slice/UserSlice\";\r\n\r\n// const StompJs = require(\"@stomp/stompjs\");\r\n\r\n// //===================================================\r\n// //about mui tabs\r\n// function TabPanel(props) {\r\n//   console.log(props.skD);\r\n//   const { children, value, index, ...other } = props;\r\n\r\n//   return (\r\n//     <div\r\n//       role='tabpanel'\r\n//       hidden={value !== index}\r\n//       id={`simple-tabpanel-${index}`}\r\n//       aria-labelledby={`simple-tab-${index}`}\r\n//       {...other}\r\n//     >\r\n//       {value === index && (\r\n//         <Box sx={{ p: 3 }}>\r\n//           <Typography>{children}</Typography>\r\n//         </Box>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// TabPanel.propTypes = {\r\n//   children: PropTypes.node,\r\n//   index: PropTypes.number.isRequired,\r\n//   value: PropTypes.number.isRequired,\r\n// };\r\n\r\n// function a11yProps(index) {\r\n//   return {\r\n//     id: `simple-tab-${index}`,\r\n//     \"aria-controls\": `simple-tabpanel-${index}`,\r\n//   };\r\n// }\r\n// //end mui tabs\r\n// //===================================================\r\n\r\n// export default function SideBar(props) {\r\n//   const subChat = useRef();\r\n//   const [value, setValue] = useState(0);\r\n//   const roomNum = useSelector((state) => state.roomNum);\r\n//   const subAddr = `/sub/room/${roomNum}`;\r\n//   const pubAddr = `/sub/room/${roomNum}`;\r\n//   const acToken = useSelector(selectUser).accessToken;\r\n//   // const client = useMemo(\r\n//   //   () =>\r\n//   //     new StompJs.Client({\r\n//   //       connectHeaders: {},\r\n//   //       // debug: function (str) {\r\n//   //       //   console.log(str);\r\n//   //       // },\r\n//   //       reconnectDelay: 5000,\r\n//   //       heartbeatIncoming: 4000,\r\n//   //       heartbeatOutgoing: 4000,\r\n//   //     }),\r\n//   //   []\r\n//   // );\r\n//   props.client.webSocketFactory = () => {\r\n//     return new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\r\n//   };\r\n//   const onMessageReceived = (payload) => {\r\n//     let data = JSON.parse(payload);\r\n//     console.log(\"side data: \", data);\r\n//     // if(data.header.type === \"chat\"){\r\n//     //   console.log(data.);\r\n//     // }\r\n//   };\r\n\r\n//   client.onConnect = (frame) => {\r\n//     console.log(\"start chat con\");\r\n//     subChat.current = client.subscribe(subAddr, onMessageReceived);\r\n//   };\r\n\r\n//   client.onWebSocketClose = () => {\r\n//     console.log(\"close chat con\");\r\n//   };\r\n\r\n//   //에러 발생시 실행되는 코드\r\n//   client.onStompError = function (frame) {\r\n//     console.log(\"Broker reported error: \" + frame.headers[\"message\"]);\r\n//     console.log(\"Additional details: \" + frame.body);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     // client.activate();\r\n\r\n//     return () => {\r\n//       console.log(\"close renderer\");\r\n//     };\r\n//   }, []);\r\n\r\n//   const handleChange = (event, newValue) => {\r\n//     setValue(newValue);\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ width: \"100%\", height: 800 }}>\r\n//       <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n//         <Tabs value={value} onChange={handleChange} aria-label='basic tabs example'>\r\n//           <Tab label='채팅' {...a11yProps(0)} />\r\n//           <Tab label='대기실 유저' {...a11yProps(1)} />\r\n//           <Tab label='친구' {...a11yProps(2)} />\r\n//         </Tabs>\r\n//       </Box>\r\n//       <TabPanel value={value} index={0}></TabPanel>\r\n//       <TabPanel value={value} index={1}>\r\n//         Item Tw\r\n//       </TabPanel>\r\n//       <TabPanel value={value} index={2}>\r\n//         Item Th\r\n//       </TabPanel>\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n// function ChatBar() {\r\n//   return <span>this is ChatBar</span>;\r\n// }\r\n\r\n// function UserBar() {\r\n//   return <span>this is UserBar</span>;\r\n// }\r\n"],"mappings},"metadata":{},"sourceType":"module"}