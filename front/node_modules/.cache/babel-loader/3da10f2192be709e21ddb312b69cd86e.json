{"ast":null,"code":"import _slicedToArray from \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\components\\\\GatherRoomPageCom\\\\PlayMap.js\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SavePosX, selectPosX } from \"../../redux/slice/MapPosXSlice\";\nimport { SavePosY, selectPosY } from \"../../redux/slice/MapPosYSlice\";\nimport { useBeforeunload } from \"react-beforeunload\";\nimport Stompjs from \"stompjs\";\nimport axios from \"axios\"; //socktjs\n\nimport { over } from \"stompjs\";\nimport SockJS from \"sockjs-client\"; //memo : 값을 메모이\n//callback : 함수를 메모이\n\nexport default function PlayMap() {\n  var _this = this;\n\n  var stompClient = null;\n  var dispatch = useDispatch();\n  var seatNum, seatChange, seatCnt, seatNothing;\n  var mapSize = 700;\n  var charSize = 50;\n  var chairSize = 20;\n  var table = {\n    tbTop: 100,\n    tbLeft: 200,\n    width: 300,\n    height: 300\n  };\n  var chairs = [[40, 300], [40, 400], [160, 100], [300, 100], [450, 300], [450, 400], [160, 550], [300, 550]]; //맵 크기\n  //포커싱 지정을 위한 변수\n\n  var mapFocus = useRef(); //div태그를 아바타 객체로 지정\n\n  var myChar;\n  var keyPress = {},\n      pX = useRef(useSelector(selectPosX)),\n      pY = useRef(useSelector(selectPosY)),\n      speed = 5;\n  useEffect(function () {// //웹소켓 코드 시작\n    // const [userData, setUserData] = useState({\n    //     username: \"jik\",\n    //     connected: false,\n    //     message: \"\",\n    // });\n    // const connect = () => {\n    //     console.log(\"function connect\");\n    //     let Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\n    //     console.log(\"let Sock: \", Sock);\n    //     stompClient = over(Sock);\n    //     console.log(\"let stompClient: \", stompClient);\n    //     stompClient.connect({}, onConnected, onError);\n    // };\n    // const onConnected = () => {\n    //     console.log(\"function onConnected\");\n    //     setUserData({ ...userData, connected: true });\n    //     stompClient.subscribe(\"/ws/pub/room/0\", onMessageReceived);\n    //     // stompClient.subscribe(\n    //     //     \"/user/\" + userData.username + \"/private\",\n    //     //     onPrivateMessage\n    //     // );\n    //     // userJoin();\n    // };\n    // const onError = (err) => {\n    //     console.log(\"function onError\");\n    //     console.log(err);\n    // };\n    // const onMessageReceived = (payload) => {\n    //     console.log(\"function onMessageReceived\");\n    //     var payloadData = JSON.parse(payload.body);\n    //     console.log(payloadData);\n    // };\n    // const handleMessage = (event) => {\n    //     console.log(\"function handleMessage\");\n    //     const { value } = event.target;\n    //     setUserData({ ...userData, message: value });\n    // };\n    // const sendValue = () => {\n    //     if (stompClient) {\n    //         var chatMessage = {\n    //             senderName: userData.username,\n    //             message: userData.message,\n    //             status: \"MESSAGE\",\n    //         };\n    //         console.log(chatMessage);\n    //         stompClient.send(\n    //             \"/app/message\",\n    //             {},\n    //             JSON.stringify(chatMessage)\n    //         );\n    //         setUserData({ ...userData, message: \"\" });\n    //     }\n    // };\n    // connect();\n    // //웹소켓 코드 끝\n  }, []); //렌더링될 때마다 myChar가 #myCharacter 를 가르킴\n\n  useEffect(function () {\n    myChar = document.getElementById(\"myCharacter\");\n    console.log(\"myChar rendered\"); //랜더링 종료 시 인터벌 종료\n\n    return function () {\n      clearInterval(inputCheck);\n      console.log(\"pX : \", pX.current);\n      console.log(\"pY : \", pY.current);\n      dispatch(SavePosX(pX.current));\n      dispatch(SavePosY(pY.current));\n      console.log(\"render returned\");\n    };\n  }); //게임 입장 시 입장 정보를 송신\n\n  useEffect(function () {}, []); //부드러운 움직임을 위한 변수 선언\n  //일정 초마다 키 입력 확인\n\n  var inputCheck = setInterval(function () {\n    if (keyPress[87]) pY.current -= speed;\n    if (keyPress[83]) pY.current += speed; // down - s\n\n    if (keyPress[65]) pX.current -= speed; // left - a\n\n    if (keyPress[68]) pX.current += speed; //테이블 충돌 감지\n\n    if (pX.current < table.tbLeft + table.width && pX.current + charSize > table.tbLeft && pY.current < table.tbTop + table.height && charSize + pY.current > table.tbTop) {\n      if (keyPress[87]) pY.current += speed;\n      if (keyPress[83]) pY.current -= speed; // down - s\n\n      if (keyPress[65]) pX.current += speed; // left - a\n\n      if (keyPress[68]) pX.current -= speed;\n    }\n\n    seatNum = -1; //의자 충돌 감지\n\n    for (var i = 0; i < 8; i++) {\n      if (chairs[i][1] < pX.current + charSize && chairs[i][1] + chairSize > pX.current && chairs[i][0] < charSize + pY.current && chairs[i][0] + chairSize > pY.current) {\n        seatNum = i; //자리에 앉았을 시 소켓으로 준비 완료 전송\n\n        if (seatNum != seatChange) {\n          seatNothing = true;\n          document.getElementById(\"inputTag\").value = \"준비 완료\";\n          console.log(\"SeatNum: \", seatNum);\n          console.log(\"send ready\");\n          seatChange = i; //ws 통신으로 준비신호보냄\n        } //자리와 이전 자리가 같을 시\n\n      }\n    } //자리에서 벗어났을 시 소켓으로 준비 완료 해제 전송\n\n\n    if (seatNum == -1 && seatNothing == true) {\n      console.log(\"send not ready\");\n      seatCnt = 0;\n      seatNothing = false;\n    }\n\n    if (pY.current < 0) //외부 벽 충돌 감지\n      pY.current = 0;\n    if (pY.current >= mapSize - charSize) pY.current = mapSize - charSize;\n    if (pX.current < 0) pX.current = 0;\n    if (pX.current >= mapSize - charSize) pX.current = mapSize - charSize; //캐릭터 좌표 최신화\n\n    myChar.style.left = pX.current + \"px\";\n    myChar.style.top = pY.current + \"px\";\n  }, 16); //첫 렌더링될 때만 입력받는 input태그로 focus\n\n  useEffect(function () {\n    console.log(\"useEffect focus once\");\n    mapFocus.current.focus();\n  }, []); //맵 클릭 시 입력 포커싱 지정\n\n  var changeFocus = function changeFocus() {\n    mapFocus.current.focus();\n  }; //키 눌렀을 때 해당 값 true로 변환\n\n\n  var handleKeyDown = function handleKeyDown(e) {\n    keyPress[e.keyCode.toString()] = true;\n  }; //키 땠을 때 해당 값 false로 변환\n\n\n  var handleKeyUp = function handleKeyUp(e) {\n    keyPress[e.keyCode.toString()] = false;\n  }; //중간에 게임방을 나갈 때 진짜 나갈 것인지 확인 받기\n\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Value = _useState2[0],\n      setValue = _useState2[1];\n\n  useBeforeunload(function (e) {\n    if (Value !== \"\") e.preventDefault();\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"inputTag\",\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    value: \"a\" // style={{ display: \"none\" }}\n    ,\n    type: \"text\",\n    ref: mapFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    readOnly: true,\n    style: {\n      border: \"none\",\n      cursor: \"default\",\n      margin: \"0\",\n      position: \"absolute\",\n      top: 5,\n      left: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    onClick: changeFocus,\n    style: {\n      width: mapSize,\n      height: mapSize,\n      background: \"orange\",\n      position: \"relative\",\n      left: 0,\n      top: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"table\",\n    style: {\n      width: table.width,\n      height: table.height,\n      left: table.tbLeft,\n      top: table.tbTop,\n      background: \"green\",\n      position: \"absolute\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }), chairs.map(function (e, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: idx,\n      id: \"chair\" + idx,\n      style: {\n        top: e[0],\n        left: e[1],\n        height: chairSize,\n        width: chairSize,\n        background: \"blue\",\n        position: \"absolute\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myCharacter\",\n    style: {\n      margin: \"0px\",\n      width: charSize,\n      height: charSize,\n      background: \"red\",\n      position: \"absolute\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"names":["React","useRef","useEffect","useState","useSelector","useDispatch","SavePosX","selectPosX","SavePosY","selectPosY","useBeforeunload","Stompjs","axios","over","SockJS","PlayMap","stompClient","dispatch","seatNum","seatChange","seatCnt","seatNothing","mapSize","charSize","chairSize","table","tbTop","tbLeft","width","height","chairs","mapFocus","myChar","keyPress","pX","pY","speed","document","getElementById","console","log","clearInterval","inputCheck","current","setInterval","i","value","style","left","top","focus","changeFocus","handleKeyDown","e","keyCode","toString","handleKeyUp","Value","setValue","preventDefault","position","target","border","cursor","margin","background","map","idx"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/GatherRoomPageCom/PlayMap.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SavePosX, selectPosX } from \"../../redux/slice/MapPosXSlice\";\r\nimport { SavePosY, selectPosY } from \"../../redux/slice/MapPosYSlice\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\nimport Stompjs from \"stompjs\";\r\nimport axios from \"axios\";\r\n\r\n//socktjs\r\nimport { over } from \"stompjs\";\r\nimport SockJS from \"sockjs-client\";\r\n\r\n//memo : 값을 메모이\r\n//callback : 함수를 메모이\r\nexport default function PlayMap() {\r\n    var stompClient = null;\r\n    const dispatch = useDispatch();\r\n    let seatNum, seatChange, seatCnt, seatNothing;\r\n    const mapSize = 700;\r\n    const charSize = 50;\r\n    const chairSize = 20;\r\n    const table = {\r\n        tbTop: 100,\r\n        tbLeft: 200,\r\n        width: 300,\r\n        height: 300,\r\n    };\r\n    const chairs = [\r\n        [40, 300],\r\n        [40, 400],\r\n        [160, 100],\r\n        [300, 100],\r\n        [450, 300],\r\n        [450, 400],\r\n        [160, 550],\r\n        [300, 550],\r\n    ];\r\n\r\n    //맵 크기\r\n    //포커싱 지정을 위한 변수\r\n    const mapFocus = useRef();\r\n    //div태그를 아바타 객체로 지정\r\n    let myChar;\r\n\r\n    let keyPress = {},\r\n        pX = useRef(useSelector(selectPosX)),\r\n        pY = useRef(useSelector(selectPosY)),\r\n        speed = 5;\r\n\r\n    useEffect(() => {\r\n        // //웹소켓 코드 시작\r\n        // const [userData, setUserData] = useState({\r\n        //     username: \"jik\",\r\n        //     connected: false,\r\n        //     message: \"\",\r\n        // });\r\n        // const connect = () => {\r\n        //     console.log(\"function connect\");\r\n        //     let Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\r\n        //     console.log(\"let Sock: \", Sock);\r\n        //     stompClient = over(Sock);\r\n        //     console.log(\"let stompClient: \", stompClient);\r\n        //     stompClient.connect({}, onConnected, onError);\r\n        // };\r\n        // const onConnected = () => {\r\n        //     console.log(\"function onConnected\");\r\n        //     setUserData({ ...userData, connected: true });\r\n        //     stompClient.subscribe(\"/ws/pub/room/0\", onMessageReceived);\r\n        //     // stompClient.subscribe(\r\n        //     //     \"/user/\" + userData.username + \"/private\",\r\n        //     //     onPrivateMessage\r\n        //     // );\r\n        //     // userJoin();\r\n        // };\r\n        // const onError = (err) => {\r\n        //     console.log(\"function onError\");\r\n        //     console.log(err);\r\n        // };\r\n        // const onMessageReceived = (payload) => {\r\n        //     console.log(\"function onMessageReceived\");\r\n        //     var payloadData = JSON.parse(payload.body);\r\n        //     console.log(payloadData);\r\n        // };\r\n        // const handleMessage = (event) => {\r\n        //     console.log(\"function handleMessage\");\r\n        //     const { value } = event.target;\r\n        //     setUserData({ ...userData, message: value });\r\n        // };\r\n        // const sendValue = () => {\r\n        //     if (stompClient) {\r\n        //         var chatMessage = {\r\n        //             senderName: userData.username,\r\n        //             message: userData.message,\r\n        //             status: \"MESSAGE\",\r\n        //         };\r\n        //         console.log(chatMessage);\r\n        //         stompClient.send(\r\n        //             \"/app/message\",\r\n        //             {},\r\n        //             JSON.stringify(chatMessage)\r\n        //         );\r\n        //         setUserData({ ...userData, message: \"\" });\r\n        //     }\r\n        // };\r\n        // connect();\r\n        // //웹소켓 코드 끝\r\n    }, []);\r\n    //렌더링될 때마다 myChar가 #myCharacter 를 가르킴\r\n    useEffect(() => {\r\n        myChar = document.getElementById(\"myCharacter\");\r\n        console.log(\"myChar rendered\");\r\n        //랜더링 종료 시 인터벌 종료\r\n        return () => {\r\n            clearInterval(inputCheck);\r\n\r\n            console.log(\"pX : \", pX.current);\r\n            console.log(\"pY : \", pY.current);\r\n            dispatch(SavePosX(pX.current));\r\n            dispatch(SavePosY(pY.current));\r\n            console.log(\"render returned\");\r\n        };\r\n    });\r\n\r\n    //게임 입장 시 입장 정보를 송신\r\n    useEffect(() => {}, []);\r\n    //부드러운 움직임을 위한 변수 선언\r\n    //일정 초마다 키 입력 확인\r\n    const inputCheck = setInterval(() => {\r\n        if (keyPress[87]) pY.current -= speed;\r\n        if (keyPress[83]) pY.current += speed; // down - s\r\n        if (keyPress[65]) pX.current -= speed; // left - a\r\n        if (keyPress[68]) pX.current += speed;\r\n\r\n        //테이블 충돌 감지\r\n        if (\r\n            pX.current < table.tbLeft + table.width &&\r\n            pX.current + charSize > table.tbLeft &&\r\n            pY.current < table.tbTop + table.height &&\r\n            charSize + pY.current > table.tbTop\r\n        ) {\r\n            if (keyPress[87]) pY.current += speed;\r\n            if (keyPress[83]) pY.current -= speed; // down - s\r\n            if (keyPress[65]) pX.current += speed; // left - a\r\n            if (keyPress[68]) pX.current -= speed;\r\n        }\r\n\r\n        seatNum = -1;\r\n        //의자 충돌 감지\r\n        for (let i = 0; i < 8; i++) {\r\n            if (\r\n                chairs[i][1] < pX.current + charSize &&\r\n                chairs[i][1] + chairSize > pX.current &&\r\n                chairs[i][0] < charSize + pY.current &&\r\n                chairs[i][0] + chairSize > pY.current\r\n            ) {\r\n                seatNum = i;\r\n                //자리에 앉았을 시 소켓으로 준비 완료 전송\r\n                if (seatNum != seatChange) {\r\n                    seatNothing = true;\r\n                    document.getElementById(\"inputTag\").value = \"준비 완료\";\r\n                    console.log(\"SeatNum: \", seatNum);\r\n                    console.log(\"send ready\");\r\n                    seatChange = i;\r\n\r\n                    //ws 통신으로 준비신호보냄\r\n                }\r\n                //자리와 이전 자리가 같을 시\r\n            }\r\n        }\r\n        //자리에서 벗어났을 시 소켓으로 준비 완료 해제 전송\r\n        if (seatNum == -1 && seatNothing == true) {\r\n            console.log(\"send not ready\");\r\n            seatCnt = 0;\r\n            seatNothing = false;\r\n        }\r\n        if (pY.current < 0)\r\n            //외부 벽 충돌 감지\r\n            pY.current = 0;\r\n        if (pY.current >= mapSize - charSize) pY.current = mapSize - charSize;\r\n        if (pX.current < 0) pX.current = 0;\r\n        if (pX.current >= mapSize - charSize) pX.current = mapSize - charSize;\r\n\r\n        //캐릭터 좌표 최신화\r\n        myChar.style.left = pX.current + \"px\";\r\n        myChar.style.top = pY.current + \"px\";\r\n    }, 16);\r\n\r\n    //첫 렌더링될 때만 입력받는 input태그로 focus\r\n    useEffect(() => {\r\n        console.log(\"useEffect focus once\");\r\n        mapFocus.current.focus();\r\n    }, []);\r\n\r\n    //맵 클릭 시 입력 포커싱 지정\r\n    const changeFocus = () => {\r\n        mapFocus.current.focus();\r\n    };\r\n\r\n    //키 눌렀을 때 해당 값 true로 변환\r\n    const handleKeyDown = (e) => {\r\n        keyPress[e.keyCode.toString()] = true;\r\n    };\r\n    //키 땠을 때 해당 값 false로 변환\r\n    const handleKeyUp = (e) => {\r\n        keyPress[e.keyCode.toString()] = false;\r\n    };\r\n\r\n    //중간에 게임방을 나갈 때 진짜 나갈 것인지 확인 받기\r\n    const [Value, setValue] = useState(\"\");\r\n    useBeforeunload((e) => {\r\n        if (Value !== \"\") e.preventDefault();\r\n    });\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            }}\r\n        >\r\n            <input\r\n                id=\"inputTag\"\r\n                onChange={(e) => setValue(e.target.value)}\r\n                value={\"a\"}\r\n                // style={{ display: \"none\" }}\r\n                type=\"text\"\r\n                ref={mapFocus}\r\n                onKeyDown={handleKeyDown}\r\n                onKeyUp={handleKeyUp}\r\n                readOnly\r\n                style={{\r\n                    border: \"none\",\r\n                    cursor: \"default\",\r\n                    margin: \"0\",\r\n                    position: \"absolute\",\r\n                    top: 5,\r\n                    left: 5,\r\n                }}\r\n            />\r\n            <div\r\n                id=\"map\"\r\n                onClick={changeFocus}\r\n                style={{\r\n                    width: mapSize,\r\n                    height: mapSize,\r\n                    background: \"orange\",\r\n                    position: \"relative\",\r\n                    left: 0,\r\n                    top: 0,\r\n                }}\r\n            >\r\n                <div\r\n                    id=\"table\"\r\n                    style={{\r\n                        width: table.width,\r\n                        height: table.height,\r\n                        left: table.tbLeft,\r\n                        top: table.tbTop,\r\n                        background: \"green\",\r\n                        position: \"absolute\",\r\n                    }}\r\n                ></div>\r\n\r\n                {chairs.map((e, idx) => {\r\n                    return (\r\n                        <div\r\n                            key={idx}\r\n                            id={\"chair\" + idx}\r\n                            style={{\r\n                                top: e[0],\r\n                                left: e[1],\r\n                                height: chairSize,\r\n                                width: chairSize,\r\n                                background: \"blue\",\r\n                                position: \"absolute\",\r\n                            }}\r\n                        ></div>\r\n                    );\r\n                })}\r\n                <div\r\n                    id=\"myCharacter\"\r\n                    style={{\r\n                        margin: `0px`,\r\n                        width: charSize,\r\n                        height: charSize,\r\n                        background: \"red\",\r\n                        position: \"absolute\",\r\n                    }}\r\n                ></div>\r\n                {/* 다른 유저의 캐릭터 작성 */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,gCAArC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,gCAArC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CAEA;AACA;;AACA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAC9B,IAAIC,WAAW,GAAG,IAAlB;EACA,IAAMC,QAAQ,GAAGZ,WAAW,EAA5B;EACA,IAAIa,OAAJ,EAAaC,UAAb,EAAyBC,OAAzB,EAAkCC,WAAlC;EACA,IAAMC,OAAO,GAAG,GAAhB;EACA,IAAMC,QAAQ,GAAG,EAAjB;EACA,IAAMC,SAAS,GAAG,EAAlB;EACA,IAAMC,KAAK,GAAG;IACVC,KAAK,EAAE,GADG;IAEVC,MAAM,EAAE,GAFE;IAGVC,KAAK,EAAE,GAHG;IAIVC,MAAM,EAAE;EAJE,CAAd;EAMA,IAAMC,MAAM,GAAG,CACX,CAAC,EAAD,EAAK,GAAL,CADW,EAEX,CAAC,EAAD,EAAK,GAAL,CAFW,EAGX,CAAC,GAAD,EAAM,GAAN,CAHW,EAIX,CAAC,GAAD,EAAM,GAAN,CAJW,EAKX,CAAC,GAAD,EAAM,GAAN,CALW,EAMX,CAAC,GAAD,EAAM,GAAN,CANW,EAOX,CAAC,GAAD,EAAM,GAAN,CAPW,EAQX,CAAC,GAAD,EAAM,GAAN,CARW,CAAf,CAb8B,CAwB9B;EACA;;EACA,IAAMC,QAAQ,GAAG9B,MAAM,EAAvB,CA1B8B,CA2B9B;;EACA,IAAI+B,MAAJ;EAEA,IAAIC,QAAQ,GAAG,EAAf;EAAA,IACIC,EAAE,GAAGjC,MAAM,CAACG,WAAW,CAACG,UAAD,CAAZ,CADf;EAAA,IAEI4B,EAAE,GAAGlC,MAAM,CAACG,WAAW,CAACK,UAAD,CAAZ,CAFf;EAAA,IAGI2B,KAAK,GAAG,CAHZ;EAKAlC,SAAS,CAAC,YAAM,CACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACH,CAzDQ,EAyDN,EAzDM,CAAT,CAnC8B,CA6F9B;;EACAA,SAAS,CAAC,YAAM;IACZ8B,MAAM,GAAGK,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAT;IACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAFY,CAGZ;;IACA,OAAO,YAAM;MACTC,aAAa,CAACC,UAAD,CAAb;MAEAH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,EAAE,CAACS,OAAxB;MACAJ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,EAAE,CAACQ,OAAxB;MACA1B,QAAQ,CAACX,QAAQ,CAAC4B,EAAE,CAACS,OAAJ,CAAT,CAAR;MACA1B,QAAQ,CAACT,QAAQ,CAAC2B,EAAE,CAACQ,OAAJ,CAAT,CAAR;MACAJ,OAAO,CAACC,GAAR,CAAY,iBAAZ;IACH,CARD;EASH,CAbQ,CAAT,CA9F8B,CA6G9B;;EACAtC,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,EAAX,CAAT,CA9G8B,CA+G9B;EACA;;EACA,IAAMwC,UAAU,GAAGE,WAAW,CAAC,YAAM;IACjC,IAAIX,QAAQ,CAAC,EAAD,CAAZ,EAAkBE,EAAE,CAACQ,OAAH,IAAcP,KAAd;IAClB,IAAIH,QAAQ,CAAC,EAAD,CAAZ,EAAkBE,EAAE,CAACQ,OAAH,IAAcP,KAAd,CAFe,CAEM;;IACvC,IAAIH,QAAQ,CAAC,EAAD,CAAZ,EAAkBC,EAAE,CAACS,OAAH,IAAcP,KAAd,CAHe,CAGM;;IACvC,IAAIH,QAAQ,CAAC,EAAD,CAAZ,EAAkBC,EAAE,CAACS,OAAH,IAAcP,KAAd,CAJe,CAMjC;;IACA,IACIF,EAAE,CAACS,OAAH,GAAalB,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACG,KAAlC,IACAM,EAAE,CAACS,OAAH,GAAapB,QAAb,GAAwBE,KAAK,CAACE,MAD9B,IAEAQ,EAAE,CAACQ,OAAH,GAAalB,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACI,MAFjC,IAGAN,QAAQ,GAAGY,EAAE,CAACQ,OAAd,GAAwBlB,KAAK,CAACC,KAJlC,EAKE;MACE,IAAIO,QAAQ,CAAC,EAAD,CAAZ,EAAkBE,EAAE,CAACQ,OAAH,IAAcP,KAAd;MAClB,IAAIH,QAAQ,CAAC,EAAD,CAAZ,EAAkBE,EAAE,CAACQ,OAAH,IAAcP,KAAd,CAFpB,CAEyC;;MACvC,IAAIH,QAAQ,CAAC,EAAD,CAAZ,EAAkBC,EAAE,CAACS,OAAH,IAAcP,KAAd,CAHpB,CAGyC;;MACvC,IAAIH,QAAQ,CAAC,EAAD,CAAZ,EAAkBC,EAAE,CAACS,OAAH,IAAcP,KAAd;IACrB;;IAEDlB,OAAO,GAAG,CAAC,CAAX,CAnBiC,CAoBjC;;IACA,KAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MACxB,IACIf,MAAM,CAACe,CAAD,CAAN,CAAU,CAAV,IAAeX,EAAE,CAACS,OAAH,GAAapB,QAA5B,IACAO,MAAM,CAACe,CAAD,CAAN,CAAU,CAAV,IAAerB,SAAf,GAA2BU,EAAE,CAACS,OAD9B,IAEAb,MAAM,CAACe,CAAD,CAAN,CAAU,CAAV,IAAetB,QAAQ,GAAGY,EAAE,CAACQ,OAF7B,IAGAb,MAAM,CAACe,CAAD,CAAN,CAAU,CAAV,IAAerB,SAAf,GAA2BW,EAAE,CAACQ,OAJlC,EAKE;QACEzB,OAAO,GAAG2B,CAAV,CADF,CAEE;;QACA,IAAI3B,OAAO,IAAIC,UAAf,EAA2B;UACvBE,WAAW,GAAG,IAAd;UACAgB,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCQ,KAApC,GAA4C,OAA5C;UACAP,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBtB,OAAzB;UACAqB,OAAO,CAACC,GAAR,CAAY,YAAZ;UACArB,UAAU,GAAG0B,CAAb,CALuB,CAOvB;QACH,CAXH,CAYE;;MACH;IACJ,CAzCgC,CA0CjC;;;IACA,IAAI3B,OAAO,IAAI,CAAC,CAAZ,IAAiBG,WAAW,IAAI,IAApC,EAA0C;MACtCkB,OAAO,CAACC,GAAR,CAAY,gBAAZ;MACApB,OAAO,GAAG,CAAV;MACAC,WAAW,GAAG,KAAd;IACH;;IACD,IAAIc,EAAE,CAACQ,OAAH,GAAa,CAAjB,EACI;MACAR,EAAE,CAACQ,OAAH,GAAa,CAAb;IACJ,IAAIR,EAAE,CAACQ,OAAH,IAAcrB,OAAO,GAAGC,QAA5B,EAAsCY,EAAE,CAACQ,OAAH,GAAarB,OAAO,GAAGC,QAAvB;IACtC,IAAIW,EAAE,CAACS,OAAH,GAAa,CAAjB,EAAoBT,EAAE,CAACS,OAAH,GAAa,CAAb;IACpB,IAAIT,EAAE,CAACS,OAAH,IAAcrB,OAAO,GAAGC,QAA5B,EAAsCW,EAAE,CAACS,OAAH,GAAarB,OAAO,GAAGC,QAAvB,CArDL,CAuDjC;;IACAS,MAAM,CAACe,KAAP,CAAaC,IAAb,GAAoBd,EAAE,CAACS,OAAH,GAAa,IAAjC;IACAX,MAAM,CAACe,KAAP,CAAaE,GAAb,GAAmBd,EAAE,CAACQ,OAAH,GAAa,IAAhC;EACH,CA1D6B,EA0D3B,EA1D2B,CAA9B,CAjH8B,CA6K9B;;EACAzC,SAAS,CAAC,YAAM;IACZqC,OAAO,CAACC,GAAR,CAAY,sBAAZ;IACAT,QAAQ,CAACY,OAAT,CAAiBO,KAAjB;EACH,CAHQ,EAGN,EAHM,CAAT,CA9K8B,CAmL9B;;EACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;IACtBpB,QAAQ,CAACY,OAAT,CAAiBO,KAAjB;EACH,CAFD,CApL8B,CAwL9B;;;EACA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;IACzBpB,QAAQ,CAACoB,CAAC,CAACC,OAAF,CAAUC,QAAV,EAAD,CAAR,GAAiC,IAAjC;EACH,CAFD,CAzL8B,CA4L9B;;;EACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACH,CAAD,EAAO;IACvBpB,QAAQ,CAACoB,CAAC,CAACC,OAAF,CAAUC,QAAV,EAAD,CAAR,GAAiC,KAAjC;EACH,CAFD,CA7L8B,CAiM9B;;;EAjM8B,gBAkMJpD,QAAQ,CAAC,EAAD,CAlMJ;EAAA;EAAA,IAkMvBsD,KAlMuB;EAAA,IAkMhBC,QAlMgB;;EAmM9BhD,eAAe,CAAC,UAAC2C,CAAD,EAAO;IACnB,IAAII,KAAK,KAAK,EAAd,EAAkBJ,CAAC,CAACM,cAAF;EACrB,CAFc,CAAf;EAIA,oBACI;IACI,KAAK,EAAE;MACHC,QAAQ,EAAE,UADP;MAEHhC,KAAK,EAAE,MAFJ;MAGHC,MAAM,EAAE;IAHL,CADX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAOI;IACI,EAAE,EAAC,UADP;IAEI,QAAQ,EAAE,kBAACwB,CAAD;MAAA,OAAOK,QAAQ,CAACL,CAAC,CAACQ,MAAF,CAASf,KAAV,CAAf;IAAA,CAFd;IAGI,KAAK,EAAE,GAHX,CAII;IAJJ;IAKI,IAAI,EAAC,MALT;IAMI,GAAG,EAAEf,QANT;IAOI,SAAS,EAAEqB,aAPf;IAQI,OAAO,EAAEI,WARb;IASI,QAAQ,MATZ;IAUI,KAAK,EAAE;MACHM,MAAM,EAAE,MADL;MAEHC,MAAM,EAAE,SAFL;MAGHC,MAAM,EAAE,GAHL;MAIHJ,QAAQ,EAAE,UAJP;MAKHX,GAAG,EAAE,CALF;MAMHD,IAAI,EAAE;IANH,CAVX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPJ,eA0BI;IACI,EAAE,EAAC,KADP;IAEI,OAAO,EAAEG,WAFb;IAGI,KAAK,EAAE;MACHvB,KAAK,EAAEN,OADJ;MAEHO,MAAM,EAAEP,OAFL;MAGH2C,UAAU,EAAE,QAHT;MAIHL,QAAQ,EAAE,UAJP;MAKHZ,IAAI,EAAE,CALH;MAMHC,GAAG,EAAE;IANF,CAHX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAYI;IACI,EAAE,EAAC,OADP;IAEI,KAAK,EAAE;MACHrB,KAAK,EAAEH,KAAK,CAACG,KADV;MAEHC,MAAM,EAAEJ,KAAK,CAACI,MAFX;MAGHmB,IAAI,EAAEvB,KAAK,CAACE,MAHT;MAIHsB,GAAG,EAAExB,KAAK,CAACC,KAJR;MAKHuC,UAAU,EAAE,OALT;MAMHL,QAAQ,EAAE;IANP,CAFX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAZJ,EAwBK9B,MAAM,CAACoC,GAAP,CAAW,UAACb,CAAD,EAAIc,GAAJ,EAAY;IACpB,oBACI;MACI,GAAG,EAAEA,GADT;MAEI,EAAE,EAAE,UAAUA,GAFlB;MAGI,KAAK,EAAE;QACHlB,GAAG,EAAEI,CAAC,CAAC,CAAD,CADH;QAEHL,IAAI,EAAEK,CAAC,CAAC,CAAD,CAFJ;QAGHxB,MAAM,EAAEL,SAHL;QAIHI,KAAK,EAAEJ,SAJJ;QAKHyC,UAAU,EAAE,MALT;QAMHL,QAAQ,EAAE;MANP,CAHX;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ;EAcH,CAfA,CAxBL,eAwCI;IACI,EAAE,EAAC,aADP;IAEI,KAAK,EAAE;MACHI,MAAM,OADH;MAEHpC,KAAK,EAAEL,QAFJ;MAGHM,MAAM,EAAEN,QAHL;MAIH0C,UAAU,EAAE,KAJT;MAKHL,QAAQ,EAAE;IALP,CAFX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAxCJ,CA1BJ,CADJ;AAiFH"},"metadata":{},"sourceType":"module"}