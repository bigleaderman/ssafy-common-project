{"ast":null,"code":"var _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\pages\\\\GatherRoomPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\"; //자체 컴포넌트\n\nimport MainBar from \"../components/GatherRoomPageCom/MainBar\";\nimport PlayMap from \"../components/GatherRoomPageCom/PlayMap\";\nimport SideBar from \"../components/GatherRoomPageCom/SideBar\";\nimport AllCam from \"../components/GameRoomPageCom/AllCam\";\nimport NaviBar2 from \"../components/GatherRoomPageCom/NaviBar2\";\nimport { selectUser } from \"../redux/slice/UserSlice\";\nimport { setClient } from \"../redux/slice/WsSlice\"; //mui 컴포넌트\n\nimport Grid from \"@mui/material/Grid\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\"; //socktjs\n\nimport SockJS from \"sockjs-client\";\nimport { setInterval } from \"stompjs\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar StompJs = require(\"@stomp/stompjs\");\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4\n};\n\nfunction useInterval(callback, delay) {\n  _s();\n\n  const savedCallback = useRef(); // Remember the latest callback.\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nconst GatherRoom = () => {\n  _s2();\n\n  console.log(\"GatherRoom 리랜더링 확인\");\n  const debugTime = 6;\n  const NaviBarComRef = useRef();\n  const sideComponentRef = useRef();\n  const token = useSelector(state => state.user.accessToken);\n  const myNickName = useSelector(selectUser).nickname;\n  const roomNum = useSelector(state => state.roomNum);\n  const subAddr = `/sub/room/${roomNum}`;\n  const pubAddr = `/pub/room/${roomNum}`;\n  const pubGameAddr = `${pubAddr}/game`;\n  const [currentGameState, setCurrentGameState] = useState(\"게임 준비 중...\");\n  const [IsGameStart, setIsGameStart] = useState(false);\n  const [myRole, setMyRole] = useState(\"\");\n  const [stateTimer, setStateTimer] = useState(0);\n  const timer = useRef();\n  const [roleList, setRoleList] = useState([]);\n  const [turn, setTurn] = useState(false);\n  const [dead, setDead] = useState([]);\n  const client = useMemo(() => new StompJs.Client({\n    //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\n    // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\n    connectHeaders: {},\n    // debug: function (str) {\n    //   console.log(str);\n    // },\n    reconnectDelay: 5000,\n    heartbeatIncoming: 4000,\n    heartbeatOutgoing: 4000\n  }), []);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  client.webSocketFactory = () => {\n    return new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\n  }; // const client = new StompJs.Client({\n  //   //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\n  //   // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\n  //   connectHeaders: {},\n  //   debug: function (str) {\n  //     console.log(str);\n  //   },\n  //   reconnectDelay: 5000,\n  //   heartbeatIncoming: 4000,\n  //   heartbeatOutgoing: 4000,\n  // });\n\n\n  const finishGame = () => {\n    handleClose();\n    setIsGameStart(false);\n  };\n\n  const onMessageReceived = payload => {\n    console.log(payload);\n    let parsedData = \"\";\n\n    try {\n      parsedData = JSON.parse(payload.body);\n    } catch (error) {\n      console.log(payload.body);\n      return;\n    }\n\n    console.log(\"game Process data: \");\n    console.log(parsedData); //게임 시작 신호 수신\n\n    if (parsedData.type === \"session-created\") {\n      console.log(\"↑세션 생성 완료\");\n      setCurrentGameState(\"세션 생성 완료\"); //게더맵 => 캠 화면 변경\n\n      setIsGameStart(true);\n    } //게임 시작 신호 수신\n    else if (parsedData.type === \"game-start\") {\n      setDead([]);\n      setCurrentGameState(\"↑게임 시작\"); //main bar에 낮 시작 문구 작성\n    } //본인 역할 확인\n    else if (parsedData.type === \"role\") {\n      console.log(\"↑본인 역할 확인\"); // setStateTimer(5);\n\n      setStateTimer(debugTime);\n      setMyRole(parsedData.data.role); //5초 뒤 역할 확인 소켓 전홍\n\n      setTimeout(() => {\n        // clearInterval(intTimer1);\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"role\",\n            data: {\n              role: myRole\n            }\n          }),\n          skipContentLengthHeader: true\n        });\n      }, debugTime * 1000);\n      setCurrentGameState(\"자신의 역할 확인 중\");\n    } //낮 시간 시작\n    else if (parsedData.type === \"talk-start\") {\n      console.log(\"↑낮 시작\");\n      setCurrentGameState(\"낮이 시작되었습니다.\"); // setStateTimer(parsedData.data.time);\n\n      setStateTimer(debugTime);\n      setTimeout(() => {\n        // clearInterval(intTimer);\n        //낮 시간 종료 신호 전송\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"talk-end\"\n          }),\n          skipContentLengthHeader: true\n        });\n      }, debugTime * 1000);\n    } //\n    else if (parsedData.type === \"vote-ready\") {\n      console.log(\"↑투표 받는 중\"); //  let debugTime = parsedData.data.time;\n      // setStateTimer(parsedData.data.time);\n\n      setStateTimer(11);\n      setCurrentGameState(\"처형할 인물에 투표하십시오.\");\n      setTurn(\"vote\"); //투표 종료 신호 전송\n\n      setTimeout(() => {\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"vote-result\"\n          }),\n          skipContentLengthHeader: true\n        });\n      }, 11 * 1000);\n    } //투표 종료, 투표 결과 공개\n    else if (parsedData.type === \"vote-result\") {\n      setTurn(\"\");\n      setDead(currentDead => {\n        var _parsedData$data;\n\n        return [...currentDead, (_parsedData$data = parsedData.data) === null || _parsedData$data === void 0 ? void 0 : _parsedData$data.dead];\n      });\n      setStateTimer(debugTime);\n      setCurrentGameState(\"투표가 종료되었습니다.\");\n      console.log(parsedData.data); //아무도 투표하지 않았다면\n\n      if (parsedData.data === undefined) {\n        console.log(\"아무도 투표하지 않았습니다.\");\n      } else {// console.log(\"죽은 사람 목록: \", parsedData.data.list);\n        // console.log(\"죽은 사람: \", parsedData.data.dead);\n        // console.log(\"죽은 사람 직업: \", parsedData.data.role);\n      }\n\n      setTimeout(() => {\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"vote-check\"\n          }),\n          skipContentLengthHeader: true\n        });\n      }, debugTime * 1000);\n    } //밤 시작\n    else if (parsedData.type === \"night\") {\n      console.log(\"↑밤 시작\");\n      setCurrentGameState(\"밤이 시작되었습니다.\"); // setStateTimer(parsedData.data.time);\n\n      setStateTimer(debugTime);\n      setTurn(\"night\");\n      setStateTimer(11);\n      setTimeout(() => {\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"night-result\"\n          }),\n          skipContentLengthHeader: true\n        });\n      }, 11 * 1000);\n    } // 경찰 활동 결과 데이터\n    else if (parsedData.type === \"act-result\") {\n      console.log(parsedData.data.target + \"은 \" + parsedData.data.role + \"입니다\");\n    } //밤 투표 결과 데이터\n    else if (parsedData.type === \"night-result\") {\n      console.log(\"밤 투표 결과\");\n      setDead(currentDead => [...currentDead, parsedData.data.dead]);\n      setStateTimer(debugTime);\n      setTurn(\"\");\n      console.log(\"밤 투표 결과 데이터: \"); // log\n      // if(parsedData.data.dead === ){\n      //   console.log();\n      // }\n\n      setTimeout(() => {\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"night-check\"\n          }),\n          skipContentLengthHeader: true\n        });\n        client.publish({\n          destination: pubGameAddr,\n          headers: {\n            token: token,\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"night-act\",\n            data: {\n              nickname: \"닉네임\",\n              role: \"자신의 역할\",\n              target: \"목표 닉네임\"\n            }\n          }),\n          skipContentLengthHeader: true\n        });\n      }, debugTime * 1000);\n\n      if (parsedData.data.dead.length !== 0) {\n        setCurrentGameState(`날이 밝았습니다. ${parsedData.data.dead[0]}이 마피아에 의해 살해당했습니다.`);\n      } else {\n        setCurrentGameState(`날이 밝았습니다. 아무도 죽지 않았습니다.`);\n      }\n    } //게임 종료 신호\n    else if (parsedData.type === \"gameover\") {\n      console.log(\"↑게임 종료\");\n      setStateTimer(0);\n      setCurrentGameState(`${parsedData.data.winner} 승리!`);\n      setRoleList(parsedData.data.roleInfo);\n      handleOpen(); //게임 종료 후 복귀\n    }\n  }; //allcam 컴포에서 상호작용 시 실행될 코드\n\n\n  const inCamHandler = res => {\n    if (res.type === \"session-connect\") {\n      client.publish({\n        destination: pubGameAddr,\n        headers: {\n          token: token,\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type: \"session-connect\"\n        }),\n        skipContentLengthHeader: true\n      });\n    }\n  };\n\n  client.onConnect = frame => {\n    // client.subscribe(subAddr, childComponentRef.current.onMessageReceived);\n    //채팅, 동일 방 접속 유저 목록 확인용\n    console.log(\"GRP onCon\");\n    client.subscribe(subAddr, NaviBarComRef.current.isHostMsgRsv);\n    client.subscribe(subAddr, sideComponentRef.current.onMessageReceived); //게임 관련 소켓 전송\n\n    client.subscribe(`${subAddr}/game`, onMessageReceived); //직업 전용 메세지 소켓 수신\n\n    client.subscribe(`${subAddr}/game/${myNickName}`, onMessageReceived);\n  };\n\n  client.activate();\n  useEffect(() => {\n    //소켓 연결 코드는 한번만 랜더링\n    // dispatch(setClient(client));\n    let unloadEventLeave = window.addEventListener(\"unload\", () => {\n      client.publish({\n        destination: pubAddr,\n        headers: {\n          token: token,\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          header: {\n            type: \"leave\"\n          },\n          data: {\n            nickname: myNickName\n          }\n        }),\n        skipContentLengthHeader: true\n      });\n    });\n    return () => {\n      window.removeEventListener(\"unload\", unloadEventLeave);\n    };\n  }, []);\n\n  const MafList = () => {\n    return roleList.filter(user => user.role === \"mafia\").map(data => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: data.nickname\n      }, data.nickname, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 16\n      }, this);\n    });\n  };\n\n  const handleCloseBtn = () => {\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      height: \"100vh\",\n      display: \"flex\",\n      alignItems: \"center\",\n      minWidth: \"1500px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          sx: {\n            marginTop: \"15px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              maxHeight: \"120px\",\n              minHeight: \"120px\",\n              backgroundColor: \"rgba(30,30,30,0.95)\"\n            },\n            children: /*#__PURE__*/_jsxDEV(MainBar, {\n              currentGameState: currentGameState,\n              myRole: myRole,\n              timer: timer,\n              stateTimer: stateTimer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          sx: {\n            marginTop: \"25px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              minHeight: \"650px\",\n              maxHeight: \"650px\"\n            },\n            children: IsGameStart ? /*#__PURE__*/_jsxDEV(AllCam, {\n              inCamHandler: inCamHandler,\n              setCurrentGameState: setCurrentGameState,\n              turn: turn,\n              role: myRole,\n              client: client,\n              dead: dead\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(PlayMap, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              minHeight: \"120px\",\n              backgroundColor: \"rgba(30,30,30,0.95)\"\n            },\n            children: /*#__PURE__*/_jsxDEV(NaviBar2, {\n              ref: NaviBarComRef,\n              IsGameStart: IsGameStart,\n              setIsGameStart: setIsGameStart,\n              client: client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          sx: {\n            marginTop: \"25px\",\n            height: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              minHeight: \"650px\",\n              maxHeight: \"650px\",\n              backgroundColor: \"rgba(30,30,30,0.9)\"\n            },\n            children: /*#__PURE__*/_jsxDEV(SideBar, {\n              ref: sideComponentRef,\n              client: client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: finishGame,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: currentGameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: [\"\\uB9C8\\uD53C\\uC544\\uB294\", /*#__PURE__*/_jsxDEV(MafList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), \"\\uC785\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: finishGame,\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\uC790\\uC138\\uD788\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: finishGame,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: currentGameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: [\"\\uB9C8\\uD53C\\uC544\\uB294\", /*#__PURE__*/_jsxDEV(MafList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), \"\\uC785\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: finishGame,\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\uC790\\uC138\\uD788\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(GatherRoom, \"XW0a0blqtDPn/c2HSMEY0ZgTsOA=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = GatherRoom;\nexport default GatherRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"GatherRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","useSelector","useDispatch","MainBar","PlayMap","SideBar","AllCam","NaviBar2","selectUser","setClient","Grid","Container","Paper","Box","Button","Typography","Modal","SockJS","setInterval","Navigate","StompJs","require","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","useInterval","callback","delay","savedCallback","current","tick","id","clearInterval","GatherRoom","console","log","debugTime","NaviBarComRef","sideComponentRef","token","state","user","accessToken","myNickName","nickname","roomNum","subAddr","pubAddr","pubGameAddr","currentGameState","setCurrentGameState","IsGameStart","setIsGameStart","myRole","setMyRole","stateTimer","setStateTimer","timer","roleList","setRoleList","turn","setTurn","dead","setDead","client","Client","connectHeaders","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","open","setOpen","handleOpen","handleClose","webSocketFactory","finishGame","onMessageReceived","payload","parsedData","JSON","parse","body","error","type","data","role","setTimeout","publish","destination","headers","stringify","skipContentLengthHeader","currentDead","undefined","target","length","winner","roleInfo","inCamHandler","res","onConnect","frame","subscribe","isHostMsgRsv","activate","unloadEventLeave","window","addEventListener","header","removeEventListener","MafList","filter","map","handleCloseBtn","height","display","alignItems","minWidth","marginTop","maxHeight","minHeight","backgroundColor","mt"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/pages/GatherRoomPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n//자체 컴포넌트\r\nimport MainBar from \"../components/GatherRoomPageCom/MainBar\";\r\nimport PlayMap from \"../components/GatherRoomPageCom/PlayMap\";\r\nimport SideBar from \"../components/GatherRoomPageCom/SideBar\";\r\nimport AllCam from \"../components/GameRoomPageCom/AllCam\";\r\nimport NaviBar2 from \"../components/GatherRoomPageCom/NaviBar2\";\r\nimport { selectUser } from \"../redux/slice/UserSlice\";\r\nimport { setClient } from \"../redux/slice/WsSlice\";\r\n\r\n//mui 컴포넌트\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\n//socktjs\r\nimport SockJS from \"sockjs-client\";\r\nimport { setInterval } from \"stompjs\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nvar StompJs = require(\"@stomp/stompjs\");\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nconst GatherRoom = () => {\r\n  console.log(\"GatherRoom 리랜더링 확인\");\r\n  const debugTime = 6;\r\n  const NaviBarComRef = useRef();\r\n  const sideComponentRef = useRef();\r\n  const token = useSelector((state) => state.user.accessToken);\r\n  const myNickName = useSelector(selectUser).nickname;\r\n  const roomNum = useSelector((state) => state.roomNum);\r\n  const subAddr = `/sub/room/${roomNum}`;\r\n  const pubAddr = `/pub/room/${roomNum}`;\r\n  const pubGameAddr = `${pubAddr}/game`;\r\n  const [currentGameState, setCurrentGameState] = useState(\"게임 준비 중...\");\r\n  const [IsGameStart, setIsGameStart] = useState(false);\r\n  const [myRole, setMyRole] = useState(\"\");\r\n  const [stateTimer, setStateTimer] = useState(0);\r\n  const timer = useRef();\r\n  const [roleList, setRoleList] = useState([]);\r\n  const [turn, setTurn] = useState(false);\r\n  const [dead, setDead] = useState([]);\r\n  const client = useMemo(\r\n    () =>\r\n      new StompJs.Client({\r\n        //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\r\n        // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\r\n        connectHeaders: {},\r\n        // debug: function (str) {\r\n        //   console.log(str);\r\n        // },\r\n        reconnectDelay: 5000,\r\n        heartbeatIncoming: 4000,\r\n        heartbeatOutgoing: 4000,\r\n      }),\r\n    []\r\n  );\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  client.webSocketFactory = () => {\r\n    return new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\r\n  };\r\n  // const client = new StompJs.Client({\r\n  //   //websocket 주소만 입력 가능 * ws://, wss:// 로 시작\r\n  //   // brokerURL: \"https://i7d106.p.ssafy.io:8080/ws\",\r\n  //   connectHeaders: {},\r\n  //   debug: function (str) {\r\n  //     console.log(str);\r\n  //   },\r\n  //   reconnectDelay: 5000,\r\n  //   heartbeatIncoming: 4000,\r\n  //   heartbeatOutgoing: 4000,\r\n  // });\r\n\r\n  const finishGame = () => {\r\n    handleClose();\r\n    setIsGameStart(false);\r\n  };\r\n\r\n  const onMessageReceived = (payload) => {\r\n    console.log(payload);\r\n    let parsedData = \"\";\r\n    try {\r\n      parsedData = JSON.parse(payload.body);\r\n    } catch (error) {\r\n      console.log(payload.body);\r\n      return;\r\n    }\r\n\r\n    console.log(\"game Process data: \");\r\n    console.log(parsedData);\r\n\r\n    //게임 시작 신호 수신\r\n    if (parsedData.type === \"session-created\") {\r\n      console.log(\"↑세션 생성 완료\");\r\n      setCurrentGameState(\"세션 생성 완료\");\r\n      //게더맵 => 캠 화면 변경\r\n      setIsGameStart(true);\r\n    }\r\n    //게임 시작 신호 수신\r\n    else if (parsedData.type === \"game-start\") {\r\n      setDead([]);\r\n      setCurrentGameState(\"↑게임 시작\");\r\n      //main bar에 낮 시작 문구 작성\r\n    }\r\n    //본인 역할 확인\r\n    else if (parsedData.type === \"role\") {\r\n      console.log(\"↑본인 역할 확인\");\r\n      // setStateTimer(5);\r\n      setStateTimer(debugTime);\r\n      setMyRole(parsedData.data.role);\r\n\r\n      //5초 뒤 역할 확인 소켓 전홍\r\n      setTimeout(() => {\r\n        // clearInterval(intTimer1);\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"role\",\r\n            data: {\r\n              role: myRole,\r\n            },\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, debugTime * 1000);\r\n      setCurrentGameState(\"자신의 역할 확인 중\");\r\n    }\r\n    //낮 시간 시작\r\n    else if (parsedData.type === \"talk-start\") {\r\n      console.log(\"↑낮 시작\");\r\n      setCurrentGameState(\"낮이 시작되었습니다.\");\r\n      // setStateTimer(parsedData.data.time);\r\n      setStateTimer(debugTime);\r\n\r\n      setTimeout(() => {\r\n        // clearInterval(intTimer);\r\n        //낮 시간 종료 신호 전송\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"talk-end\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, debugTime * 1000);\r\n    }\r\n    //\r\n    else if (parsedData.type === \"vote-ready\") {\r\n      console.log(\"↑투표 받는 중\");\r\n      //  let debugTime = parsedData.data.time;\r\n      // setStateTimer(parsedData.data.time);\r\n      setStateTimer(11);\r\n      setCurrentGameState(\"처형할 인물에 투표하십시오.\");\r\n      setTurn(\"vote\");\r\n      //투표 종료 신호 전송\r\n      setTimeout(() => {\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"vote-result\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, 11 * 1000);\r\n    }\r\n    //투표 종료, 투표 결과 공개\r\n    else if (parsedData.type === \"vote-result\") {\r\n      setTurn(\"\");\r\n      setDead((currentDead) => [...currentDead, parsedData.data?.dead]);\r\n      setStateTimer(debugTime);\r\n      setCurrentGameState(\"투표가 종료되었습니다.\");\r\n      console.log(parsedData.data);\r\n      //아무도 투표하지 않았다면\r\n      if (parsedData.data === undefined) {\r\n        console.log(\"아무도 투표하지 않았습니다.\");\r\n      } else {\r\n        // console.log(\"죽은 사람 목록: \", parsedData.data.list);\r\n        // console.log(\"죽은 사람: \", parsedData.data.dead);\r\n        // console.log(\"죽은 사람 직업: \", parsedData.data.role);\r\n      }\r\n\r\n      setTimeout(() => {\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"vote-check\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, debugTime * 1000);\r\n    }\r\n    //밤 시작\r\n    else if (parsedData.type === \"night\") {\r\n      console.log(\"↑밤 시작\");\r\n      setCurrentGameState(\"밤이 시작되었습니다.\");\r\n      // setStateTimer(parsedData.data.time);\r\n      setStateTimer(debugTime);\r\n      setTurn(\"night\");\r\n      setStateTimer(11);\r\n      setTimeout(() => {\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"night-result\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, 11 * 1000);\r\n    }\r\n    // 경찰 활동 결과 데이터\r\n    else if (parsedData.type === \"act-result\") {\r\n      console.log(parsedData.data.target + \"은 \" + parsedData.data.role + \"입니다\");\r\n    }\r\n    //밤 투표 결과 데이터\r\n    else if (parsedData.type === \"night-result\") {\r\n      console.log(\"밤 투표 결과\");\r\n      setDead((currentDead) => [...currentDead, parsedData.data.dead]);\r\n      setStateTimer(debugTime);\r\n      setTurn(\"\");\r\n      console.log(\"밤 투표 결과 데이터: \");\r\n      // log\r\n      // if(parsedData.data.dead === ){\r\n      //   console.log();\r\n      // }\r\n\r\n      setTimeout(() => {\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"night-check\",\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n        client.publish({\r\n          destination: pubGameAddr,\r\n          headers: { token: token, \"content-type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            type: \"night-act\",\r\n            data: {\r\n              nickname: \"닉네임\",\r\n              role: \"자신의 역할\",\r\n              target: \"목표 닉네임\",\r\n            },\r\n          }),\r\n          skipContentLengthHeader: true,\r\n        });\r\n      }, debugTime * 1000);\r\n\r\n      if (parsedData.data.dead.length !== 0) {\r\n        setCurrentGameState(\r\n          `날이 밝았습니다. ${parsedData.data.dead[0]}이 마피아에 의해 살해당했습니다.`\r\n        );\r\n      } else {\r\n        setCurrentGameState(`날이 밝았습니다. 아무도 죽지 않았습니다.`);\r\n      }\r\n    }\r\n    //게임 종료 신호\r\n    else if (parsedData.type === \"gameover\") {\r\n      console.log(\"↑게임 종료\");\r\n      setStateTimer(0);\r\n      setCurrentGameState(`${parsedData.data.winner} 승리!`);\r\n      setRoleList(parsedData.data.roleInfo);\r\n      handleOpen();\r\n      //게임 종료 후 복귀\r\n    }\r\n  };\r\n\r\n  //allcam 컴포에서 상호작용 시 실행될 코드\r\n  const inCamHandler = (res) => {\r\n    if (res.type === \"session-connect\") {\r\n      client.publish({\r\n        destination: pubGameAddr,\r\n        headers: { token: token, \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          type: \"session-connect\",\r\n        }),\r\n        skipContentLengthHeader: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  client.onConnect = (frame) => {\r\n    // client.subscribe(subAddr, childComponentRef.current.onMessageReceived);\r\n    //채팅, 동일 방 접속 유저 목록 확인용\r\n    console.log(\"GRP onCon\");\r\n    client.subscribe(subAddr, NaviBarComRef.current.isHostMsgRsv);\r\n    client.subscribe(subAddr, sideComponentRef.current.onMessageReceived);\r\n    //게임 관련 소켓 전송\r\n    client.subscribe(`${subAddr}/game`, onMessageReceived);\r\n    //직업 전용 메세지 소켓 수신\r\n    client.subscribe(`${subAddr}/game/${myNickName}`, onMessageReceived);\r\n  };\r\n  client.activate();\r\n  useEffect(() => {\r\n    //소켓 연결 코드는 한번만 랜더링\r\n\r\n    // dispatch(setClient(client));\r\n    let unloadEventLeave = window.addEventListener(\"unload\", () => {\r\n      client.publish({\r\n        destination: pubAddr,\r\n        headers: { token: token, \"content-type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          header: {\r\n            type: \"leave\",\r\n          },\r\n          data: {\r\n            nickname: myNickName,\r\n          },\r\n        }),\r\n        skipContentLengthHeader: true,\r\n      });\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"unload\", unloadEventLeave);\r\n    };\r\n  }, []);\r\n  const MafList = () => {\r\n    return roleList\r\n      .filter((user) => user.role === \"mafia\")\r\n      .map((data) => {\r\n        return <span key={data.nickname}>{data.nickname}</span>;\r\n      });\r\n  };\r\n  const handleCloseBtn = () => {\r\n    handleClose();\r\n  };\r\n  return (\r\n    <Container sx={{ height: \"100vh\", display: \"flex\", alignItems: \"center\", minWidth: \"1500px\" }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={9}>\r\n          <Grid sx={{ marginTop: \"15px\" }}>\r\n            <Paper\r\n              elevation={3}\r\n              sx={{\r\n                maxHeight: \"120px\",\r\n                minHeight: \"120px\",\r\n                backgroundColor: \"rgba(30,30,30,0.95)\",\r\n              }}\r\n            >\r\n              {/* 좌상 */}\r\n              <MainBar\r\n                currentGameState={currentGameState}\r\n                myRole={myRole}\r\n                timer={timer}\r\n                stateTimer={stateTimer}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid sx={{ marginTop: \"25px\" }}>\r\n            {/* 좌하 */}\r\n            <Paper elevation={3} sx={{ minHeight: \"650px\", maxHeight: \"650px\" }}>\r\n              {IsGameStart ? (\r\n                <AllCam\r\n                  inCamHandler={inCamHandler}\r\n                  setCurrentGameState={setCurrentGameState}\r\n                  turn={turn}\r\n                  role={myRole}\r\n                  client={client}\r\n                  dead={dead}\r\n                />\r\n              ) : (\r\n                <PlayMap />\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Grid>\r\n            <Paper\r\n              elevation={3}\r\n              sx={{ minHeight: \"120px\", backgroundColor: \"rgba(30,30,30,0.95)\" }}\r\n            >\r\n              {/* 우상 */}\r\n              <NaviBar2\r\n                ref={NaviBarComRef}\r\n                IsGameStart={IsGameStart}\r\n                setIsGameStart={setIsGameStart}\r\n                client={client}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid sx={{ marginTop: \"25px\", height: \"100%\" }}>\r\n            {/* 우하 */}\r\n            <Paper\r\n              elevation={3}\r\n              sx={{ minHeight: \"650px\", maxHeight: \"650px\", backgroundColor: \"rgba(30,30,30,0.9)\" }}\r\n            >\r\n              <SideBar ref={sideComponentRef} client={client} />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* 간단 정보 포함 */}\r\n      <Modal\r\n        open={open}\r\n        onClose={finishGame}\r\n        aria-labelledby='modal-modal-title'\r\n        aria-describedby='modal-modal-description'\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\r\n            {currentGameState}\r\n          </Typography>\r\n          <Typography id='modal-modal-description' sx={{ mt: 2 }}>\r\n            마피아는\r\n            <MafList />\r\n            입니다.\r\n          </Typography>\r\n          {/* 확인 시 모달 닫기 && 세션 종료 && 대기방 복귀 */}\r\n          <Button onClick={finishGame}>확인</Button>\r\n          {/* 중첩 모달창 생성 */}\r\n          <Button>자세히</Button>\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={open}\r\n        onClose={finishGame}\r\n        aria-labelledby='modal-modal-title'\r\n        aria-describedby='modal-modal-description'\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\r\n            {currentGameState}\r\n          </Typography>\r\n          <Typography id='modal-modal-description' sx={{ mt: 2 }}>\r\n            마피아는\r\n            <MafList />\r\n            입니다.\r\n          </Typography>\r\n          {/* 확인 시 모달 닫기 && 세션 종료 && 대기방 복귀 */}\r\n          <Button onClick={finishGame}>확인</Button>\r\n          {/* 중첩 모달창 생성 */}\r\n          <Button>자세히</Button>\r\n        </Box>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GatherRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}