{"ast":null,"code":"var chromeMediaSource = 'screen';\nvar sourceId;\nvar screenCallback;\n\nif (typeof window !== 'undefined' && typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined') {\n  var isFirefox = typeof window.InstallTrigger !== 'undefined';\n  var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n  var isChrome = !!window.chrome && !isOpera;\n  window.addEventListener('message', function (event) {\n    if (event.origin != window.location.origin) {\n      return;\n    }\n\n    onMessageCallback(event.data);\n  });\n}\n\nfunction onMessageCallback(data) {\n  if (data == 'PermissionDeniedError') {\n    if (screenCallback) return screenCallback('PermissionDeniedError');else throw new Error('PermissionDeniedError');\n  }\n\n  if (data == 'rtcmulticonnection-extension-loaded') {\n    chromeMediaSource = 'desktop';\n  }\n\n  if (data.sourceId && screenCallback) {\n    screenCallback(sourceId = data.sourceId, data.canRequestAudioTrack === true);\n  }\n}\n\nfunction isChromeExtensionAvailable(callback) {\n  if (!callback) return;\n  if (chromeMediaSource == 'desktop') return callback(true);\n  window.postMessage('are-you-there', '*');\n  setTimeout(function () {\n    if (chromeMediaSource == 'screen') {\n      callback(false);\n    } else callback(true);\n  }, 2000);\n}\n\nfunction getSourceId(callback) {\n  if (!callback) throw '\"callback\" parameter is mandatory.';\n  if (sourceId) return callback(sourceId);\n  screenCallback = callback;\n  window.postMessage('get-sourceId', '*');\n}\n\nfunction getCustomSourceId(arr, callback) {\n  if (!arr || !arr.forEach) throw '\"arr\" parameter is mandatory and it must be an array.';\n  if (!callback) throw '\"callback\" parameter is mandatory.';\n  if (sourceId) return callback(sourceId);\n  screenCallback = callback;\n  window.postMessage({\n    'get-custom-sourceId': arr\n  }, '*');\n}\n\nfunction getSourceIdWithAudio(callback) {\n  if (!callback) throw '\"callback\" parameter is mandatory.';\n  if (sourceId) return callback(sourceId);\n  screenCallback = callback;\n  window.postMessage('audio-plus-tab', '*');\n}\n\nfunction getChromeExtensionStatus(extensionid, callback) {\n  if (isFirefox) return callback('not-chrome');\n\n  if (arguments.length != 2) {\n    callback = extensionid;\n    extensionid = 'lfcgfepafnobdloecchnfaclibenjold';\n  }\n\n  var image = document.createElement('img');\n  image.src = 'chrome-extension://' + extensionid + '/icon.png';\n\n  image.onload = function () {\n    chromeMediaSource = 'screen';\n    window.postMessage('are-you-there', '*');\n    setTimeout(function () {\n      if (chromeMediaSource == 'screen') {\n        callback('installed-disabled');\n      } else callback('installed-enabled');\n    }, 2000);\n  };\n\n  image.onerror = function () {\n    callback('not-installed');\n  };\n}\n\nfunction getScreenConstraintsWithAudio(callback) {\n  getScreenConstraints(callback, true);\n}\n\nfunction getScreenConstraints(callback, captureSourceIdWithAudio) {\n  sourceId = '';\n  var firefoxScreenConstraints = {\n    mozMediaSource: 'window',\n    mediaSource: 'window'\n  };\n  if (isFirefox) return callback(null, firefoxScreenConstraints);\n  var screen_constraints = {\n    mandatory: {\n      chromeMediaSource: chromeMediaSource,\n      maxWidth: screen.width > 1920 ? screen.width : 1920,\n      maxHeight: screen.height > 1080 ? screen.height : 1080\n    },\n    optional: []\n  };\n\n  if (chromeMediaSource == 'desktop' && !sourceId) {\n    if (captureSourceIdWithAudio) {\n      getSourceIdWithAudio(function (sourceId, canRequestAudioTrack) {\n        screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n\n        if (canRequestAudioTrack) {\n          screen_constraints.canRequestAudioTrack = true;\n        }\n\n        callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n      });\n    } else {\n      getSourceId(function (sourceId) {\n        screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n        callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n      });\n    }\n\n    return;\n  }\n\n  if (chromeMediaSource == 'desktop') {\n    screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n  }\n\n  callback(null, screen_constraints);\n}\n\nexports.getScreenConstraints = getScreenConstraints;\nexports.getScreenConstraintsWithAudio = getScreenConstraintsWithAudio;\nexports.isChromeExtensionAvailable = isChromeExtensionAvailable;\nexports.getChromeExtensionStatus = getChromeExtensionStatus;\nexports.getSourceId = getSourceId;","map":null,"metadata":{},"sourceType":"script"}