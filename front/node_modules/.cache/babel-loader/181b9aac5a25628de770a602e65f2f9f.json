{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2022 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OpenViduError = exports.OpenViduErrorName = void 0;\n/**\n * Defines property [[OpenViduError.name]]\n */\n\nvar OpenViduErrorName;\n\n(function (OpenViduErrorName) {\n  /**\n   * Browser is not supported by OpenVidu.\n   * Returned upon unsuccessful [[Session.connect]]\n   */\n  OpenViduErrorName[\"BROWSER_NOT_SUPPORTED\"] = \"BROWSER_NOT_SUPPORTED\";\n  /**\n   * The user hasn't granted permissions to the required input device when the browser asked for them.\n   * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n   */\n\n  OpenViduErrorName[\"DEVICE_ACCESS_DENIED\"] = \"DEVICE_ACCESS_DENIED\";\n  /**\n   * The required input device is probably being used by other process when the browser asked for it.\n   * This error can also be triggered when the user granted permission to use the devices but a hardware\n   * error occurred at the OS, browser or web page level, which prevented access to the device.\n   * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n   */\n\n  OpenViduErrorName[\"DEVICE_ALREADY_IN_USE\"] = \"DEVICE_ALREADY_IN_USE\";\n  /**\n   * The user hasn't granted permissions to capture some desktop screen when the browser asked for them.\n   * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n   */\n\n  OpenViduErrorName[\"SCREEN_CAPTURE_DENIED\"] = \"SCREEN_CAPTURE_DENIED\";\n  /**\n   * Browser does not support screen sharing.\n   * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n   */\n\n  OpenViduErrorName[\"SCREEN_SHARING_NOT_SUPPORTED\"] = \"SCREEN_SHARING_NOT_SUPPORTED\";\n  /**\n   * Only for Chrome, there's no screen sharing extension installed\n   * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n   */\n\n  OpenViduErrorName[\"SCREEN_EXTENSION_NOT_INSTALLED\"] = \"SCREEN_EXTENSION_NOT_INSTALLED\";\n  /**\n   * Only for Chrome, the screen sharing extension is installed but is disabled\n   * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n   */\n\n  OpenViduErrorName[\"SCREEN_EXTENSION_DISABLED\"] = \"SCREEN_EXTENSION_DISABLED\";\n  /**\n   * No video input device found with the provided deviceId (property [[PublisherProperties.videoSource]])\n   * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n   */\n\n  OpenViduErrorName[\"INPUT_VIDEO_DEVICE_NOT_FOUND\"] = \"INPUT_VIDEO_DEVICE_NOT_FOUND\";\n  /**\n   * No audio input device found with the provided deviceId (property [[PublisherProperties.audioSource]])\n   * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n   */\n\n  OpenViduErrorName[\"INPUT_AUDIO_DEVICE_NOT_FOUND\"] = \"INPUT_AUDIO_DEVICE_NOT_FOUND\";\n  /**\n   * There was an unknown error when trying to access the specified audio device\n   * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n   */\n\n  OpenViduErrorName[\"INPUT_AUDIO_DEVICE_GENERIC_ERROR\"] = \"INPUT_AUDIO_DEVICE_GENERIC_ERROR\";\n  /**\n   * Method [[OpenVidu.initPublisher]] or  [[OpenVidu.getUserMedia]] has been called with properties `videoSource` and `audioSource` of\n   * [[PublisherProperties]] parameter both set to *false* or *null*\n   */\n\n  OpenViduErrorName[\"NO_INPUT_SOURCE_SET\"] = \"NO_INPUT_SOURCE_SET\";\n  /**\n   * Some media property of [[PublisherProperties]] such as `frameRate` or `resolution` is not supported\n   * by the input devices (whenever it is possible they are automatically adjusted to the most similar value).\n   * Returned upon unsuccessful [[OpenVidu.initPublisher]] or [[OpenVidu.getUserMedia]]\n   */\n\n  OpenViduErrorName[\"PUBLISHER_PROPERTIES_ERROR\"] = \"PUBLISHER_PROPERTIES_ERROR\";\n  /**\n   * The client tried to call a method without the required permissions. This can occur for methods [[Session.publish]],\n   * [[Session.forceUnpublish]], [[Session.forceDisconnect]], [[Stream.applyFilter]], [[Stream.removeFilter]]\n   */\n\n  OpenViduErrorName[\"OPENVIDU_PERMISSION_DENIED\"] = \"OPENVIDU_PERMISSION_DENIED\";\n  /**\n   * There is no connection to the Session. This error will be thrown when any method requiring a connection to\n   * openvidu-server is called before successfully calling method [[Session.connect]]\n   */\n\n  OpenViduErrorName[\"OPENVIDU_NOT_CONNECTED\"] = \"OPENVIDU_NOT_CONNECTED\";\n  /**\n   * Error related to [Virtual Background](/en/stable/advanced-features/virtual-background/)\n   */\n\n  OpenViduErrorName[\"VIRTUAL_BACKGROUND_ERROR\"] = \"VIRTUAL_BACKGROUND_ERROR\";\n  /**\n   * Generic error\n   */\n\n  OpenViduErrorName[\"GENERIC_ERROR\"] = \"GENERIC_ERROR\";\n})(OpenViduErrorName = exports.OpenViduErrorName || (exports.OpenViduErrorName = {}));\n/**\n * Simple object to identify runtime errors on the client side\n */\n\n\nvar OpenViduError =\n/** @class */\nfunction () {\n  /**\n   * @hidden\n   */\n  function OpenViduError(name, message) {\n    this.name = name;\n    this.message = message;\n  }\n\n  return OpenViduError;\n}();\n\nexports.OpenViduError = OpenViduError;","map":null,"metadata":{},"sourceType":"script"}