{"ast":null,"code":"import _slicedToArray from \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\components\\\\GatherRoomPageCom\\\\PlayMap.js\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SavePosX, selectPosX } from \"../../redux/slice/GatherMapPosXSlice\";\nimport { SavePosY, selectPosY } from \"../../redux/slice/GatherMapPosYSlice\";\nimport { useBeforeunload } from \"react-beforeunload\";\nexport default function PlayMap(props) {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var mapSize = 700;\n  var charSize = 50;\n  var chairSize = 20;\n  var table = {\n    tbTop: 100,\n    tbLeft: 200,\n    width: 300,\n    height: 300\n  };\n  var chairs = [[40, 300], [40, 400], [160, 100], [300, 100], [450, 300], [450, 400], [160, 550], [300, 550]]; //맵 크기\n  //포커싱 지정을 위한 변수\n\n  var mapFocus = useRef(); //div태그를 아바타 객체로 지정\n\n  var myChar;\n  var keyPress = {},\n      pX = useRef(useSelector(selectPosX)),\n      pY = useRef(useSelector(selectPosY)),\n      speed = 5; //렌더링될 때마다 myChar가 #myCharacter 를 가르킴\n\n  useEffect(function () {\n    myChar = document.getElementById(\"myCharacter\");\n    console.log(\"myChar rendered\"); //랜더링 종료 시 인터벌 종료\n\n    return function () {\n      clearInterval(inputCheck);\n      console.log(\"pX : \", pX.current);\n      console.log(\"pY : \", pY.current);\n      dispatch(SavePosX(pX.current));\n      dispatch(SavePosY(pY.current));\n      console.log(\"render returned\");\n    };\n  }); //부드러운 움직임을 위한 변수 선언\n  //일정 초마다 키 입력 확인\n\n  var inputCheck = setInterval(function () {\n    if (keyPress[87]) pY.current -= speed;\n    if (keyPress[83]) pY.current += speed; // down - s\n\n    if (keyPress[65]) pX.current -= speed; // left - a\n\n    if (keyPress[68]) pX.current += speed; //테이블 충돌 감지\n\n    if (pX.current < table.tbLeft + table.width && pX.current + charSize > table.tbLeft && pY.current < table.tbTop + table.height && charSize + pY.current > table.tbTop) {\n      if (keyPress[87]) pY.current += speed;\n      if (keyPress[83]) pY.current -= speed; // down - s\n\n      if (keyPress[65]) pX.current += speed; // left - a\n\n      if (keyPress[68]) pX.current -= speed;\n    } //의자 충돌 감지\n\n\n    if (pY.current < 0) //외부 벽 충돌 감지\n      pY.current = 0;\n    if (pY.current >= mapSize - charSize) pY.current = mapSize - charSize;\n    if (pX.current < 0) pX.current = 0;\n    if (pX.current >= mapSize - charSize) pX.current = mapSize - charSize; //캐릭터 좌표 최신화\n\n    myChar.style.left = pX.current + \"px\";\n    myChar.style.top = pY.current + \"px\"; // console.log(\"interval\");\n  }, 16); //첫 렌더링될 때만 입력받는 input태그로 focus\n\n  useEffect(function () {\n    console.log(\"useEffect focus once\");\n    mapFocus.current.focus();\n  }, []); //맵 클릭 시 입력 포커싱 지정\n\n  var changeFocus = function changeFocus() {\n    mapFocus.current.focus();\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    keyPress[e.keyCode.toString()] = true;\n  };\n\n  var handleKeyUp = function handleKeyUp(e) {\n    keyPress[e.keyCode.toString()] = false;\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Value = _useState2[0],\n      setValue = _useState2[1];\n\n  useBeforeunload(function (e) {\n    if (Value !== \"\") e.preventDefault();\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    onClick: changeFocus,\n    style: {\n      width: mapSize,\n      height: mapSize,\n      background: \"orange\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"table\",\n    style: {\n      width: table.width,\n      height: table.height,\n      left: table.tbLeft,\n      top: table.tbTop,\n      background: \"green\",\n      position: \"absolute\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }), chairs.map(function (e, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: idx,\n      id: idx,\n      style: {\n        top: e[0],\n        left: e[1],\n        height: chairSize,\n        width: chairSize,\n        background: \"blue\",\n        position: \"absolute\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myCharacter\",\n    style: {\n      margin: \"0px\",\n      width: charSize,\n      height: charSize,\n      background: \"red\",\n      position: \"absolute\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    value: \"a\" // style={{ display: \"none\" }}\n    ,\n    type: \"text\",\n    ref: mapFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), \"playMap\");\n}","map":{"version":3,"names":["React","useRef","useEffect","useState","useSelector","useDispatch","SavePosX","selectPosX","SavePosY","selectPosY","useBeforeunload","PlayMap","props","dispatch","mapSize","charSize","chairSize","table","tbTop","tbLeft","width","height","chairs","mapFocus","myChar","keyPress","pX","pY","speed","document","getElementById","console","log","clearInterval","inputCheck","current","setInterval","style","left","top","focus","changeFocus","handleKeyDown","e","keyCode","toString","handleKeyUp","Value","setValue","preventDefault","background","position","map","idx","margin","target","value"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/GatherRoomPageCom/PlayMap.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SavePosX, selectPosX } from \"../../redux/slice/GatherMapPosXSlice\";\r\nimport { SavePosY, selectPosY } from \"../../redux/slice/GatherMapPosYSlice\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\n\r\nexport default function PlayMap(props) {\r\n    const dispatch = useDispatch();\r\n    const mapSize = 700;\r\n    const charSize = 50;\r\n    const chairSize = 20;\r\n    const table = {\r\n        tbTop: 100,\r\n        tbLeft: 200,\r\n        width: 300,\r\n        height: 300,\r\n    };\r\n    const chairs = [\r\n        [40, 300],\r\n        [40, 400],\r\n        [160, 100],\r\n        [300, 100],\r\n        [450, 300],\r\n        [450, 400],\r\n        [160, 550],\r\n        [300, 550],\r\n    ];\r\n\r\n    //맵 크기\r\n    //포커싱 지정을 위한 변수\r\n    const mapFocus = useRef();\r\n    //div태그를 아바타 객체로 지정\r\n    let myChar;\r\n\r\n    let keyPress = {},\r\n        pX = useRef(useSelector(selectPosX)),\r\n        pY = useRef(useSelector(selectPosY)),\r\n        speed = 5;\r\n    //렌더링될 때마다 myChar가 #myCharacter 를 가르킴\r\n    useEffect(() => {\r\n        myChar = document.getElementById(\"myCharacter\");\r\n        console.log(\"myChar rendered\");\r\n        //랜더링 종료 시 인터벌 종료\r\n        return () => {\r\n            clearInterval(inputCheck);\r\n\r\n            console.log(\"pX : \", pX.current);\r\n            console.log(\"pY : \", pY.current);\r\n            dispatch(SavePosX(pX.current));\r\n            dispatch(SavePosY(pY.current));\r\n            console.log(\"render returned\");\r\n        };\r\n    });\r\n\r\n    //부드러운 움직임을 위한 변수 선언\r\n    //일정 초마다 키 입력 확인\r\n    const inputCheck = setInterval(() => {\r\n        if (keyPress[87]) pY.current -= speed;\r\n        if (keyPress[83]) pY.current += speed; // down - s\r\n        if (keyPress[65]) pX.current -= speed; // left - a\r\n        if (keyPress[68]) pX.current += speed;\r\n\r\n        //테이블 충돌 감지\r\n        if (\r\n            pX.current < table.tbLeft + table.width &&\r\n            pX.current + charSize > table.tbLeft &&\r\n            pY.current < table.tbTop + table.height &&\r\n            charSize + pY.current > table.tbTop\r\n        ) {\r\n            if (keyPress[87]) pY.current += speed;\r\n            if (keyPress[83]) pY.current -= speed; // down - s\r\n            if (keyPress[65]) pX.current += speed; // left - a\r\n            if (keyPress[68]) pX.current -= speed;\r\n        }\r\n\r\n        //의자 충돌 감지\r\n\r\n        if (pY.current < 0)\r\n            //외부 벽 충돌 감지\r\n            pY.current = 0;\r\n        if (pY.current >= mapSize - charSize) pY.current = mapSize - charSize;\r\n        if (pX.current < 0) pX.current = 0;\r\n        if (pX.current >= mapSize - charSize) pX.current = mapSize - charSize;\r\n\r\n        //캐릭터 좌표 최신화\r\n        myChar.style.left = pX.current + \"px\";\r\n        myChar.style.top = pY.current + \"px\";\r\n        // console.log(\"interval\");\r\n    }, 16);\r\n\r\n    //첫 렌더링될 때만 입력받는 input태그로 focus\r\n    useEffect(() => {\r\n        console.log(\"useEffect focus once\");\r\n        mapFocus.current.focus();\r\n    }, []);\r\n\r\n    //맵 클릭 시 입력 포커싱 지정\r\n    const changeFocus = () => {\r\n        mapFocus.current.focus();\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        keyPress[e.keyCode.toString()] = true;\r\n    };\r\n    const handleKeyUp = (e) => {\r\n        keyPress[e.keyCode.toString()] = false;\r\n    };\r\n    const [Value, setValue] = useState(\"\");\r\n    useBeforeunload((e) => {\r\n        if (Value !== \"\") e.preventDefault();\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                id=\"map\"\r\n                onClick={changeFocus}\r\n                style={{\r\n                    width: mapSize,\r\n                    height: mapSize,\r\n                    background: \"orange\",\r\n                    position: \"relative\",\r\n                }}\r\n            >\r\n                <div\r\n                    id=\"table\"\r\n                    style={{\r\n                        width: table.width,\r\n                        height: table.height,\r\n                        left: table.tbLeft,\r\n                        top: table.tbTop,\r\n                        background: \"green\",\r\n                        position: \"absolute\",\r\n                    }}\r\n                ></div>\r\n\r\n                {chairs.map((e, idx) => {\r\n                    return (\r\n                        <div\r\n                            key={idx}\r\n                            id={idx}\r\n                            style={{\r\n                                top: e[0],\r\n                                left: e[1],\r\n                                height: chairSize,\r\n                                width: chairSize,\r\n                                background: \"blue\",\r\n                                position: \"absolute\",\r\n                            }}\r\n                        ></div>\r\n                    );\r\n                })}\r\n                <div\r\n                    id=\"myCharacter\"\r\n                    style={{\r\n                        margin: `0px`,\r\n                        width: charSize,\r\n                        height: charSize,\r\n                        background: \"red\",\r\n                        position: \"absolute\",\r\n                    }}\r\n                ></div>\r\n            </div>\r\n            <input\r\n                onChange={(e) => setValue(e.target.value)}\r\n                value={\"a\"}\r\n                // style={{ display: \"none\" }}\r\n                type=\"text\"\r\n                ref={mapFocus}\r\n                onKeyDown={handleKeyDown}\r\n                onKeyUp={handleKeyUp}\r\n                readOnly\r\n            />\r\n            playMap\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}