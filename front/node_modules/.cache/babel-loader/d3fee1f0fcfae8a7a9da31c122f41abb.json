{"ast":null,"code":"var _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\components\\\\WantedFriends.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Table, TableContainer, TableBody, Paper, TableRow, Button } from \"@mui/material\";\nimport SockJS from \"sockjs-client\";\nimport { over } from \"stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\n\nfunction Friends() {\n  _s();\n\n  const me = useSelector(state => state.user);\n  let headers = {\n    token: `${me.accessToken}`\n  }; // 친구 관련\n\n  const [wantFriend, setWantFriend] = useState([]); // 나에게 친구 신청한 목록\n\n  useEffect(() => {\n    // 친구 신청 목록\n    axios.get(\"/api/user/friend/request-list\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${me.accessToken}`\n      }\n    }).then(response => {\n      console.log('친구친구', response.data);\n      setWantFriend(response.data);\n    });\n    connect();\n  }, []); // 소켓 연결\n\n  const connect = () => {\n    let Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  }; // 구독 연결\n\n\n  const onConnected = () => {\n    stompClient.subscribe(`/sub/friend/${me.nickname}`, Received);\n  };\n\n  const onError = err => {\n    console.log(\"친구 소켓 연결 실패\", err);\n  }; // 소켓으로부터 받기\n\n\n  const Received = payload => {\n    var payloadData = JSON.parse(payload.body);\n\n    if (payloadData.header.type === \"offer-list\") {\n      // 나에게 친구 신청한 목록\n      setWantFriend(payloadData.friendResponseDataDto.users);\n    }\n  }; // 서버로 전송하기 (친구 수락, 친구 거절, 친구 삭제)\n\n\n  const SendF = (f, type) => {\n    if (stompClient.ws.readyState === 1) {\n      // 연결이 되었을 때 전송해야함\n      var sendData = {\n        header: {\n          type\n        },\n        data: {\n          friendSeq: f.friendSeq,\n          from: me.nickname,\n          to: f.nickname\n        }\n      };\n      return stompClient.send(`/pub/friend/${f.nickname}`, headers, JSON.stringify(sendData));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      style: {\n        padding: \"20px\",\n        height: '300px'\n      },\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"medium\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: wantFriend && wantFriend.map((wantF, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [wantF.nickname, /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                SendF(wantF, \"offer-accept\");\n              },\n              children: \"O\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                SendF(wantF, \"offer-deny\");\n              },\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Friends, \"A2zc+qV/3Er37DBeq+97+A3IfSs=\", false, function () {\n  return [useSelector];\n});\n\n_c = Friends;\nexport default Friends;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useEffect","useState","axios","useSelector","useDispatch","Table","TableContainer","TableBody","Paper","TableRow","Button","SockJS","over","stompClient","Friends","me","state","user","headers","token","accessToken","wantFriend","setWantFriend","get","Authorization","then","response","console","log","data","connect","Sock","onConnected","onError","subscribe","nickname","Received","err","payload","payloadData","JSON","parse","body","header","type","friendResponseDataDto","users","SendF","f","ws","readyState","sendData","friendSeq","from","to","send","stringify","padding","height","map","wantF","index"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/WantedFriends.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  TableBody,\r\n  Paper,\r\n  TableRow,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\n\r\nimport SockJS from \"sockjs-client\";\r\nimport { over } from \"stompjs\";\r\n\r\nvar stompClient = null;\r\nfunction Friends() {\r\n  const me = useSelector((state) => state.user);\r\n  let headers = {\r\n    token:`${me.accessToken}`\r\n  };\r\n  // 친구 관련\r\n  const [wantFriend, setWantFriend] = useState([]); // 나에게 친구 신청한 목록\r\n  useEffect(() => {\r\n    // 친구 신청 목록\r\n    axios\r\n      .get(\"/api/user/friend/request-list\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${me.accessToken}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log('친구친구',response.data)\r\n        setWantFriend(response.data);\r\n      });\r\n    connect();\r\n  }, []);\r\n  // 소켓 연결\r\n  const connect = () => {\r\n    let Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected, onError);\r\n  };\r\n  // 구독 연결\r\n  const onConnected = () => {\r\n    stompClient.subscribe(`/sub/friend/${me.nickname}`, Received);\r\n  };\r\n  const onError = (err) => {\r\n    console.log(\"친구 소켓 연결 실패\", err);\r\n  };\r\n\r\n  // 소켓으로부터 받기\r\n  const Received = (payload) => {\r\n    var payloadData = JSON.parse(payload.body);\r\n      if (payloadData.header.type === \"offer-list\") {\r\n        // 나에게 친구 신청한 목록\r\n        setWantFriend(payloadData.friendResponseDataDto.users);\r\n      }\r\n    \r\n  };\r\n\r\n  // 서버로 전송하기 (친구 수락, 친구 거절, 친구 삭제)\r\n  const SendF = (f, type) => {\r\n    if (stompClient.ws.readyState === 1) {\r\n      // 연결이 되었을 때 전송해야함\r\n      var sendData = {\r\n        header: {\r\n          type,\r\n        },\r\n        data: {\r\n          friendSeq: f.friendSeq,\r\n          from: me.nickname,\r\n          to: f.nickname,\r\n        },\r\n      };\r\n      return stompClient.send(`/pub/friend/${f.nickname}`, headers, JSON.stringify(sendData));\r\n    }\r\n  };\r\n  return (\r\n    <span>\r\n      <TableContainer style={{ padding: \"20px\", height:'300px' }} component={Paper}>\r\n        <Table size='medium'>\r\n          <TableBody>\r\n            {wantFriend &&\r\n              wantFriend.map((wantF, index) => (\r\n                <TableRow key={index}>\r\n                    {wantF.nickname}\r\n                    <Button\r\n                      onClick={() => {\r\n                        SendF(wantF, \"offer-accept\");\r\n                      }}\r\n                    >\r\n                      O\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        SendF(wantF, \"offer-deny\");\r\n                      }}\r\n                    >\r\n                      X\r\n                    </Button>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </span>\r\n  );\r\n}\r\nexport default Friends;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}