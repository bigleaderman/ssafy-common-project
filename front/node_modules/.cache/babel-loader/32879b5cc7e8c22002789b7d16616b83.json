{"ast":null,"code":"var _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\components\\\\RoomListPageCom\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Table, TableContainer, TableBody, Paper, TableRow, TableCell, Button, Stack, TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat(_ref) {\n  _s();\n\n  let {\n    Chats,\n    sendChat\n  } = _ref;\n  const me = useSelector(state => state.user); // 채팅 스크롤 아래로 고정\n\n  const scrollRef = useRef();\n  useEffect(() => {\n    scrollRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\"\n    });\n  }, [Chats]); // 내가 보내는 채팅\n\n  const [myChat, setMyChat] = useState({\n    header: {\n      type: \"chat\"\n    },\n    data: {\n      nickname: me.nickname,\n      message: \"\"\n    }\n  }); // 1. 채팅 적기\n\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setMyChat({ ...myChat,\n      data: {\n        nickname: me.nickname,\n        message: value\n      }\n    });\n  }; // 2. 채팅 전송(버튼 누르기, 엔터)\n\n\n  const sendMyChat = () => {\n    if (myChat.data.message) {\n      sendChat(myChat);\n    }\n\n    setMyChat({ ...myChat,\n      data: {\n        nickname: me.nickname,\n        message: \"\"\n      }\n    });\n  }; // 2-1. 엔터 키 입력으로 채팅 전송하기\n\n\n  const handleOnKeyPress = e => {\n    if (e.key === \"Enter\" && myChat.data.message) {\n      sendMyChat(myChat); // Enter 입력이 되면 클릭 이벤트 실행\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 1,\n      backgroundColor: \"rgba(30,30,30,0.9)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        height: \"145px\",\n        mb: 1,\n        backgroundColor: \"rgba(30,30,30,0.9)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          ref: scrollRef,\n          children: Chats && Chats.map((chat, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                p: 0.5,\n                color: \"#ccc\"\n              },\n              children: [chat.data.nickname, \" : \", chat.data.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        InputProps: {\n          sx: {\n            \"& input\": {\n              color: \"#ccc\"\n            }\n          }\n        },\n        fullWidth: true,\n        id: \"outlined-basic\",\n        placeholder: \"Chat\",\n        size: \"small\",\n        value: myChat.data.message,\n        onChange: e => {\n          handleMessage(e);\n        },\n        onKeyPress: e => {\n          handleOnKeyPress(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        sx: {\n          height: '50%'\n        },\n        onClick: sendMyChat,\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"rsX3W30xJbL0IGyj7gyY0b/j7mI=\", false, function () {\n  return [useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useSelector","Table","TableContainer","TableBody","Paper","TableRow","TableCell","Button","Stack","TextField","Chat","Chats","sendChat","me","state","user","scrollRef","current","scrollIntoView","behavior","block","myChat","setMyChat","header","type","data","nickname","message","handleMessage","event","value","target","sendMyChat","handleOnKeyPress","e","key","p","backgroundColor","height","mb","map","chat","index","color","sx"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/components/RoomListPageCom/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  TableBody,\r\n  Paper,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\nfunction Chat({ Chats, sendChat }) {\r\n  const me = useSelector((state) => state.user);\r\n\r\n  // 채팅 스크롤 아래로 고정\r\n  const scrollRef = useRef();\r\n  useEffect(() => {\r\n    scrollRef.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n  }, [Chats]);\r\n\r\n  // 내가 보내는 채팅\r\n  const [myChat, setMyChat] = useState({\r\n    header: {\r\n      type: \"chat\",\r\n    },\r\n    data: {\r\n      nickname: me.nickname,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  // 1. 채팅 적기\r\n  const handleMessage = (event) => {\r\n    const { value } = event.target;\r\n    setMyChat({\r\n      ...myChat,\r\n      data: {\r\n        nickname: me.nickname,\r\n        message: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  // 2. 채팅 전송(버튼 누르기, 엔터)\r\n  const sendMyChat = () => {\r\n    if (myChat.data.message) {\r\n      sendChat(myChat);\r\n    }\r\n    setMyChat({\r\n      ...myChat,\r\n      data: {\r\n        nickname: me.nickname,\r\n        message: \"\",\r\n      },\r\n    });\r\n  };\r\n\r\n  // 2-1. 엔터 키 입력으로 채팅 전송하기\r\n  const handleOnKeyPress = (e) => {\r\n    if (e.key === \"Enter\" && myChat.data.message) {\r\n      sendMyChat(myChat); // Enter 입력이 되면 클릭 이벤트 실행\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper sx = {{p:1, backgroundColor:\"rgba(30,30,30,0.9)\"}}>\r\n      <TableContainer component={Paper} sx={{ height: \"145px\",mb:1, backgroundColor:\"rgba(30,30,30,0.9)\" }}>\r\n        <Table>\r\n          <TableBody ref={scrollRef}>\r\n            {Chats &&\r\n              Chats.map((chat, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell sx={{p:0.5, color:\"#ccc\"}}>\r\n                    {chat.data.nickname} : {chat.data.message}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Stack direction='row' justifyContent='center' alignItems='center' spacing={1}>\r\n        <TextField\r\n          InputProps={{\r\n            sx: {\r\n                \"& input\": {\r\n                    color: \"#ccc\"\r\n                }\r\n            }\r\n          }}\r\n          fullWidth\r\n          id='outlined-basic'\r\n          placeholder='Chat'\r\n          size='small'\r\n          value={myChat.data.message}\r\n          onChange={(e) => {\r\n            handleMessage(e);\r\n          }}\r\n          onKeyPress={(e) => {\r\n            handleOnKeyPress(e);\r\n          }}\r\n        />\r\n        <Button variant='outlined' sx={{ height: '50%' }} onClick={sendMyChat}>\r\n          send\r\n        </Button>\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n}\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}