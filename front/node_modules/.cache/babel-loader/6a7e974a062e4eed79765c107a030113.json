{"ast":null,"code":"import _toConsumableArray from \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\SSAFY\\\\2nd semester\\\\S07P12D106\\\\front\\\\src\\\\pages\\\\RoomListPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Nav from \"../components/RoomListPageCom/Nav\";\nimport SideBar from \"../components/RoomListPageCom/SideBar\";\nimport RoomList from \"../components/RoomListPageCom/RoomList\";\nimport MyProfile from \"../components/RoomListPageCom/MyProfile\";\nimport Chat from \"../components/RoomListPageCom/Chat\";\nimport { Container, Stack } from \"@mui/material\";\nimport SockJS from \"sockjs-client\";\nimport { over } from \"stompjs\";\nimport { useSelector } from \"react-redux\";\nvar stompClient = null;\n\nfunction RoomListPage() {\n  var me = useSelector(function (state) {\n    return state.user;\n  });\n  console.log(me); // 채팅 관련 데이터\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Chats = _useState2[0],\n      setChats = _useState2[1]; // 채팅 목록\n  // 로그인 유저 목록\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loginUser = _useState4[0],\n      setLoginUser = _useState4[1]; // roomListPage 들어오면 연결\n\n\n  useEffect(function () {\n    connect();\n  }, []);\n\n  var connect = function connect() {\n    var Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  }; // 구독 연결\n\n\n  var onConnected = function onConnected() {\n    console.log(\"구독 연결\");\n    stompClient.subscribe(\"/sub/lobby\", Received);\n    var data = {\n      header: {\n        type: \"join\"\n      },\n      data: {\n        token: me.accessToken,\n        nickname: me.nickname\n      }\n    };\n    stompClient.send(\"/pub/lobby\", {}, JSON.stringify(data));\n  };\n\n  var onError = function onError(err) {\n    console.log(err);\n  }; // 서버로부터 받기\n\n\n  var Received = function Received(payload) {\n    var payloadData = JSON.parse(payload.body); // JSON 문자열을 JavaScript 객체로 변환\n\n    if (payloadData.header.type === \"chat\") {\n      Chats.push(payloadData);\n      setChats(_toConsumableArray(Chats));\n    } else {\n      if (payloadData.header.type === \"join\") {\n        console.log('서버가 주는 로그인된 유저 목록', payloadData);\n        setLoginUser(payloadData.data.users);\n      }\n    }\n  }; // 서버로 전송하기 (내가 쓴 채팅 전송)\n\n\n  var Send = function Send(data) {\n    console.log(stompClient); // waitForConnection(stompClient,function() {\n    //     stompClient.send(\"/pub/messages\", {type: \"chat\"}, JSON.stringify(data));\n    //     console.log('채팅 보냈습니다.')\n    // })\n\n    if (stompClient.ws.readyState === 1) {\n      console.log(\"보낸다\");\n      return stompClient.send(\"/pub/lobby\", {}, JSON.stringify(data));\n    }\n  };\n\n  var SendF = function SendF(f, type) {\n    console.log(\"친구신청합니다.\", f);\n    console.log(type);\n\n    if (stompClient.ws.readyState === 1) {\n      // 연결이 되었을 때 전송해야함\n      console.log(\"친구 신청 보내요\");\n      var sendData = {\n        header: {\n          type: type\n        },\n        data: {\n          friendSeq: null,\n          from: me.nickname,\n          to: f.nickname\n        }\n      };\n      return stompClient.send(\"/pub/friend/\".concat(f.nickname), {}, JSON.stringify(sendData));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Stack, {\n    direction: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    loginUser: loginUser,\n    SendF: SendF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(MyProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Stack, {\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(RoomList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Chat, {\n    Chats: Chats,\n    Send: Send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nexport default RoomListPage;","map":{"version":3,"names":["React","useState","useEffect","Nav","SideBar","RoomList","MyProfile","Chat","Container","Stack","SockJS","over","useSelector","stompClient","RoomListPage","me","state","user","console","log","Chats","setChats","loginUser","setLoginUser","connect","Sock","onConnected","onError","subscribe","Received","data","header","type","token","accessToken","nickname","send","JSON","stringify","err","payload","payloadData","parse","body","push","users","Send","ws","readyState","SendF","f","sendData","friendSeq","from","to","mt"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/src/pages/RoomListPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Nav from \"../components/RoomListPageCom/Nav\";\r\nimport SideBar from \"../components/RoomListPageCom/SideBar\";\r\nimport RoomList from \"../components/RoomListPageCom/RoomList\";\r\nimport MyProfile from \"../components/RoomListPageCom/MyProfile\";\r\nimport Chat from \"../components/RoomListPageCom/Chat\";\r\nimport { Container, Stack } from \"@mui/material\";\r\n\r\n\r\nimport SockJS from \"sockjs-client\";\r\nimport { over } from \"stompjs\";\r\n\r\nimport { useSelector} from \"react-redux\";\r\n\r\n\r\nvar stompClient = null;\r\nfunction RoomListPage() {\r\n    const me = useSelector((state) => state.user);\r\n    console.log(me)\r\n    // 채팅 관련 데이터\r\n    const [Chats, setChats] = useState([]); // 채팅 목록\r\n    // 로그인 유저 목록\r\n    const [loginUser, setLoginUser] = useState([]);\r\n\r\n    // roomListPage 들어오면 연결\r\n    useEffect(() => {\r\n        connect();\r\n    }, []);\r\n    const connect = () => {\r\n        let Sock = new SockJS(\"https://i7d106.p.ssafy.io:8080/ws\");\r\n        stompClient = over(Sock);\r\n        stompClient.connect({}, onConnected, onError);\r\n    };\r\n    // 구독 연결\r\n    const onConnected = () => {\r\n        console.log(\"구독 연결\");\r\n        stompClient.subscribe(\"/sub/lobby\", Received);\r\n        const data = {\r\n            header:{\r\n                type:\"join\",\r\n            },\r\n            data:{\r\n                token: me.accessToken,\r\n                nickname:me.nickname,\r\n            }\r\n        }\r\n        stompClient.send(\"/pub/lobby\", {}, JSON.stringify(data));\r\n    };\r\n\r\n    const onError = (err) => {\r\n        console.log(err);\r\n    };\r\n    // 서버로부터 받기\r\n    const Received = (payload) => {\r\n        var payloadData = JSON.parse(payload.body); // JSON 문자열을 JavaScript 객체로 변환\r\n        if (payloadData.header.type === \"chat\") {\r\n            Chats.push(payloadData);\r\n            setChats([...Chats]);\r\n        } else {\r\n            if (payloadData.header.type === \"join\") {\r\n                console.log('서버가 주는 로그인된 유저 목록', payloadData)\r\n                setLoginUser(payloadData.data.users);\r\n            }\r\n        }\r\n    };\r\n\r\n    // 서버로 전송하기 (내가 쓴 채팅 전송)\r\n    const Send = (data) => {\r\n        console.log(stompClient);\r\n        // waitForConnection(stompClient,function() {\r\n        //     stompClient.send(\"/pub/messages\", {type: \"chat\"}, JSON.stringify(data));\r\n        //     console.log('채팅 보냈습니다.')\r\n        // })\r\n        if (stompClient.ws.readyState === 1) {\r\n            console.log(\"보낸다\");\r\n            return stompClient.send(\"/pub/lobby\", {}, JSON.stringify(data));\r\n        }\r\n    };\r\n    const SendF = (f, type) => {\r\n        console.log(\"친구신청합니다.\", f);\r\n        console.log(type)\r\n        if (stompClient.ws.readyState === 1) {\r\n            // 연결이 되었을 때 전송해야함\r\n            console.log(\"친구 신청 보내요\");\r\n            var sendData = {\r\n                header: {\r\n                    type,\r\n                },\r\n                data: {\r\n                    friendSeq: null,\r\n                    from: me.nickname,\r\n                    to: f.nickname,\r\n                },\r\n            };\r\n            return stompClient.send(\r\n                `/pub/friend/${f.nickname}`,\r\n                {},\r\n                JSON.stringify(sendData)\r\n            );\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\" sx={{ mt: 1 }}>\r\n                <Stack\r\n                    direction=\"column\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                >\r\n                    <Nav />\r\n                    <Stack\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        spacing={1}\r\n                    >\r\n                        <Stack\r\n                            direction=\"column\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={1}\r\n                        >\r\n                            <SideBar loginUser={loginUser} SendF={SendF} />\r\n                            <MyProfile />\r\n                        </Stack>\r\n                        <Stack\r\n                            direction=\"column\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={1}\r\n                        >\r\n                            <RoomList />\r\n                            <Chat Chats={Chats} Send={Send} />\r\n                        </Stack>\r\n                    </Stack>\r\n                </Stack>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\nexport default RoomListPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}