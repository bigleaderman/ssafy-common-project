{"ast":null,"code":"/**\n  # normalice\n\n  Normalize an ice server configuration object (or plain old string) into a format\n  that is usable in all browsers supporting WebRTC.  Primarily this module is designed\n  to help with the transition of the `url` attribute of the configuration object to\n  the `urls` attribute.\n\n  ## Example Usage\n\n  <<< examples/simple.js\n\n**/\nvar protocols = ['stun:', 'turn:'];\n\nmodule.exports = function (input) {\n  var url = (input || {}).url || input;\n  var protocol;\n  var parts;\n  var output = {}; // if we don't have a string url, then allow the input to passthrough\n\n  if (typeof url != 'string' && !(url instanceof String)) {\n    return input;\n  } // trim the url string, and convert to an array\n\n\n  url = url.trim(); // if the protocol is not known, then passthrough\n\n  protocol = protocols[protocols.indexOf(url.slice(0, 5))];\n\n  if (!protocol) {\n    return input;\n  } // now let's attack the remaining url parts\n\n\n  url = url.slice(5);\n  parts = url.split('@');\n  output.username = input.username;\n  output.credential = input.credential; // if we have an authentication part, then set the credentials\n\n  if (parts.length > 1) {\n    url = parts[1];\n    parts = parts[0].split(':'); // add the output credential and username\n\n    output.username = parts[0];\n    output.credential = (input || {}).credential || parts[1] || '';\n  }\n\n  output.url = protocol + url;\n  output.urls = [output.url];\n  return output;\n};","map":{"version":3,"names":["protocols","module","exports","input","url","protocol","parts","output","String","trim","indexOf","slice","split","username","credential","length","urls"],"sources":["C:/SSAFY/2nd semester/S07P12D106/front/node_modules/normalice/index.js"],"sourcesContent":["/**\n  # normalice\n\n  Normalize an ice server configuration object (or plain old string) into a format\n  that is usable in all browsers supporting WebRTC.  Primarily this module is designed\n  to help with the transition of the `url` attribute of the configuration object to\n  the `urls` attribute.\n\n  ## Example Usage\n\n  <<< examples/simple.js\n\n**/\n\nvar protocols = [\n  'stun:',\n  'turn:'\n];\n\nmodule.exports = function(input) {\n  var url = (input || {}).url || input;\n  var protocol;\n  var parts;\n  var output = {};\n\n  // if we don't have a string url, then allow the input to passthrough\n  if (typeof url != 'string' && (! (url instanceof String))) {\n    return input;\n  }\n\n  // trim the url string, and convert to an array\n  url = url.trim();\n\n  // if the protocol is not known, then passthrough\n  protocol = protocols[protocols.indexOf(url.slice(0, 5))];\n  if (! protocol) {\n    return input;\n  }\n\n  // now let's attack the remaining url parts\n  url = url.slice(5);\n  parts = url.split('@');\n\n  output.username = input.username;\n  output.credential = input.credential;\n  // if we have an authentication part, then set the credentials\n  if (parts.length > 1) {\n    url = parts[1];\n    parts = parts[0].split(':');\n\n    // add the output credential and username\n    output.username = parts[0];\n    output.credential = (input || {}).credential || parts[1] || '';\n  }\n\n  output.url = protocol + url;\n  output.urls = [ output.url ];\n\n  return output;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,SAAS,GAAG,CACd,OADc,EAEd,OAFc,CAAhB;;AAKAC,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;EAC/B,IAAIC,GAAG,GAAG,CAACD,KAAK,IAAI,EAAV,EAAcC,GAAd,IAAqBD,KAA/B;EACA,IAAIE,QAAJ;EACA,IAAIC,KAAJ;EACA,IAAIC,MAAM,GAAG,EAAb,CAJ+B,CAM/B;;EACA,IAAI,OAAOH,GAAP,IAAc,QAAd,IAA2B,EAAGA,GAAG,YAAYI,MAAlB,CAA/B,EAA2D;IACzD,OAAOL,KAAP;EACD,CAT8B,CAW/B;;;EACAC,GAAG,GAAGA,GAAG,CAACK,IAAJ,EAAN,CAZ+B,CAc/B;;EACAJ,QAAQ,GAAGL,SAAS,CAACA,SAAS,CAACU,OAAV,CAAkBN,GAAG,CAACO,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAlB,CAAD,CAApB;;EACA,IAAI,CAAEN,QAAN,EAAgB;IACd,OAAOF,KAAP;EACD,CAlB8B,CAoB/B;;;EACAC,GAAG,GAAGA,GAAG,CAACO,KAAJ,CAAU,CAAV,CAAN;EACAL,KAAK,GAAGF,GAAG,CAACQ,KAAJ,CAAU,GAAV,CAAR;EAEAL,MAAM,CAACM,QAAP,GAAkBV,KAAK,CAACU,QAAxB;EACAN,MAAM,CAACO,UAAP,GAAoBX,KAAK,CAACW,UAA1B,CAzB+B,CA0B/B;;EACA,IAAIR,KAAK,CAACS,MAAN,GAAe,CAAnB,EAAsB;IACpBX,GAAG,GAAGE,KAAK,CAAC,CAAD,CAAX;IACAA,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAL,CAASM,KAAT,CAAe,GAAf,CAAR,CAFoB,CAIpB;;IACAL,MAAM,CAACM,QAAP,GAAkBP,KAAK,CAAC,CAAD,CAAvB;IACAC,MAAM,CAACO,UAAP,GAAoB,CAACX,KAAK,IAAI,EAAV,EAAcW,UAAd,IAA4BR,KAAK,CAAC,CAAD,CAAjC,IAAwC,EAA5D;EACD;;EAEDC,MAAM,CAACH,GAAP,GAAaC,QAAQ,GAAGD,GAAxB;EACAG,MAAM,CAACS,IAAP,GAAc,CAAET,MAAM,CAACH,GAAT,CAAd;EAEA,OAAOG,MAAP;AACD,CAxCD"},"metadata":{},"sourceType":"script"}